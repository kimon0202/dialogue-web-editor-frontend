{"version":3,"sources":["stores/connectionsStore.ts","stores/filesStore.ts","stores/nodesStore.ts","stores/index.ts","components/Button/styles.ts","components/Button/index.tsx","components/Space/index.ts","components/Sidebar/styles.ts","components/Sidebar/index.tsx","types/ItemTypes.ts","utils/getStyles.ts","components/Nodes/Connection.tsx","components/Nodes/styles.ts","components/Nodes/DialogueNode.tsx","components/Nodes/DialogueNodeDragPreview.tsx","components/Nodes/DraggableDialogueNode.tsx","components/DragAndDrop/styles.ts","components/DragAndDrop/CustomDragLayer.tsx","components/ContextMenu/styles.ts","components/ContextMenu/index.tsx","utils/useWindowDimensions.ts","components/DragAndDrop/ConnectionsContainer.tsx","components/DragAndDrop/DragAndDropContainerGlobal.tsx","components/DragAndDrop/DragAroundCustomLayer.tsx","components/Modal/styles.ts","components/Modal/index.tsx","components/Select/index.tsx","components/TextArea/index.tsx","pages/Main/styles.ts","pages/Main/LoadModal.tsx","pages/Main/index.tsx","styles/global.ts","index.tsx","styles/themes/light.ts"],"names":["ConnectionsStore","rootStore","connections","this","fromId","toId","key","newMap","update","$set","id","connectionsKeys","forEach","indexOf","Object","keys","decorate","observable","addConnection","action","removeConnnection","computed","FilesStore","file","loadFileModal","state","connection","nodesStore","nodes","connectionsStore","setModal","loadFileContent","NodesStore","left","top","dialogueType","undefined","text","activeNodeModal","mode","$merge","newNodes","nodesKeys","filesStore","opts","filter","activeNode","possibleOptions","option","push","label","value","updateNodePosition","addNode","setActiveNode","reset","activeNodeOptions","showModal","RootStoreContext","createContext","StyledButton","styled","button","props","theme","colors","accent","shade","Button","children","onClick","type","Space","div","width","height","Container","sidebar","TitleContainer","ButtonsContainer","Sidebar","observer","useContext","handleFileDownload","a","json","JSON","stringify","blob","Blob","URL","createObjectURL","href","link","document","createElement","download","name","body","appendChild","click","removeChild","toJS","createdAt","Date","now","ItemTypes","getStyles","isDragging","transform","position","WebkitTransform","opacity","getItemStyles","initialOffset","currentOffset","display","x","y","Connection","from","x1","y1","to","x2","y2","markerMid","stroke","strokeWidth","strokeLinecap","markerUnits","d","linearGradient","colorStops","toDirection","fallback","IconsContainer","ContentContainer","textSecondary","DeleteIcon","Delete","EditIcon","Edit","DialogueNode","identifier","DialogueNodeDragPreview","DraggableDialogueNode","useDrag","item","collect","monitor","drag","preview","useEffect","getEmptyImage","captureDraggingState","ref","style","background","DragLayer","CustomDragLayer","useDragLayer","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","ContextItem","last","ContextMenu","options","visible","changeVisibility","useState","setPosition","handleContextMenu","event","preventDefault","clientX","clientY","addEventListener","removeEventListener","map","index","arr","toString","length","callback","handleContextMenuBlur","getWindowDimensions","window","innerWidth","innerHeight","ConnectionsContainer","memo","zIndex","markerWidth","markerHeight","refX","refY","orient","points","fromNode","toNode","DragAndDropContainerGlobal","showContextMenu","setShowContextMenu","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","moveNode","useCallback","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","numberOfNodes","xPos","yPos","onContextMenu","renderNode","DragAroundCustomLayer","Backdrop","Modal","show","onBackdropClick","Select","multiple","placeholder","values","setValues","selectRef","useRef","useField","fieldName","registerField","defaultValue","current","getValue","setValue","className","htmlFor","onChange","hasSelectAll","labelledBy","vals","target","TextArea","rest","textareaRef","error","path","fontSize","padding","resize","ModalContainer","ModalTitle","h3","ModalContent","Center","BoxContainer","Form","RawForm","LoadModal","onDrop","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","content","result","parse","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","Main","editNodeFormRef","handleEditFormSubmit","data","inConnections","outConnections","node","deleteNode","initialText","initialDialogueType","tempIn","tempOut","handleGetInitialConnections","onSubmit","initialData","autoFocus","submitForm","renderModal","DndProvider","backend","GlobalStyles","createGlobalStyle","SidebarContainer","RootContainer","ReactDOM","render","StrictMode","primary","getElementById"],"mappings":"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","file":"static/js/main.9ac2b222.chunk.js","sourcesContent":["import update from 'immutability-helper';\nimport { action, computed, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { ConnectionMap } from '../types/Connection';\n\nclass ConnectionsStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  connections: ConnectionMap = {};\n\n  public addConnection(fromId: string, toId: string) {\n    const key = `${fromId}|${toId}`;\n\n    const newMap = update(this.connections, {\n      [key]: {\n        $set: {\n          fromId,\n          toId,\n        },\n      },\n    });\n\n    this.connections = newMap;\n  }\n\n  public removeConnnection(id: string) {\n    this.connectionsKeys.forEach((key) => {\n      if (key.indexOf(id) !== -1) {\n        delete this.connections[key];\n      }\n    });\n  }\n\n  public get connectionsKeys() {\n    return Object.keys(this.connections);\n  }\n}\n\ndecorate(ConnectionsStore, {\n  connections: observable,\n  addConnection: action,\n  removeConnnection: action,\n  connectionsKeys: computed,\n});\n\nexport default ConnectionsStore;\n","import update from 'immutability-helper';\nimport { action, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { ConnectionMap } from '../types/Connection';\nimport { FileData } from '../types/FileData';\n\nclass FilesStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  file: FileData = {} as FileData;\n  loadFileModal = false;\n\n  public setModal(state: boolean) {\n    this.loadFileModal = state;\n  }\n\n  public loadFileContent() {\n    if (!this.file) {\n      return;\n    }\n\n    let connections: ConnectionMap = {};\n\n    this.file.connections.forEach((connection) => {\n      const key = `${connection.fromId}|${connection.toId}`;\n\n      connections = update(connections, {\n        [key]: {\n          $set: {\n            fromId: connection.fromId,\n            toId: connection.toId,\n          },\n        },\n      });\n    });\n\n    this.rootStore.nodesStore.nodes = this.file.nodes;\n    this.rootStore.connectionsStore.connections = connections;\n  }\n}\n\ndecorate(FilesStore, {\n  file: observable,\n  loadFileModal: observable,\n  setModal: action,\n  loadFileContent: action,\n});\n\nexport default FilesStore;\n","import update from 'immutability-helper';\nimport { action, computed, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { FileData } from '../types/FileData';\nimport { NodeMap } from '../types/Node';\n\ninterface ActiveNodeModal {\n  id: string;\n  mode: 'delete' | 'edit' | null;\n}\n\nclass NodesStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  nodes: NodeMap = {\n    'id:rootNode': {\n      id: 'id:rootNode',\n      left: 80,\n      top: 20,\n      dialogueType: undefined,\n      text: '',\n    },\n  };\n\n  activeNodeModal: ActiveNodeModal = {\n    id: '',\n    mode: null,\n  };\n\n  public updateNodePosition(id: string, left: number, top: number) {\n    this.nodes = update(this.nodes, {\n      [id]: {\n        $merge: { left, top },\n      },\n    });\n  }\n\n  public addNode(id: string, left: number, top: number) {\n    const newNodes = update(this.nodes, {\n      [id]: {\n        $set: {\n          left,\n          top,\n          id,\n          dialogueType: undefined,\n          text: '',\n        },\n      },\n    });\n\n    this.nodes = newNodes;\n  }\n\n  public deleteNode(id: string) {\n    this.nodesKeys.forEach((key) => {\n      if (key === id) {\n        delete this.nodes[id];\n      }\n    });\n  }\n\n  public setActiveNode(id: string, mode: 'delete' | 'edit' | null) {\n    this.activeNodeModal = {\n      id,\n      mode,\n    };\n  }\n\n  public reset() {\n    this.nodes = {\n      'id:rootNode': {\n        id: 'id:rootNode',\n        left: 80,\n        top: 20,\n        dialogueType: undefined,\n        text: '',\n      },\n    };\n    this.rootStore.connectionsStore.connections = {};\n    this.rootStore.filesStore.file = {} as FileData;\n  }\n\n  public get activeNode() {\n    return this.nodes[this.activeNodeModal.id];\n  }\n\n  public get activeNodeOptions() {\n    const opts = this.nodesKeys.filter((key) => key !== this.activeNode.id);\n    const possibleOptions: { label: string; value: string }[] = [];\n\n    opts.forEach((option) => {\n      possibleOptions.push({\n        label: option,\n        value: option,\n      });\n    });\n\n    return possibleOptions;\n  }\n\n  public get nodesKeys() {\n    return Object.keys(this.nodes);\n  }\n\n  public get showModal() {\n    return this.activeNodeModal.id !== '';\n  }\n}\n\ndecorate(NodesStore, {\n  nodes: observable,\n  activeNodeModal: observable,\n  updateNodePosition: action,\n  addNode: action,\n  setActiveNode: action,\n  reset: action,\n  activeNode: computed,\n  activeNodeOptions: computed,\n  nodesKeys: computed,\n  showModal: computed,\n});\n\nexport default NodesStore;\n","import { createContext } from 'react';\r\n\r\nimport ConnectionsStore from './connectionsStore';\r\nimport FilesStore from './filesStore';\r\nimport NodesStore from './nodesStore';\r\n\r\nexport class RootStore {\r\n  public nodesStore: NodesStore = new NodesStore(this);\r\n  public connectionsStore: ConnectionsStore = new ConnectionsStore(this);\r\n  public filesStore: FilesStore = new FilesStore(this);\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import { shade } from 'polished';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  background: ${(props) => props.theme.colors.accent};\r\n  cursor: pointer;\r\n\r\n  border: none;\r\n  outline: none;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 150px;\r\n  height: 60px;\r\n\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n\r\n  :hover {\r\n    background: ${(props) => shade(0.25, props.theme.colors.accent as string)};\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledButton } from './styles';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactElement | string;\r\n  onClick?(): void;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  width: number | string;\r\n  height: number | string;\r\n}\r\n\r\nexport const Space = styled.div`\r\n  width: ${(props: Props) =>\r\n    typeof props.width === typeof 'aa' ? props.width : `${props.width}px`};\r\n\r\n  height: ${(props: Props) =>\r\n    typeof props.height === typeof 'aa' ? props.height : `${props.height}px`};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${(props) => props.theme.colors.sidebar};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 10%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n\r\n  color: #fff;\r\n\r\n  padding-top: 20px;\r\n  z-index: 200;\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { toJS } from 'mobx';\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext } from 'react';\n\nimport { RootStoreContext } from '../../stores';\nimport { Connection } from '../../types/Connection';\nimport { FileData } from '../../types/FileData';\nimport Button from '../Button';\nimport { Space } from '../Space';\nimport { ButtonsContainer, Container, TitleContainer } from './styles';\n\nconst Sidebar: React.FC = observer(() => {\n  const { nodesStore, connectionsStore, filesStore } = useContext(\n    RootStoreContext,\n  );\n\n  const handleSave = () => {\n    const connections: Connection[] = [];\n\n    connectionsStore.connectionsKeys.forEach((key) => {\n      connections.push(toJS(connectionsStore.connections[key]));\n    });\n\n    const file: FileData = {\n      name: 'NewFile',\n      createdAt: Date.now(),\n      nodes: nodesStore.nodes,\n      connections,\n    };\n\n    filesStore.file = file;\n  };\n\n  const handleFileDownload = async () => {\n    const json = JSON.stringify(filesStore.file);\n    const blob = new Blob([json], { type: 'application/json' });\n    const href = await URL.createObjectURL(blob);\n\n    const link = document.createElement('a');\n    link.href = href;\n    link.download = filesStore.file.name + '.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <Container>\n      <TitleContainer>Dialogue Editor</TitleContainer>\n      <Space width=\"100%\" height={30} />\n      <ButtonsContainer>\n        <Button\n          onClick={() => {\n            nodesStore.reset();\n            nodesStore.setActiveNode('', null);\n          }}\n        >\n          Clear\n        </Button>\n        <Space width=\"100%\" height={20} />\n        <Button onClick={handleSave}>Save</Button>\n        <Space width=\"100%\" height={20} />\n        <Button onClick={() => filesStore.setModal(true)}>Load File</Button>\n        {filesStore.file.name ? (\n          <>\n            <Space width=\"100%\" height={20} />\n            <Button onClick={() => handleFileDownload()}>Download File</Button>\n          </>\n        ) : null}\n      </ButtonsContainer>\n    </Container>\n  );\n});\n\nexport default Sidebar;\n","export const ItemTypes = {\r\n  NODE: 'node',\r\n};\r\n","import { CSSProperties } from 'react';\r\nimport { XYCoord } from 'react-dnd';\r\n\r\nexport const getStyles = (\r\n  left: number,\r\n  top: number,\r\n  isDragging: boolean,\r\n): CSSProperties => {\r\n  const transform = `translate3d(${left}px, ${top}px, 0)`;\r\n\r\n  return {\r\n    position: 'absolute',\r\n    transform,\r\n    WebkitTransform: transform,\r\n    opacity: isDragging ? 0 : 1,\r\n    height: isDragging ? 0 : '',\r\n  };\r\n};\r\n\r\nexport const getItemStyles = (\r\n  initialOffset: XYCoord | null,\r\n  currentOffset: XYCoord | null,\r\n): CSSProperties => {\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: 'none',\r\n    };\r\n  }\r\n\r\n  const { x, y } = currentOffset;\r\n  const transform = `translate(${x}px, ${y}px)`;\r\n\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform,\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  from: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  to: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  markerMid: string;\r\n}\r\n\r\nconst Connection: React.FC<Props> = ({\r\n  from: { x: x1, y: y1 },\r\n  to: { x: x2, y: y2 },\r\n  markerMid,\r\n}) => {\r\n  return (\r\n    <path\r\n      stroke=\"#000\"\r\n      strokeWidth={2}\r\n      strokeLinecap=\"round\"\r\n      markerUnits={2}\r\n      d={`M${x1 + 75},${y1 + 50}L${(x1 + x2 + 150) / 2},${\r\n        (y1 + y2 + 100) / 2\r\n      }L${x2 + 75},${y2 + 50}`}\r\n      markerMid={markerMid}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Connection;\r\n","import { Delete, Edit } from '@material-ui/icons';\r\nimport { linearGradient } from 'polished';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 150px;\r\n  height: 100px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: ${(props) =>\r\n    linearGradient({\r\n      colorStops: [`${props.theme.colors.sidebar} 5%`, `#1c1c2f 80%`],\r\n      toDirection: 'to top right',\r\n      fallback: '#fff',\r\n    })};\r\n  border: 1px solid ${(props) => props.theme.colors.text};\r\n\r\n  border-radius: 20px;\r\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const IconsContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  padding: 5px 10px;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: move;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const DeleteIcon = styled(Delete)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const EditIcon = styled(Edit)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n\r\n  cursor: pointer;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport {\r\n  Container,\r\n  ContentContainer,\r\n  DeleteIcon,\r\n  EditIcon,\r\n  IconsContainer,\r\n} from './styles';\r\n\r\ninterface DialogueNodeProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNode: React.FC<DialogueNodeProps> = observer(({ identifier }) => {\r\n  const { nodesStore } = useContext(RootStoreContext);\r\n\r\n  const deleteNode = () => {\r\n    nodesStore.setActiveNode(identifier, 'delete');\r\n  };\r\n\r\n  const editNode = () => {\r\n    nodesStore.setActiveNode(identifier, 'edit');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <IconsContainer>\r\n        {identifier === 'id:rootNode' ? null : (\r\n          <DeleteIcon onClick={deleteNode} />\r\n        )}\r\n        <EditIcon onClick={editNode} />\r\n      </IconsContainer>\r\n      <ContentContainer>{identifier}</ContentContainer>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DialogueNode;\r\n","import React from 'react';\r\n\r\nimport DialogueNode from './DialogueNode';\r\n\r\ninterface DialogueNodeDragPreviewProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNodeDragPreview: React.FC<DialogueNodeDragPreviewProps> = ({\r\n  identifier,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <DialogueNode identifier={identifier} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueNodeDragPreview;\r\n","import React, { useEffect } from 'react';\r\nimport { DragSourceMonitor, useDrag } from 'react-dnd';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getStyles } from '../../utils/getStyles';\r\nimport DialogueNode from './DialogueNode';\r\n\r\nconst DraggableDialogueNode: React.FC<Node> = ({ id, left, top }) => {\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: ItemTypes.NODE, id, left, top },\r\n    collect: (monitor: DragSourceMonitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true });\r\n  }, [preview]);\r\n\r\n  return (\r\n    <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n      <DialogueNode identifier={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableDialogueNode;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  background: ${(props) => props.theme.colors.background};\r\n`;\r\n\r\nexport const DragLayer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 100;\r\n  position: fixed;\r\n  pointer-events: none;\r\n`;\r\n","import React from 'react';\r\nimport { useDragLayer } from 'react-dnd';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getItemStyles } from '../../utils/getStyles';\r\nimport { DialogueNodeDragPreview } from '../Nodes';\r\nimport { DragLayer } from './styles';\r\n\r\nconst CustomDragLayer: React.FC = () => {\r\n  const {\r\n    itemType,\r\n    isDragging,\r\n    item,\r\n    initialOffset,\r\n    currentOffset,\r\n  } = useDragLayer((monitor) => ({\r\n    item: monitor.getItem() as Node,\r\n    itemType: monitor.getItemType(),\r\n    initialOffset: monitor.getInitialSourceClientOffset(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging(),\r\n  }));\r\n\r\n  const renderItem = () => {\r\n    switch (itemType) {\r\n      case ItemTypes.NODE:\r\n        return <DialogueNodeDragPreview identifier={item.id} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (!isDragging) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <DragLayer>\r\n      <div style={getItemStyles(initialOffset, currentOffset)}>\r\n        {renderItem()}\r\n      </div>\r\n    </DragLayer>\r\n  );\r\n};\r\n\r\nexport default CustomDragLayer;\r\n","import styled from 'styled-components';\r\n\r\ninterface ContainerProps {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface ContextItemProps {\r\n  last: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: ${(props: ContainerProps) => props.y}px;\r\n  left: ${(props: ContainerProps) => props.x + 5}px;\r\n\r\n  z-index: 300;\r\n`;\r\n\r\nexport const ContextItem = styled.div`\r\n  background: #fff;\r\n  border-bottom: ${(props: ContextItemProps) =>\r\n    !props.last ? 'dotted 1px #ccc' : null};\r\n  padding: 5px 25px;\r\n\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f1f1f1;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Container, ContextItem } from './styles';\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Option {\r\n  label: string;\r\n  callback?(event: React.MouseEvent<any, MouseEvent>): void;\r\n}\r\n\r\ninterface Props {\r\n  options: Option[];\r\n  visible: boolean;\r\n  changeVisibility(state: boolean): void;\r\n}\r\n\r\nconst ContextMenu: React.FC<Props> = ({\r\n  options,\r\n  visible,\r\n  changeVisibility,\r\n}) => {\r\n  const [position, setPosition] = useState<Position>({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  const handleContextMenu = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    const { clientX: x, clientY: y } = event;\r\n\r\n    setPosition({ x, y });\r\n  };\r\n\r\n  const handleContextMenuBlur = (event: React.MouseEvent<any, MouseEvent>) => {\r\n    event.preventDefault();\r\n\r\n    changeVisibility(false);\r\n    setPosition({ x: 0, y: 0 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('contextmenu', handleContextMenu);\r\n    // document.addEventListener('click', handleContextMenuBlur);\r\n\r\n    return () => {\r\n      document.removeEventListener('contextmenu', handleContextMenu);\r\n      // document.removeEventListener('click', handleContextMenuBlur);\r\n    };\r\n  }, []);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Container x={position.x} y={position.y}>\r\n      {options.map((item, index, arr) => {\r\n        return (\r\n          <ContextItem\r\n            key={index.toString()}\r\n            last={arr.length - 1 === index}\r\n            onClick={(event) => {\r\n              if (item.callback) item.callback(event);\r\n              handleContextMenuBlur(event);\r\n            }}\r\n          >\r\n            {item.label}\r\n          </ContextItem>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n","import { useEffect, useState } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { memo, useContext } from 'react';\n\nimport { RootStoreContext } from '../../stores';\nimport { Connection as ConnectionLine } from '../Nodes';\n\n// import { Container } from './styles';\n\nconst ConnectionsContainer: React.FC = memo(\n  observer(() => {\n    const { nodesStore, connectionsStore } = useContext(RootStoreContext);\n\n    return (\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        style={{\n          zIndex: 400,\n        }}\n      >\n        <defs>\n          <marker\n            id=\"arrowhead\"\n            markerWidth=\"10\"\n            markerHeight=\"7\"\n            refX=\"0\"\n            refY=\"3.5\"\n            orient=\"auto\"\n          >\n            <polygon points=\"0 0, 10 3.5, 0 7\" />\n          </marker>\n        </defs>\n\n        {connectionsStore.connectionsKeys.length > 0\n          ? connectionsStore.connectionsKeys.map((key) => {\n              const connection = connectionsStore.connections[key];\n\n              const fromNode = nodesStore.nodes[connection.fromId];\n              const toNode = nodesStore.nodes[connection.toId];\n\n              if (fromNode === undefined || toNode === undefined) {\n                return null;\n              }\n\n              const from = {\n                x: fromNode.left,\n\n                y: fromNode.top,\n              };\n\n              const to = {\n                x: toNode.left,\n\n                y: toNode.top,\n              };\n\n              return (\n                <ConnectionLine\n                  key={`${connection.fromId}${connection.toId}`}\n                  from={from}\n                  to={to}\n                  markerMid=\"url(#arrowhead)\"\n                />\n              );\n            })\n          : null}\n      </svg>\n    );\n  }),\n);\n\nexport default ConnectionsContainer;\n","import { observer } from 'mobx-react-lite';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { useDrop } from 'react-dnd';\n\nimport { RootStoreContext } from '../../stores';\nimport { ItemTypes } from '../../types/ItemTypes';\nimport { Node } from '../../types/Node';\nimport useWindowDimensions from '../../utils/useWindowDimensions';\nimport ContextMenu from '../ContextMenu';\nimport { DraggableDialogueNode } from '../Nodes';\nimport ConnectionsContainer from './ConnectionsContainer';\nimport { Container } from './styles';\n\nconst DragAndDropContainerGlobal: React.FC = observer(() => {\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const { width } = useWindowDimensions();\n  const { nodesStore, filesStore } = useContext(RootStoreContext);\n\n  const moveNode = useCallback(\n    (id: string, left: number, top: number) => {\n      nodesStore.updateNodePosition(id, left, top);\n    },\n    [nodesStore],\n  );\n\n  const addNode = (id: string, left: number, top: number) => {\n    nodesStore.addNode(id, left, top);\n  };\n\n  const handleAddNode = (event: React.MouseEvent<any, MouseEvent>) => {\n    const numberOfNodes = nodesStore.nodesKeys.length;\n    const identifier = `id:node${numberOfNodes}`;\n\n    const xPos = event.clientX - 0.15 * width - 75;\n    const yPos = event.clientY - 50;\n\n    addNode(identifier, xPos, yPos);\n  };\n\n  const loadFileClick = () => {\n    filesStore.setModal(true);\n  };\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.NODE,\n    drop(item: Node, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset() as {\n        x: number;\n        y: number;\n      };\n\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n\n      moveNode(item.id, left, top);\n      return undefined;\n    },\n  });\n\n  const renderNode = (item: any, key: string) => {\n    return <DraggableDialogueNode key={key} id={key} {...item} />;\n  };\n\n  if (nodesStore.showModal || filesStore.loadFileModal) {\n    return null;\n  }\n\n  return (\n    <>\n      <ContextMenu\n        options={[\n          { label: 'New Node', callback: handleAddNode },\n          { label: 'Load File', callback: loadFileClick },\n          { label: 'Close' },\n        ]}\n        visible={showContextMenu}\n        changeVisibility={setShowContextMenu}\n      />\n\n      <Container\n        ref={drop}\n        onContextMenu={() => setShowContextMenu(true)}\n        onClick={() => setShowContextMenu(false)}\n      >\n        {nodesStore.nodesKeys.map((key) =>\n          renderNode(nodesStore.nodes[key], key),\n        )}\n        <ConnectionsContainer />\n      </Container>\n    </>\n  );\n});\n\nexport default DragAndDropContainerGlobal;\n","import React from 'react';\r\n\r\nimport { CustomDragLayer, DragAndDropContainerGlobal } from '.';\r\n\r\n// import { Container } from './styles';\r\n\r\nconst DragAroundCustomLayer: React.FC = () => {\r\n  return (\r\n    <>\r\n      <DragAndDropContainerGlobal />\r\n      <CustomDragLayer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAroundCustomLayer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Backdrop = styled.div`\r\n  background: rgba(10, 10, 10, 0.8);\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  background: transparent;\r\n  width: auto;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  z-index: 300;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-right: -50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Backdrop, Container } from './styles';\r\n\r\ninterface Props {\r\n  children?: React.ReactElement | string;\r\n  show: boolean;\r\n  onBackdropClick?(): void;\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({ children, show, onBackdropClick }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop onClick={onBackdropClick} />\r\n      <Container>{children}</Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import './styles.css';\r\n\r\nimport { useField } from '@unform/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport MultiSelect from 'react-multi-select-component';\r\n\r\ninterface SelectProps {\r\n  name: string;\r\n  options: { label: string; value: string }[];\r\n  label?: string;\r\n}\r\n\r\ntype Props = JSX.IntrinsicElements['select'] & SelectProps;\r\n\r\nconst Select: React.FC<Props> = ({\r\n  name,\r\n  multiple,\r\n  options,\r\n  placeholder,\r\n  label,\r\n}) => {\r\n  const [values, setValues] = useState<any[]>([]);\r\n  const selectRef = useRef(null);\r\n\r\n  const { fieldName, registerField, defaultValue } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: selectRef.current,\r\n      getValue: () => {\r\n        if (!multiple) {\r\n          return values[0];\r\n        }\r\n\r\n        return values;\r\n      },\r\n      setValue: (ref, value) => {\r\n        if (!multiple) {\r\n          setValues([value]);\r\n        }\r\n      },\r\n    });\r\n  }, [registerField, fieldName, multiple, values]);\r\n\r\n  useEffect(() => {\r\n    if (defaultValue && multiple) {\r\n      setValues(defaultValue);\r\n    }\r\n  }, [defaultValue, multiple]);\r\n\r\n  const handleValueChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (!multiple) {\r\n      const vals = [];\r\n      vals.push(event.target.value);\r\n      setValues(vals);\r\n    }\r\n  };\r\n\r\n  if (!multiple) {\r\n    return (\r\n      <div className=\"select-group\">\r\n        {label && <label htmlFor={fieldName}>{label}</label>}\r\n        <select\r\n          ref={selectRef}\r\n          value={values[0]}\r\n          onChange={handleValueChange}\r\n          className=\"multi-select single\"\r\n          placeholder={placeholder}\r\n          defaultValue={defaultValue}\r\n        >\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // eslint-disable-next-line jsx-a11y/control-has-associated-label\r\n  return (\r\n    <div className=\"select-group\">\r\n      {label && <label htmlFor={fieldName}>{label}</label>}\r\n      <MultiSelect\r\n        options={options}\r\n        value={values}\r\n        onChange={setValues}\r\n        hasSelectAll={false}\r\n        labelledBy=\"Select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useField } from '@unform/core';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\ninterface Props {\r\n  name: string;\r\n  label?: string;\r\n  width?: number;\r\n}\r\n\r\ntype TextareaProps = JSX.IntrinsicElements['textarea'] & Props;\r\n\r\nconst TextArea: React.FC<TextareaProps> = ({ name, label, width, ...rest }) => {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const { fieldName, defaultValue, registerField, error } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      path: 'value',\r\n      ref: textareaRef.current,\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <div>\r\n      {label ? <label htmlFor={fieldName}>{label}</label> : null}\r\n\r\n      <textarea\r\n        id={fieldName}\r\n        ref={textareaRef}\r\n        defaultValue={defaultValue}\r\n        style={{\r\n          width: width || 400,\r\n          height: 400,\r\n          background: '#e4e4e4',\r\n          fontSize: 18,\r\n          padding: 20,\r\n          resize: 'none',\r\n        }}\r\n        {...rest}\r\n      />\r\n\r\n      {error ? <span>{error}</span> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import { Form as RawForm } from '@unform/web';\r\nimport styled from 'styled-components';\r\n\r\ninterface ModalContainerProps {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: ${(props) => props.theme.colors.sidebar};\r\n  width: ${(props: ModalContainerProps) => props.width || 400}px;\r\n  height: ${(props: ModalContainerProps) => props.height || 400}px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalTitle = styled.h3`\r\n  width: 100%;\r\n  height: 12.5%;\r\n\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  width: 100%;\r\n  height: 87.5%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Form = styled(RawForm)`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 20px;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport { RootStoreContext } from '../../stores';\r\nimport { ModalContainer, ModalContent, ModalTitle } from './styles';\r\n\r\nconst LoadModal: React.FC = observer(() => {\r\n  const { filesStore } = useContext(RootStoreContext);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onabort = () => console.log('Read aborted');\r\n      reader.onerror = () => console.log('Read failed');\r\n      reader.onload = () => {\r\n        const content = reader.result?.toString();\r\n        const json = content !== undefined && JSON.parse(content);\r\n\r\n        filesStore.file = json;\r\n        filesStore.loadFileContent();\r\n        filesStore.setModal(false);\r\n      };\r\n\r\n      reader.readAsText(acceptedFiles[0]);\r\n    },\r\n    [filesStore],\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: 'application/json',\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      show={filesStore.loadFileModal}\r\n      onBackdropClick={() => filesStore.setModal(false)}\r\n    >\r\n      <ModalContainer>\r\n        <ModalTitle>Load File</ModalTitle>\r\n        <ModalContent>\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {isDragActive ? (\r\n              <p>Drop the files here...</p>\r\n            ) : (\r\n              <p>Drag and drop files / Click here</p>\r\n            )}\r\n          </div>\r\n        </ModalContent>\r\n      </ModalContainer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default LoadModal;\r\n","import { FormHandles, SubmitHandler } from '@unform/core';\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext, useRef } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport backend from 'react-dnd-html5-backend';\n\nimport Button from '../../components/Button';\nimport { DragAroundCustomLayer } from '../../components/DragAndDrop';\nimport Modal from '../../components/Modal';\nimport Select from '../../components/Select';\nimport { Space } from '../../components/Space';\nimport TextArea from '../../components/TextArea';\nimport { RootStoreContext } from '../../stores';\nimport LoadModal from './LoadModal';\nimport {\n  BoxContainer,\n  Center,\n  Form,\n  ModalContainer,\n  ModalContent,\n  ModalTitle,\n} from './styles';\n\n// Add three+ character dialogue option\n\ntype DialogueType = 'player' | 'ai-character';\n\ninterface NodeEditFormData {\n  text: string;\n  inConnections: { label: string; value: string }[];\n  outConnections: { label: string; value: string }[];\n  type: DialogueType;\n}\n\nconst Main: React.FC = observer(() => {\n  const { nodesStore, connectionsStore } = useContext(RootStoreContext);\n  const editNodeFormRef = useRef<FormHandles>(null);\n\n  const deleteNode = (id: string) => {\n    nodesStore.deleteNode(id);\n    connectionsStore.removeConnnection(id);\n  };\n\n  const handleEditFormSubmit: SubmitHandler<NodeEditFormData> = (data) => {\n    // console.log(data);\n    const { inConnections, outConnections, text, type } = data;\n\n    const node = nodesStore.activeNode;\n\n    node.text = text;\n    node.dialogueType = type;\n\n    outConnections.forEach((connection) => {\n      connectionsStore.addConnection(node.id, connection.value);\n    });\n\n    if (node.id !== 'id:rootNode') {\n      inConnections.forEach((connection) => {\n        connectionsStore.addConnection(connection.value, node.id);\n      });\n    }\n\n    nodesStore.setActiveNode('', null);\n  };\n\n  const handleGetInitialConnections = (id: string) => {\n    const tempIn: { label: string; value: string }[] = [];\n    const tempOut: { label: string; value: string }[] = [];\n\n    connectionsStore.connectionsKeys.forEach((key) => {\n      if (connectionsStore.connections[key].fromId === id) {\n        tempOut.push({\n          label: connectionsStore.connections[key].toId,\n          value: connectionsStore.connections[key].toId,\n        });\n      }\n\n      if (connectionsStore.connections[key].toId === id) {\n        tempIn.push({\n          label: connectionsStore.connections[key].fromId,\n          value: connectionsStore.connections[key].fromId,\n        });\n      }\n    });\n\n    return {\n      inConnections: tempIn,\n      outConnections: tempOut,\n    };\n  };\n\n  const renderModal = () => {\n    if (nodesStore.activeNodeModal.mode === 'delete') {\n      return (\n        <Modal\n          show={nodesStore.showModal}\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\n        >\n          <ModalContainer>\n            <ModalTitle>Are you sure you want to delete this node?</ModalTitle>\n            <ModalContent>\n              <Button\n                onClick={() => {\n                  deleteNode(nodesStore.activeNodeModal.id);\n                  nodesStore.setActiveNode('', null);\n                }}\n              >\n                Yes\n              </Button>\n              <Space width=\"100%\" height={20} />\n              <Button onClick={() => nodesStore.setActiveNode('', null)}>\n                No\n              </Button>\n            </ModalContent>\n          </ModalContainer>\n        </Modal>\n      );\n    }\n    if (nodesStore.activeNodeModal.mode === 'edit') {\n      const node = nodesStore.activeNode;\n      const initialText = node.text;\n      const initialDialogueType = node.dialogueType;\n\n      const { inConnections, outConnections } = handleGetInitialConnections(\n        node.id,\n      );\n\n      return (\n        <Modal\n          show={nodesStore.showModal}\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\n        >\n          <ModalContainer width={1000} height={800}>\n            <ModalTitle>\n              {`Editing ${nodesStore.activeNodeModal.id}`}\n            </ModalTitle>\n            <ModalContent>\n              <Form\n                ref={editNodeFormRef}\n                onSubmit={handleEditFormSubmit}\n                initialData={{\n                  text: initialText,\n                  inConnections,\n                  outConnections,\n                  type: initialDialogueType,\n                }}\n              >\n                <BoxContainer>\n                  {node.id === 'id:rootNode' ? null : (\n                    <Select\n                      name=\"inConnections\"\n                      label=\"In Connections\"\n                      multiple\n                      options={nodesStore.activeNodeOptions}\n                    />\n                  )}\n                  <Select\n                    name=\"outConnections\"\n                    label=\"Out Connections\"\n                    multiple\n                    options={nodesStore.activeNodeOptions}\n                  />\n                  <Select\n                    name=\"type\"\n                    label=\"Dialogue Type\"\n                    options={[\n                      {\n                        label: 'Select Dialogue Type...',\n                        value: 'None',\n                      },\n                      {\n                        label: 'Player',\n                        value: 'Player',\n                      },\n                      {\n                        label: 'AICharacter',\n                        value: 'AICharacter',\n                      },\n                    ]}\n                  />\n                </BoxContainer>\n                <Space width=\"100%\" height={20} />\n                <BoxContainer>\n                  <TextArea\n                    name=\"text\"\n                    autoFocus\n                    placeholder=\"Dialogue text\"\n                    width={800}\n                  />\n                </BoxContainer>\n                <Space width=\"100%\" height={30} />\n                <Center>\n                  <Button onClick={() => editNodeFormRef.current?.submitForm()}>\n                    Save\n                  </Button>\n                </Center>\n              </Form>\n            </ModalContent>\n          </ModalContainer>\n        </Modal>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <>\n      {renderModal()}\n      <LoadModal />\n      <DndProvider backend={backend}>\n        <DragAroundCustomLayer />\n      </DndProvider>\n    </>\n  );\n});\n\nexport default Main;\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    top: 0;\r\n    left: 0;\r\n    font-family: 'Fira Code', monospace;\r\n  }\r\n\r\n  html, body {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: ${(props) => props.theme.colors.background};\r\n  }\r\n\r\n  #root {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const SidebarContainer = styled.div`\r\n  width: 15vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 85vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const RootContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n","import 'mobx-react-lite/batchingForReactDom';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport Sidebar from './components/Sidebar';\r\nimport Main from './pages/Main';\r\nimport {\r\n  ContentContainer,\r\n  GlobalStyles,\r\n  RootContainer,\r\n  SidebarContainer,\r\n} from './styles/global';\r\nimport { light } from './styles/themes/light';\r\n\r\n// import { dark } from './styles/themes/dark';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={light}>\r\n      <GlobalStyles />\r\n      <RootContainer>\r\n        <SidebarContainer>\r\n          <Sidebar />\r\n        </SidebarContainer>\r\n        <ContentContainer>\r\n          <Main />\r\n        </ContentContainer>\r\n      </RootContainer>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const light: DefaultTheme = {\r\n  name: 'light',\r\n  colors: {\r\n    background: '#f0f0f0',\r\n    sidebar: '#1b1b2f',\r\n    primary: '#e43f5a',\r\n    text: '#000',\r\n    textSecondary: '#fff',\r\n    accent: '#e0ac1b',\r\n  },\r\n};\r\n"],"sourceRoot":""}
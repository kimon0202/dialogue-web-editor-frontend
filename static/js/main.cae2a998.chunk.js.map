{"version":3,"sources":["stores/connectionsStore.ts","stores/filesStore.ts","stores/nodesStore.ts","stores/index.ts","components/Button/styles.ts","components/Button/index.tsx","components/Space/index.ts","components/Sidebar/styles.ts","components/Sidebar/index.tsx","types/ItemTypes.ts","utils/getStyles.ts","components/Nodes/Connection.tsx","components/Nodes/styles.ts","components/Nodes/DialogueNode.tsx","components/Nodes/DialogueNodeDragPreview.tsx","components/Nodes/DraggableDialogueNode.tsx","components/DragAndDrop/styles.ts","components/DragAndDrop/CustomDragLayer.tsx","components/ContextMenu/styles.ts","components/ContextMenu/index.tsx","components/DragAndDrop/DragAndDropContainerGlobal.tsx","components/DragAndDrop/DragAroundCustomLayer.tsx","components/Modal/styles.ts","components/Modal/index.tsx","components/Select/index.tsx","components/TextArea/index.tsx","pages/Main/styles.ts","pages/Main/LoadModal.tsx","pages/Main/index.tsx","styles/global.ts","index.tsx","styles/themes/light.ts"],"names":["ConnectionsStore","rootStore","this","fromId","toId","i","connections","length","push","observable","action","FilesStore","state","loadFileModal","file","nodesStore","nodes","connectionsStore","NodesStore","id","left","top","update","$merge","newNodes","$set","nodesKeys","forEach","key","mode","activeNodeModal","opts","filter","activeNode","possibleOptions","option","label","value","Object","keys","computed","RootStoreContext","createContext","filesStore","StyledButton","styled","button","props","theme","colors","accent","shade","Button","children","onClick","type","Space","div","width","height","Container","sidebar","TitleContainer","ButtonsContainer","Sidebar","observer","useContext","handleFileDownload","a","json","JSON","stringify","blob","Blob","URL","createObjectURL","href","link","document","createElement","download","name","body","appendChild","click","removeChild","reset","setActiveNode","createdAt","Date","now","setModal","ItemTypes","getStyles","isDragging","transform","position","WebkitTransform","opacity","getItemStyles","initialOffset","currentOffset","display","x","y","Connection","from","to","markerMid","linearGradient","colorStops","toDirection","fallback","text","IconsContainer","ContentContainer","textSecondary","DeleteIcon","Delete","EditIcon","Edit","DialogueNode","identifier","DialogueNodeDragPreview","DraggableDialogueNode","useDrag","item","collect","monitor","drag","preview","useEffect","getEmptyImage","captureDraggingState","ref","style","background","DragLayer","CustomDragLayer","useDragLayer","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","ContextItem","last","ContextMenu","options","visible","changeVisibility","useState","setPosition","handleContextMenu","event","preventDefault","clientX","clientY","addEventListener","removeEventListener","map","index","arr","toString","callback","handleContextMenuBlur","DragAndDropContainerGlobal","showContextMenu","setShowContextMenu","moveNode","useCallback","updateNodePosition","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","showModal","numberOfNodes","addNode","onContextMenu","renderNode","zIndex","markerWidth","markerHeight","refX","refY","orient","points","connection","DragAroundCustomLayer","Backdrop","Modal","show","onBackdropClick","Select","multiple","placeholder","values","setValues","selectRef","useRef","useField","fieldName","registerField","defaultValue","current","getValue","setValue","className","htmlFor","onChange","hasSelectAll","labelledBy","vals","target","TextArea","rest","textareaRef","error","path","fontSize","padding","resize","ModalContainer","ModalTitle","h3","ModalContent","Center","BoxContainer","Form","RawForm","LoadModal","onDrop","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","content","result","undefined","parse","loadFileContent","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","Main","editNodeFormRef","handleEditFormSubmit","data","inConnections","outConnections","node","dialogueType","includes","addConnection","deleteNode","initialText","initialDialogueType","tempIn","tempOut","initialInConnections","initialOutConnections","onSubmit","initialData","activeNodeOptions","dialogueTypeOptions","autoFocus","submitForm","renderModal","DndProvider","backend","GlobalStyles","createGlobalStyle","SidebarContainer","RootContainer","ReactDOM","render","StrictMode","primary","getElementById"],"mappings":"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","file":"static/js/main.cae2a998.chunk.js","sourcesContent":["import { action, observable } from 'mobx';\r\n\r\nimport { RootStore } from '.';\r\nimport { Connection } from '../types/Connection';\r\n\r\nclass ConnectionsStore {\r\n  private rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable connections: Connection[] = [];\r\n\r\n  @action\r\n  public addConnection(fromId: string, toId: string) {\r\n    for (let i = 0; i < this.connections.length; i += 1) {\r\n      if (\r\n        this.connections[i].fromId === fromId &&\r\n        this.connections[i].toId === toId\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.connections.push({\r\n      fromId,\r\n      toId,\r\n    });\r\n  }\r\n}\r\n\r\nexport default ConnectionsStore;\r\n","import { action, observable } from 'mobx';\r\n\r\nimport { RootStore } from '.';\r\nimport { FileData } from '../types/FileData';\r\n\r\nclass FilesStore {\r\n  private rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable file: FileData = {} as FileData;\r\n  @observable loadFileModal = false;\r\n\r\n  @action\r\n  public setModal(state: boolean) {\r\n    this.loadFileModal = state;\r\n  }\r\n\r\n  @action\r\n  public loadFileContent() {\r\n    if (!this.file) {\r\n      return;\r\n    }\r\n\r\n    this.rootStore.nodesStore.nodes = this.file.nodes;\r\n    this.rootStore.connectionsStore.connections = this.file.connections;\r\n  }\r\n}\r\n\r\nexport default FilesStore;\r\n","import update from 'immutability-helper';\r\nimport { action, computed, observable } from 'mobx';\r\n\r\nimport { RootStore } from '.';\r\nimport { NodeMap } from '../types/Node';\r\n\r\ninterface ActiveNodeModal {\r\n  id: string;\r\n  mode: 'delete' | 'edit' | null;\r\n}\r\n\r\nclass NodesStore {\r\n  private rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable nodes: NodeMap = {\r\n    'id:rootNode': {\r\n      id: 'id:rootNode',\r\n      left: 80,\r\n      top: 20,\r\n    },\r\n  };\r\n\r\n  @observable activeNodeModal: ActiveNodeModal = {\r\n    id: '',\r\n    mode: null,\r\n  };\r\n\r\n  @action\r\n  public updateNodePosition(id: string, left: number, top: number) {\r\n    this.nodes = update(this.nodes, {\r\n      [id]: {\r\n        $merge: { left, top },\r\n      },\r\n    });\r\n  }\r\n\r\n  @action\r\n  public addNode(id: string, left: number, top: number) {\r\n    const newNodes = update(this.nodes, {\r\n      [id]: {\r\n        $set: {\r\n          left,\r\n          top,\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    this.nodes = newNodes;\r\n  }\r\n\r\n  @action\r\n  public deleteNode(id: string) {\r\n    this.nodesKeys.forEach((key) => {\r\n      if (key === id) {\r\n        delete this.nodes[id];\r\n      }\r\n    });\r\n  }\r\n\r\n  @action\r\n  public setActiveNode(id: string, mode: 'delete' | 'edit' | null) {\r\n    this.activeNodeModal = {\r\n      id,\r\n      mode,\r\n    };\r\n  }\r\n\r\n  @action\r\n  public reset() {\r\n    this.nodes = {\r\n      'id:rootNode': {\r\n        id: 'id:rootNode',\r\n        left: 80,\r\n        top: 20,\r\n      },\r\n    };\r\n  }\r\n\r\n  @computed\r\n  public get activeNode() {\r\n    return this.nodes[this.activeNodeModal.id];\r\n  }\r\n\r\n  @computed\r\n  public get activeNodeOptions() {\r\n    const opts = this.nodesKeys.filter((key) => key !== this.activeNode.id);\r\n    const possibleOptions: { label: string; value: string }[] = [];\r\n\r\n    opts.forEach((option) => {\r\n      possibleOptions.push({\r\n        label: option,\r\n        value: option,\r\n      });\r\n    });\r\n\r\n    return possibleOptions;\r\n  }\r\n\r\n  @computed\r\n  public get nodesKeys() {\r\n    return Object.keys(this.nodes);\r\n  }\r\n\r\n  @computed\r\n  public get showModal() {\r\n    return this.activeNodeModal.id !== '';\r\n  }\r\n\r\n  @computed\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public get dialogueTypeOptions() {\r\n    const options: { label: string; value: string }[] = [\r\n      {\r\n        label: 'player',\r\n        value: 'player',\r\n      },\r\n      {\r\n        label: 'ai-character',\r\n        value: 'ai-character',\r\n      },\r\n    ];\r\n\r\n    return options;\r\n  }\r\n}\r\n\r\nexport default NodesStore;\r\n","import { createContext } from 'react';\r\n\r\nimport ConnectionsStore from './connectionsStore';\r\nimport FilesStore from './filesStore';\r\nimport NodesStore from './nodesStore';\r\n\r\nexport class RootStore {\r\n  public nodesStore: NodesStore = new NodesStore(this);\r\n  public connectionsStore: ConnectionsStore = new ConnectionsStore(this);\r\n  public filesStore: FilesStore = new FilesStore(this);\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import { shade } from 'polished';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  background: ${(props) => props.theme.colors.accent};\r\n  cursor: pointer;\r\n\r\n  border: none;\r\n  outline: none;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 150px;\r\n  height: 60px;\r\n\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n\r\n  :hover {\r\n    background: ${(props) => shade(0.25, props.theme.colors.accent as string)};\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledButton } from './styles';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactElement | string;\r\n  onClick?(): void;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  width: number | string;\r\n  height: number | string;\r\n}\r\n\r\nexport const Space = styled.div`\r\n  width: ${(props: Props) =>\r\n    typeof props.width === typeof 'aa' ? props.width : `${props.width}px`};\r\n\r\n  height: ${(props: Props) =>\r\n    typeof props.height === typeof 'aa' ? props.height : `${props.height}px`};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${(props) => props.theme.colors.sidebar};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 10%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n\r\n  color: #fff;\r\n\r\n  padding-top: 20px;\r\n  z-index: 200;\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { FileData } from '../../types/FileData';\r\nimport Button from '../Button';\r\nimport { Space } from '../Space';\r\nimport { ButtonsContainer, Container, TitleContainer } from './styles';\r\n\r\nconst Sidebar: React.FC = observer(() => {\r\n  const { nodesStore, connectionsStore, filesStore } = useContext(\r\n    RootStoreContext,\r\n  );\r\n\r\n  const handleSave = () => {\r\n    const file: FileData = {\r\n      name: 'NewFile',\r\n      createdAt: Date.now(),\r\n      nodes: nodesStore.nodes,\r\n      connections: connectionsStore.connections,\r\n    };\r\n\r\n    filesStore.file = file;\r\n  };\r\n\r\n  const handleFileDownload = async () => {\r\n    const json = JSON.stringify(filesStore.file);\r\n    const blob = new Blob([json], { type: 'application/json' });\r\n    const href = await URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = href;\r\n    link.download = filesStore.file.name + '.json';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TitleContainer>Dialogue Editor</TitleContainer>\r\n      <Space width=\"100%\" height={30} />\r\n      <ButtonsContainer>\r\n        <Button\r\n          onClick={() => {\r\n            nodesStore.reset();\r\n            nodesStore.setActiveNode('', null);\r\n          }}\r\n        >\r\n          Clear\r\n        </Button>\r\n        <Space width=\"100%\" height={20} />\r\n        <Button onClick={handleSave}>Save</Button>\r\n        <Space width=\"100%\" height={20} />\r\n        <Button onClick={() => filesStore.setModal(true)}>Load File</Button>\r\n        {filesStore.file.name && (\r\n          <>\r\n            <Space width=\"100%\" height={20} />\r\n            <Button onClick={() => handleFileDownload()}>Download File</Button>\r\n          </>\r\n        )}\r\n      </ButtonsContainer>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default Sidebar;\r\n","export const ItemTypes = {\r\n  NODE: 'node',\r\n};\r\n","import { CSSProperties } from 'react';\r\nimport { XYCoord } from 'react-dnd';\r\n\r\nexport const getStyles = (\r\n  left: number,\r\n  top: number,\r\n  isDragging: boolean,\r\n): CSSProperties => {\r\n  const transform = `translate3d(${left}px, ${top}px, 0)`;\r\n\r\n  return {\r\n    position: 'absolute',\r\n    transform,\r\n    WebkitTransform: transform,\r\n    opacity: isDragging ? 0 : 1,\r\n    height: isDragging ? 0 : '',\r\n  };\r\n};\r\n\r\nexport const getItemStyles = (\r\n  initialOffset: XYCoord | null,\r\n  currentOffset: XYCoord | null,\r\n): CSSProperties => {\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: 'none',\r\n    };\r\n  }\r\n\r\n  const { x, y } = currentOffset;\r\n  const transform = `translate(${x}px, ${y}px)`;\r\n\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform,\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\n\r\ninterface Props {\r\n  from: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  to: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  markerMid: string;\r\n}\r\n\r\nconst Connection: React.FC<Props> = ({\r\n  from: { x: x1, y: y1 },\r\n  to: { x: x2, y: y2 },\r\n  markerMid,\r\n}) => {\r\n  return (\r\n    // <line\r\n    //   x1={x1 + 75}\r\n    //   x2={x2 + 75}\r\n    //   y1={y1 + 50}\r\n    //   y2={y2 + 50}\r\n    //   strokeLinecap=\"round\"\r\n    //   strokeWidth={2}\r\n    //   stroke=\"#000\"\r\n    //   markerUnits={2}\r\n    //   markerMid={markerMid}\r\n    // />\r\n    <path\r\n      stroke=\"#000\"\r\n      strokeWidth={2}\r\n      strokeLinecap=\"round\"\r\n      markerUnits={2}\r\n      d={`M${x1 + 75},${y1 + 50}L${(x1 + x2 + 150) / 2},${\r\n        (y1 + y2 + 100) / 2\r\n      }L${x2 + 75},${y2 + 50}`}\r\n      markerMid={markerMid}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Connection;\r\n","import { Delete, Edit } from '@material-ui/icons';\r\nimport { linearGradient } from 'polished';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 150px;\r\n  height: 100px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: ${(props) =>\r\n    linearGradient({\r\n      colorStops: [`${props.theme.colors.sidebar} 5%`, `#1c1c2f 80%`],\r\n      toDirection: 'to top right',\r\n      fallback: '#fff',\r\n    })};\r\n  border: 1px solid ${(props) => props.theme.colors.text};\r\n\r\n  border-radius: 20px;\r\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const IconsContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  padding: 5px 10px;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: move;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const DeleteIcon = styled(Delete)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const EditIcon = styled(Edit)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n\r\n  cursor: pointer;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport {\r\n  Container,\r\n  ContentContainer,\r\n  DeleteIcon,\r\n  EditIcon,\r\n  IconsContainer,\r\n} from './styles';\r\n\r\ninterface DialogueNodeProps {\r\n  identifier: string;\r\n}\r\n\r\n// Add Modal for deletion confirmation\r\n\r\nconst DialogueNode: React.FC<DialogueNodeProps> = observer(({ identifier }) => {\r\n  const { nodesStore } = useContext(RootStoreContext);\r\n\r\n  const deleteNode = () => {\r\n    nodesStore.setActiveNode(identifier, 'delete');\r\n  };\r\n\r\n  const editNode = () => {\r\n    nodesStore.setActiveNode(identifier, 'edit');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <IconsContainer>\r\n        <DeleteIcon onClick={deleteNode} />\r\n        <EditIcon onClick={editNode} />\r\n      </IconsContainer>\r\n      <ContentContainer>{identifier}</ContentContainer>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DialogueNode;\r\n","import React from 'react';\r\n\r\nimport DialogueNode from './DialogueNode';\r\n\r\n// import { Container } from './styles';\r\n\r\ninterface DialogueNodeDragPreviewProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNodeDragPreview: React.FC<DialogueNodeDragPreviewProps> = ({\r\n  identifier,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <DialogueNode identifier={identifier} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueNodeDragPreview;\r\n","import React, { useEffect } from 'react';\r\nimport { DragSourceMonitor, useDrag } from 'react-dnd';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getStyles } from '../../utils/getStyles';\r\nimport DialogueNode from './DialogueNode';\r\n\r\n// import { Container } from './styles';\r\nconst DraggableDialogueNode: React.FC<Node> = ({ id, left, top }) => {\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: ItemTypes.NODE, id, left, top },\r\n    collect: (monitor: DragSourceMonitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true });\r\n  }, [preview]);\r\n\r\n  return (\r\n    <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n      <DialogueNode identifier={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableDialogueNode;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  background: ${(props) => props.theme.colors.background};\r\n`;\r\n\r\nexport const DragLayer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 100;\r\n  position: fixed;\r\n\r\n  pointer-events: none;\r\n`;\r\n","import React from 'react';\r\nimport { useDragLayer } from 'react-dnd';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getItemStyles } from '../../utils/getStyles';\r\nimport { DialogueNodeDragPreview } from '../Nodes';\r\nimport { DragLayer } from './styles';\r\n\r\nconst CustomDragLayer: React.FC = () => {\r\n  const {\r\n    itemType,\r\n    isDragging,\r\n    item,\r\n    initialOffset,\r\n    currentOffset,\r\n  } = useDragLayer((monitor) => ({\r\n    item: monitor.getItem() as Node,\r\n    itemType: monitor.getItemType(),\r\n    initialOffset: monitor.getInitialSourceClientOffset(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging(),\r\n  }));\r\n\r\n  const renderItem = () => {\r\n    switch (itemType) {\r\n      case ItemTypes.NODE:\r\n        return <DialogueNodeDragPreview identifier={item.id} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (!isDragging) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <DragLayer>\r\n      <div style={getItemStyles(initialOffset, currentOffset)}>\r\n        {renderItem()}\r\n      </div>\r\n    </DragLayer>\r\n  );\r\n};\r\n\r\nexport default CustomDragLayer;\r\n","import styled from 'styled-components';\r\n\r\ninterface ContainerProps {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface ContextItemProps {\r\n  last: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: ${(props: ContainerProps) => props.y}px;\r\n  left: ${(props: ContainerProps) => props.x + 5}px;\r\n\r\n  z-index: 300;\r\n`;\r\n\r\nexport const ContextItem = styled.div`\r\n  background: #fff;\r\n  border-bottom: ${(props: ContextItemProps) =>\r\n    !props.last ? 'dotted 1px #ccc' : null};\r\n  padding: 5px 25px;\r\n\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f1f1f1;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Container, ContextItem } from './styles';\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Option {\r\n  label: string;\r\n  callback?(event: React.MouseEvent<any, MouseEvent>): void;\r\n}\r\n\r\ninterface Props {\r\n  options: Option[];\r\n  visible: boolean;\r\n  changeVisibility(state: boolean): void;\r\n}\r\n\r\nconst ContextMenu: React.FC<Props> = ({\r\n  options,\r\n  visible,\r\n  changeVisibility,\r\n}) => {\r\n  const [position, setPosition] = useState<Position>({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  const handleContextMenu = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    const { clientX: x, clientY: y } = event;\r\n\r\n    setPosition({ x, y });\r\n  };\r\n\r\n  const handleContextMenuBlur = (event: React.MouseEvent<any, MouseEvent>) => {\r\n    event.preventDefault();\r\n\r\n    changeVisibility(false);\r\n    setPosition({ x: 0, y: 0 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('contextmenu', handleContextMenu);\r\n    // document.addEventListener('click', handleContextMenuBlur);\r\n\r\n    return () => {\r\n      document.removeEventListener('contextmenu', handleContextMenu);\r\n      // document.removeEventListener('click', handleContextMenuBlur);\r\n    };\r\n  }, []);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Container x={position.x} y={position.y}>\r\n      {options.map((item, index, arr) => {\r\n        return (\r\n          <ContextItem\r\n            key={index.toString()}\r\n            last={arr.length - 1 === index}\r\n            onClick={(event) => {\r\n              if (item.callback) item.callback(event);\r\n              handleContextMenuBlur(event);\r\n            }}\r\n          >\r\n            {item.label}\r\n          </ContextItem>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport ContextMenu from '../ContextMenu';\r\nimport { Connection, DraggableDialogueNode } from '../Nodes';\r\nimport { Container } from './styles';\r\n\r\nconst DragAndDropContainerGlobal: React.FC = observer(() => {\r\n  const [showContextMenu, setShowContextMenu] = useState(false);\r\n  const { nodesStore, connectionsStore, filesStore } = useContext(\r\n    RootStoreContext,\r\n  );\r\n\r\n  const moveNode = useCallback(\r\n    (id: string, left: number, top: number) => {\r\n      nodesStore.updateNodePosition(id, left, top);\r\n    },\r\n    [nodesStore],\r\n  );\r\n\r\n  const addNode = (id: string, left: number, top: number) => {\r\n    nodesStore.addNode(id, left, top);\r\n  };\r\n\r\n  const handleAddNode = (event: React.MouseEvent<any, MouseEvent>) => {\r\n    const numberOfNodes = nodesStore.nodesKeys.length;\r\n    const identifier = `id:node${numberOfNodes}`;\r\n\r\n    addNode(identifier, event.clientX, event.clientY);\r\n  };\r\n\r\n  const loadFileClick = () => {\r\n    filesStore.setModal(true);\r\n  };\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.NODE,\r\n    drop(item: Node, monitor) {\r\n      const delta = monitor.getDifferenceFromInitialOffset() as {\r\n        x: number;\r\n        y: number;\r\n      };\r\n\r\n      const left = Math.round(item.left + delta.x);\r\n      const top = Math.round(item.top + delta.y);\r\n\r\n      moveNode(item.id, left, top);\r\n      return undefined;\r\n    },\r\n  });\r\n\r\n  const renderNode = (item: any, key: string) => {\r\n    return <DraggableDialogueNode key={key} id={key} {...item} />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!nodesStore.showModal && !filesStore.loadFileModal && (\r\n        <>\r\n          <ContextMenu\r\n            options={[\r\n              { label: 'New Node', callback: handleAddNode },\r\n              { label: 'Load File', callback: loadFileClick },\r\n              { label: 'Close' },\r\n            ]}\r\n            visible={showContextMenu}\r\n            changeVisibility={setShowContextMenu}\r\n          />\r\n\r\n          <Container\r\n            ref={drop}\r\n            onContextMenu={() => setShowContextMenu(true)}\r\n            onClick={() => setShowContextMenu(false)}\r\n          >\r\n            {nodesStore.nodesKeys.map((key) =>\r\n              renderNode(nodesStore.nodes[key], key),\r\n            )}\r\n            <svg\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              style={{\r\n                zIndex: 400,\r\n              }}\r\n            >\r\n              <defs>\r\n                <marker\r\n                  id=\"arrowhead\"\r\n                  markerWidth=\"10\"\r\n                  markerHeight=\"7\"\r\n                  refX=\"0\"\r\n                  refY=\"3.5\"\r\n                  orient=\"auto\"\r\n                >\r\n                  <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n                </marker>\r\n              </defs>\r\n              {connectionsStore.connections.map((connection) => {\r\n                const from = {\r\n                  x: nodesStore.nodes[connection.fromId].left,\r\n                  y: nodesStore.nodes[connection.fromId].top,\r\n                };\r\n\r\n                const to = {\r\n                  x: nodesStore.nodes[connection.toId].left,\r\n                  y: nodesStore.nodes[connection.toId].top,\r\n                };\r\n\r\n                return (\r\n                  <Connection\r\n                    key={`${connection.fromId}${connection.toId}`}\r\n                    from={from}\r\n                    to={to}\r\n                    markerMid=\"url(#arrowhead)\"\r\n                  />\r\n                );\r\n              })}\r\n            </svg>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default DragAndDropContainerGlobal;\r\n","import React from 'react';\r\n\r\nimport { CustomDragLayer, DragAndDropContainerGlobal } from '.';\r\n\r\n// import { Container } from './styles';\r\n\r\nconst DragAroundCustomLayer: React.FC = () => {\r\n  return (\r\n    <>\r\n      <DragAndDropContainerGlobal />\r\n      <CustomDragLayer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAroundCustomLayer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Backdrop = styled.div`\r\n  background: rgba(10, 10, 10, 0.8);\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  background: transparent;\r\n  width: auto;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  z-index: 300;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-right: -50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Backdrop, Container } from './styles';\r\n\r\ninterface Props {\r\n  children?: React.ReactElement | string;\r\n  show: boolean;\r\n  onBackdropClick?(): void;\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({ children, show, onBackdropClick }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop onClick={onBackdropClick} />\r\n      <Container>{children}</Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import './styles.css';\r\n\r\nimport { useField } from '@unform/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport MultiSelect from 'react-multi-select-component';\r\n\r\ninterface SelectProps {\r\n  name: string;\r\n  options: { label: string; value: string }[];\r\n  label?: string;\r\n}\r\n\r\ntype Props = JSX.IntrinsicElements['select'] & SelectProps;\r\n\r\nconst Select: React.FC<Props> = ({\r\n  name,\r\n  multiple,\r\n  options,\r\n  placeholder,\r\n  label,\r\n}) => {\r\n  const [values, setValues] = useState<any[]>([]);\r\n  const selectRef = useRef(null);\r\n\r\n  const { fieldName, registerField, defaultValue } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: selectRef.current,\r\n      getValue: () => {\r\n        if (!multiple) {\r\n          return values[0];\r\n        }\r\n\r\n        return values;\r\n      },\r\n      setValue: (ref, value) => {\r\n        if (!multiple) {\r\n          setValues([value]);\r\n        }\r\n      },\r\n    });\r\n  }, [registerField, fieldName, multiple, values]);\r\n\r\n  useEffect(() => {\r\n    if (defaultValue && multiple) {\r\n      setValues(defaultValue);\r\n    }\r\n  }, [defaultValue, multiple]);\r\n\r\n  const handleValueChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (!multiple) {\r\n      const vals = [];\r\n      vals.push(event.target.value);\r\n      setValues(vals);\r\n    }\r\n  };\r\n\r\n  if (!multiple) {\r\n    return (\r\n      <div className=\"select-group\">\r\n        {label && <label htmlFor={fieldName}>{label}</label>}\r\n        <select\r\n          ref={selectRef}\r\n          value={values[0]}\r\n          onChange={handleValueChange}\r\n          className=\"multi-select single\"\r\n          placeholder={placeholder}\r\n          defaultValue={defaultValue}\r\n        >\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // eslint-disable-next-line jsx-a11y/control-has-associated-label\r\n  return (\r\n    <div className=\"select-group\">\r\n      {label && <label htmlFor={fieldName}>{label}</label>}\r\n      <MultiSelect\r\n        options={options}\r\n        value={values}\r\n        onChange={setValues}\r\n        hasSelectAll={false}\r\n        labelledBy=\"Select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useField } from '@unform/core';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\ninterface Props {\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\ntype TextareaProps = JSX.IntrinsicElements['textarea'] & Props;\r\n\r\nconst TextArea: React.FC<TextareaProps> = ({ name, label, ...rest }) => {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const { fieldName, defaultValue, registerField, error } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      path: 'value',\r\n      ref: textareaRef.current,\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <div>\r\n      {label && <label htmlFor={fieldName}>{label}</label>}\r\n\r\n      <textarea\r\n        id={fieldName}\r\n        ref={textareaRef}\r\n        defaultValue={defaultValue}\r\n        style={{\r\n          width: '100%',\r\n          height: 400,\r\n          background: '#e4e4e4',\r\n          fontSize: 18,\r\n          padding: 20,\r\n          resize: 'none',\r\n        }}\r\n        {...rest}\r\n      />\r\n\r\n      {error && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import { Form as RawForm } from '@unform/web';\r\nimport styled from 'styled-components';\r\n\r\ninterface ModalContainerProps {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: ${(props) => props.theme.colors.sidebar};\r\n  width: ${(props: ModalContainerProps) => props.width || 400}px;\r\n  height: ${(props: ModalContainerProps) => props.height || 400}px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalTitle = styled.h3`\r\n  width: 100%;\r\n  height: 12.5%;\r\n\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  width: 100%;\r\n  height: 87.5%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Form = styled(RawForm)`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 20px;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport { RootStoreContext } from '../../stores';\r\nimport { ModalContainer, ModalContent, ModalTitle } from './styles';\r\n\r\nconst LoadModal: React.FC = observer(() => {\r\n  const { filesStore } = useContext(RootStoreContext);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onabort = () => console.log('Read aborted');\r\n      reader.onerror = () => console.log('Read failed');\r\n      reader.onload = () => {\r\n        const content = reader.result?.toString();\r\n        const json = content !== undefined && JSON.parse(content);\r\n\r\n        filesStore.file = json;\r\n        filesStore.loadFileContent();\r\n        filesStore.setModal(false);\r\n      };\r\n\r\n      reader.readAsText(acceptedFiles[0]);\r\n    },\r\n    [filesStore],\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: 'application/json',\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      show={filesStore.loadFileModal}\r\n      onBackdropClick={() => filesStore.setModal(false)}\r\n    >\r\n      <ModalContainer>\r\n        <ModalTitle>Load File</ModalTitle>\r\n        <ModalContent>\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {isDragActive ? (\r\n              <p>Drop the files here...</p>\r\n            ) : (\r\n              <p>Drag and drop files / Click here</p>\r\n            )}\r\n          </div>\r\n        </ModalContent>\r\n      </ModalContainer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default LoadModal;\r\n","import { FormHandles, SubmitHandler } from '@unform/core';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useRef } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport backend from 'react-dnd-html5-backend';\r\n\r\nimport Button from '../../components/Button';\r\nimport { DragAroundCustomLayer } from '../../components/DragAndDrop';\r\nimport Modal from '../../components/Modal';\r\nimport Select from '../../components/Select';\r\nimport { Space } from '../../components/Space';\r\nimport TextArea from '../../components/TextArea';\r\nimport { RootStoreContext } from '../../stores';\r\nimport LoadModal from './LoadModal';\r\nimport {\r\n  BoxContainer,\r\n  Center,\r\n  Form,\r\n  ModalContainer,\r\n  ModalContent,\r\n  ModalTitle,\r\n} from './styles';\r\n\r\n// Add three+ character dialogue option\r\n\r\ntype DialogueType = 'player' | 'ai-character';\r\n\r\ninterface NodeEditFormData {\r\n  text: string;\r\n  inConnections: { label: string; value: string }[];\r\n  outConnections: { label: string; value: string }[];\r\n  type: DialogueType;\r\n}\r\n\r\nconst Main: React.FC = observer(() => {\r\n  const { nodesStore, connectionsStore } = useContext(RootStoreContext);\r\n  const editNodeFormRef = useRef<FormHandles>(null);\r\n\r\n  const deleteNode = (id: string) => {\r\n    nodesStore.deleteNode(id);\r\n  };\r\n\r\n  const handleEditFormSubmit: SubmitHandler<NodeEditFormData> = (data) => {\r\n    console.log(data);\r\n    const { inConnections, outConnections, text, type } = data;\r\n\r\n    const node = nodesStore.activeNode;\r\n\r\n    node.text = text;\r\n    node.dialogueType = type;\r\n    node.inConnections = inConnections.map((connection) => connection.value);\r\n    node.outConnections = outConnections.map((connection) => connection.value);\r\n\r\n    outConnections.forEach((connection) => {\r\n      if (!nodesStore.nodes[connection.value].inConnections) {\r\n        nodesStore.nodes[connection.value].inConnections = [];\r\n      }\r\n\r\n      if (\r\n        !nodesStore.nodes[connection.value].inConnections?.includes(node.id)\r\n      ) {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        nodesStore.nodes[connection.value].inConnections?.push(node.id);\r\n      }\r\n\r\n      connectionsStore.addConnection(node.id, connection.value);\r\n    });\r\n\r\n    inConnections.forEach((connection) => {\r\n      if (!nodesStore.nodes[connection.value].outConnections) {\r\n        nodesStore.nodes[connection.value].outConnections = [];\r\n      }\r\n\r\n      if (\r\n        !nodesStore.nodes[connection.value].outConnections?.includes(node.id)\r\n      ) {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        nodesStore.nodes[connection.value].outConnections?.push(node.id);\r\n      }\r\n      connectionsStore.addConnection(connection.value, node.id);\r\n    });\r\n\r\n    nodesStore.setActiveNode('', null);\r\n  };\r\n\r\n  const renderModal = () => {\r\n    if (nodesStore.activeNodeModal.mode === 'delete') {\r\n      return (\r\n        <Modal\r\n          show={nodesStore.showModal}\r\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\r\n        >\r\n          <ModalContainer>\r\n            <ModalTitle>Are you sure you want to delete this node?</ModalTitle>\r\n            <ModalContent>\r\n              <Button\r\n                onClick={() => {\r\n                  deleteNode(nodesStore.activeNodeModal.id);\r\n                  nodesStore.setActiveNode('', null);\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n              <Space width=\"100%\" height={20} />\r\n              <Button onClick={() => nodesStore.setActiveNode('', null)}>\r\n                No\r\n              </Button>\r\n            </ModalContent>\r\n          </ModalContainer>\r\n        </Modal>\r\n      );\r\n    }\r\n    if (nodesStore.activeNodeModal.mode === 'edit') {\r\n      const node = nodesStore.activeNode;\r\n      const initialText = node.text;\r\n      const initialDialogueType = node.dialogueType;\r\n\r\n      const tempIn = [];\r\n      const tempOut = [];\r\n\r\n      if (node.inConnections !== undefined) {\r\n        for (let i = 0; i < node.inConnections?.length; i += 1) {\r\n          tempIn.push({\r\n            label: node.inConnections[i],\r\n            value: node.inConnections[i],\r\n          });\r\n        }\r\n      }\r\n\r\n      if (node.outConnections !== undefined) {\r\n        for (let i = 0; i < node.outConnections?.length; i += 1) {\r\n          tempOut.push({\r\n            label: node.outConnections[i],\r\n            value: node.outConnections[i],\r\n          });\r\n        }\r\n      }\r\n\r\n      const initialInConnections = tempIn;\r\n      const initialOutConnections = tempOut;\r\n\r\n      return (\r\n        <Modal\r\n          show={nodesStore.showModal}\r\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\r\n        >\r\n          <ModalContainer width={1000} height={800}>\r\n            <ModalTitle>\r\n              {`Editing ${nodesStore.activeNodeModal.id}`}\r\n            </ModalTitle>\r\n            <ModalContent>\r\n              <Form\r\n                ref={editNodeFormRef}\r\n                onSubmit={handleEditFormSubmit}\r\n                initialData={{\r\n                  text: initialText,\r\n                  inConnections: initialInConnections,\r\n                  outConnections: initialOutConnections,\r\n                  type: initialDialogueType,\r\n                }}\r\n              >\r\n                <BoxContainer>\r\n                  <Select\r\n                    name=\"inConnections\"\r\n                    label=\"In Connections\"\r\n                    multiple\r\n                    options={nodesStore.activeNodeOptions}\r\n                  />\r\n                  <Select\r\n                    name=\"outConnections\"\r\n                    label=\"Out Connections\"\r\n                    multiple\r\n                    options={nodesStore.activeNodeOptions}\r\n                  />\r\n                  <Select\r\n                    name=\"type\"\r\n                    label=\"Dialogue Type\"\r\n                    options={nodesStore.dialogueTypeOptions}\r\n                  />\r\n                </BoxContainer>\r\n                <Space width=\"100%\" height={20} />\r\n                <BoxContainer>\r\n                  <TextArea name=\"text\" autoFocus placeholder=\"Dialogue text\" />\r\n                </BoxContainer>\r\n                <Space width=\"100%\" height={30} />\r\n                <Center>\r\n                  <Button onClick={() => editNodeFormRef.current?.submitForm()}>\r\n                    Save\r\n                  </Button>\r\n                </Center>\r\n              </Form>\r\n            </ModalContent>\r\n          </ModalContainer>\r\n        </Modal>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderModal()}\r\n      <LoadModal />\r\n      <DndProvider backend={backend}>\r\n        <DragAroundCustomLayer />\r\n      </DndProvider>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Main;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    top: 0;\r\n    left: 0;\r\n    font-family: 'Fira Code', monospace;\r\n  }\r\n\r\n  html, body {\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n\r\n  #root {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const SidebarContainer = styled.div`\r\n  width: 15vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 85vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const RootContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n","import 'mobx-react-lite/batchingForReactDom';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport Sidebar from './components/Sidebar';\r\nimport Main from './pages/Main';\r\nimport {\r\n  ContentContainer,\r\n  GlobalStyles,\r\n  RootContainer,\r\n  SidebarContainer,\r\n} from './styles/global';\r\nimport { light } from './styles/themes/light';\r\n\r\n// import { dark } from './styles/themes/dark';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyles />\r\n    <ThemeProvider theme={light}>\r\n      <RootContainer>\r\n        <SidebarContainer>\r\n          <Sidebar />\r\n        </SidebarContainer>\r\n        <ContentContainer>\r\n          <Main />\r\n        </ContentContainer>\r\n      </RootContainer>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const light: DefaultTheme = {\r\n  name: 'light',\r\n  colors: {\r\n    background: '#f0f0f0',\r\n    sidebar: '#1b1b2f',\r\n    primary: '#e43f5a',\r\n    text: '#000',\r\n    textSecondary: '#fff',\r\n    accent: '#e0ac1b',\r\n  },\r\n};\r\n"],"sourceRoot":""}
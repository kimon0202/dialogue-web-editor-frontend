{"version":3,"sources":["stores/connectionsStore.ts","stores/filesStore.ts","stores/nodesStore.ts","stores/index.ts","components/Button/styles.ts","components/Button/index.tsx","components/Space/index.ts","components/Sidebar/styles.ts","components/Sidebar/index.tsx","types/ItemTypes.ts","utils/getStyles.ts","components/Nodes/Connection.tsx","components/Nodes/styles.ts","components/Nodes/DialogueNode.tsx","components/Nodes/DialogueNodeDragPreview.tsx","components/Nodes/DraggableDialogueNode.tsx","components/DragAndDrop/styles.ts","components/DragAndDrop/CustomDragLayer.tsx","components/ContextMenu/styles.ts","components/ContextMenu/index.tsx","components/DragAndDrop/DragAndDropContainerGlobal.tsx","components/DragAndDrop/DragAroundCustomLayer.tsx","components/Modal/styles.ts","components/Modal/index.tsx","components/Select/index.tsx","components/TextArea/index.tsx","pages/Main/styles.ts","pages/Main/LoadModal.tsx","pages/Main/index.tsx","styles/global.ts","index.tsx","styles/themes/light.ts"],"names":["ConnectionsStore","rootStore","connections","this","fromId","toId","i","length","temp","update","$push","id","forEach","connection","index","push","splice","decorate","observable","addConnection","action","removeConnnections","FilesStore","file","loadFileModal","state","nodesStore","nodes","connectionsStore","setModal","loadFileContent","NodesStore","left","top","dialogueType","undefined","inConnections","outConnections","text","activeNodeModal","mode","$merge","newNodes","$set","nodesKeys","key","filesStore","opts","filter","activeNode","possibleOptions","option","label","value","Object","keys","updateNodePosition","addNode","setActiveNode","reset","computed","activeNodeOptions","showModal","dialogueTypeOptions","RootStoreContext","createContext","StyledButton","styled","button","props","theme","colors","accent","shade","Button","children","onClick","type","Space","div","width","height","Container","sidebar","TitleContainer","ButtonsContainer","Sidebar","observer","useContext","handleFileDownload","a","json","JSON","stringify","blob","Blob","URL","createObjectURL","href","link","document","createElement","download","name","body","appendChild","click","removeChild","createdAt","Date","now","ItemTypes","getStyles","isDragging","transform","position","WebkitTransform","opacity","getItemStyles","initialOffset","currentOffset","display","x","y","Connection","from","x1","y1","to","x2","y2","markerMid","stroke","strokeWidth","strokeLinecap","markerUnits","d","linearGradient","colorStops","toDirection","fallback","IconsContainer","ContentContainer","textSecondary","DeleteIcon","Delete","EditIcon","Edit","DialogueNode","identifier","DialogueNodeDragPreview","DraggableDialogueNode","useDrag","item","collect","monitor","drag","preview","useEffect","getEmptyImage","captureDraggingState","ref","style","background","DragLayer","CustomDragLayer","useDragLayer","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","ContextItem","last","ContextMenu","options","visible","changeVisibility","useState","setPosition","handleContextMenu","event","preventDefault","clientX","clientY","addEventListener","removeEventListener","map","arr","toString","callback","handleContextMenuBlur","DragAndDropContainerGlobal","showContextMenu","setShowContextMenu","moveNode","useCallback","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","numberOfNodes","onContextMenu","renderNode","zIndex","markerWidth","markerHeight","refX","refY","orient","points","DragAroundCustomLayer","Backdrop","Modal","show","onBackdropClick","Select","multiple","placeholder","values","setValues","selectRef","useRef","useField","fieldName","registerField","defaultValue","current","getValue","setValue","className","htmlFor","onChange","hasSelectAll","labelledBy","vals","target","TextArea","rest","textareaRef","error","path","fontSize","padding","resize","ModalContainer","ModalTitle","h3","ModalContent","Center","BoxContainer","Form","RawForm","LoadModal","onDrop","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","content","result","parse","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","Main","editNodeFormRef","handleEditFormSubmit","data","node","deleteNode","initialText","initialDialogueType","tempIn","tempOut","initialInConnections","initialOutConnections","onSubmit","initialData","autoFocus","submitForm","renderModal","DndProvider","backend","GlobalStyles","createGlobalStyle","SidebarContainer","RootContainer","ReactDOM","render","StrictMode","primary","getElementById"],"mappings":"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","file":"static/js/main.18db428d.chunk.js","sourcesContent":["import update from 'immutability-helper';\r\nimport { action, decorate, observable } from 'mobx';\r\n\r\nimport { RootStore } from '.';\r\nimport { Connection } from '../types/Connection';\r\n\r\nclass ConnectionsStore {\r\n  private rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  connections: Connection[] = [];\r\n\r\n  public addConnection(fromId: string, toId: string) {\r\n    for (let i = 0; i < this.connections.length; i += 1) {\r\n      if (\r\n        this.connections[i].fromId === fromId &&\r\n        this.connections[i].toId === toId\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const temp = update(this.connections, {\r\n      $push: [{ fromId, toId }],\r\n    });\r\n\r\n    this.connections = temp;\r\n  }\r\n\r\n  public removeConnnections(id: string) {\r\n    const temp: number[] = [];\r\n\r\n    this.connections.forEach((connection, index) => {\r\n      if (connection.fromId === id || connection.toId === id) {\r\n        temp.push(index);\r\n      }\r\n    });\r\n\r\n    temp.forEach((index) => {\r\n      this.connections.splice(index, 1);\r\n    });\r\n  }\r\n}\r\n\r\ndecorate(ConnectionsStore, {\r\n  connections: observable,\r\n  addConnection: action,\r\n  removeConnnections: action,\r\n});\r\n\r\nexport default ConnectionsStore;\r\n","import { action, decorate, observable } from 'mobx';\r\n\r\nimport { RootStore } from '.';\r\nimport { FileData } from '../types/FileData';\r\n\r\nclass FilesStore {\r\n  private rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  file: FileData = {} as FileData;\r\n  loadFileModal = false;\r\n\r\n  public setModal(state: boolean) {\r\n    this.loadFileModal = state;\r\n  }\r\n\r\n  public loadFileContent() {\r\n    if (!this.file) {\r\n      return;\r\n    }\r\n\r\n    this.rootStore.nodesStore.nodes = this.file.nodes;\r\n    this.rootStore.connectionsStore.connections = this.file.connections;\r\n  }\r\n}\r\n\r\ndecorate(FilesStore, {\r\n  file: observable,\r\n  loadFileModal: observable,\r\n  setModal: action,\r\n  loadFileContent: action,\r\n});\r\n\r\nexport default FilesStore;\r\n","import update from 'immutability-helper';\r\nimport { action, computed, decorate, observable } from 'mobx';\r\n\r\nimport { RootStore } from '.';\r\nimport { FileData } from '../types/FileData';\r\nimport { NodeMap } from '../types/Node';\r\n\r\ninterface ActiveNodeModal {\r\n  id: string;\r\n  mode: 'delete' | 'edit' | null;\r\n}\r\n\r\nclass NodesStore {\r\n  private rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  nodes: NodeMap = {\r\n    'id:rootNode': {\r\n      id: 'id:rootNode',\r\n      left: 80,\r\n      top: 20,\r\n      dialogueType: undefined,\r\n      inConnections: [],\r\n      outConnections: [],\r\n      text: '',\r\n    },\r\n  };\r\n\r\n  activeNodeModal: ActiveNodeModal = {\r\n    id: '',\r\n    mode: null,\r\n  };\r\n\r\n  public updateNodePosition(id: string, left: number, top: number) {\r\n    this.nodes = update(this.nodes, {\r\n      [id]: {\r\n        $merge: { left, top },\r\n      },\r\n    });\r\n  }\r\n\r\n  public addNode(id: string, left: number, top: number) {\r\n    const newNodes = update(this.nodes, {\r\n      [id]: {\r\n        $set: {\r\n          left,\r\n          top,\r\n          id,\r\n          dialogueType: undefined,\r\n          inConnections: [],\r\n          outConnections: [],\r\n          text: '',\r\n        },\r\n      },\r\n    });\r\n\r\n    this.nodes = newNodes;\r\n  }\r\n\r\n  public deleteNode(id: string) {\r\n    this.nodesKeys.forEach((key) => {\r\n      if (key === id) {\r\n        delete this.nodes[id];\r\n      }\r\n    });\r\n  }\r\n\r\n  public setActiveNode(id: string, mode: 'delete' | 'edit' | null) {\r\n    this.activeNodeModal = {\r\n      id,\r\n      mode,\r\n    };\r\n  }\r\n\r\n  public reset() {\r\n    this.nodes = {\r\n      'id:rootNode': {\r\n        id: 'id:rootNode',\r\n        left: 80,\r\n        top: 20,\r\n        dialogueType: undefined,\r\n        inConnections: [],\r\n        outConnections: [],\r\n        text: '',\r\n      },\r\n    };\r\n    this.rootStore.connectionsStore.connections = [];\r\n    this.rootStore.filesStore.file = {} as FileData;\r\n  }\r\n\r\n  public get activeNode() {\r\n    return this.nodes[this.activeNodeModal.id];\r\n  }\r\n\r\n  public get activeNodeOptions() {\r\n    const opts = this.nodesKeys.filter((key) => key !== this.activeNode.id);\r\n    const possibleOptions: { label: string; value: string }[] = [];\r\n\r\n    opts.forEach((option) => {\r\n      possibleOptions.push({\r\n        label: option,\r\n        value: option,\r\n      });\r\n    });\r\n\r\n    return possibleOptions;\r\n  }\r\n\r\n  public get nodesKeys() {\r\n    return Object.keys(this.nodes);\r\n  }\r\n\r\n  public get showModal() {\r\n    return this.activeNodeModal.id !== '';\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public get dialogueTypeOptions() {\r\n    const options: { label: string; value: string }[] = [\r\n      {\r\n        label: 'Player',\r\n        value: 'Player',\r\n      },\r\n      {\r\n        label: 'AICharacter',\r\n        value: 'AICharacter',\r\n      },\r\n    ];\r\n\r\n    return options;\r\n  }\r\n}\r\n\r\ndecorate(NodesStore, {\r\n  nodes: observable,\r\n  activeNodeModal: observable,\r\n  updateNodePosition: action,\r\n  addNode: action,\r\n  setActiveNode: action,\r\n  reset: action,\r\n  activeNode: computed,\r\n  activeNodeOptions: computed,\r\n  nodesKeys: computed,\r\n  showModal: computed,\r\n  dialogueTypeOptions: computed,\r\n});\r\n\r\nexport default NodesStore;\r\n","import { createContext } from 'react';\r\n\r\nimport ConnectionsStore from './connectionsStore';\r\nimport FilesStore from './filesStore';\r\nimport NodesStore from './nodesStore';\r\n\r\nexport class RootStore {\r\n  public nodesStore: NodesStore = new NodesStore(this);\r\n  public connectionsStore: ConnectionsStore = new ConnectionsStore(this);\r\n  public filesStore: FilesStore = new FilesStore(this);\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import { shade } from 'polished';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  background: ${(props) => props.theme.colors.accent};\r\n  cursor: pointer;\r\n\r\n  border: none;\r\n  outline: none;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 150px;\r\n  height: 60px;\r\n\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n\r\n  :hover {\r\n    background: ${(props) => shade(0.25, props.theme.colors.accent as string)};\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledButton } from './styles';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactElement | string;\r\n  onClick?(): void;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  width: number | string;\r\n  height: number | string;\r\n}\r\n\r\nexport const Space = styled.div`\r\n  width: ${(props: Props) =>\r\n    typeof props.width === typeof 'aa' ? props.width : `${props.width}px`};\r\n\r\n  height: ${(props: Props) =>\r\n    typeof props.height === typeof 'aa' ? props.height : `${props.height}px`};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${(props) => props.theme.colors.sidebar};\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 10%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n\r\n  color: #fff;\r\n\r\n  padding-top: 20px;\r\n  z-index: 200;\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { FileData } from '../../types/FileData';\r\nimport Button from '../Button';\r\nimport { Space } from '../Space';\r\nimport { ButtonsContainer, Container, TitleContainer } from './styles';\r\n\r\nconst Sidebar: React.FC = observer(() => {\r\n  const { nodesStore, connectionsStore, filesStore } = useContext(\r\n    RootStoreContext,\r\n  );\r\n\r\n  const handleSave = () => {\r\n    const file: FileData = {\r\n      name: 'NewFile',\r\n      createdAt: Date.now(),\r\n      nodes: nodesStore.nodes,\r\n      connections: connectionsStore.connections,\r\n    };\r\n\r\n    filesStore.file = file;\r\n  };\r\n\r\n  const handleFileDownload = async () => {\r\n    const json = JSON.stringify(filesStore.file);\r\n    const blob = new Blob([json], { type: 'application/json' });\r\n    const href = await URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = href;\r\n    link.download = filesStore.file.name + '.json';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <TitleContainer>Dialogue Editor</TitleContainer>\r\n      <Space width=\"100%\" height={30} />\r\n      <ButtonsContainer>\r\n        <Button\r\n          onClick={() => {\r\n            nodesStore.reset();\r\n            nodesStore.setActiveNode('', null);\r\n          }}\r\n        >\r\n          Clear\r\n        </Button>\r\n        <Space width=\"100%\" height={20} />\r\n        <Button onClick={handleSave}>Save</Button>\r\n        <Space width=\"100%\" height={20} />\r\n        <Button onClick={() => filesStore.setModal(true)}>Load File</Button>\r\n        {filesStore.file.name ? (\r\n          <>\r\n            <Space width=\"100%\" height={20} />\r\n            <Button onClick={() => handleFileDownload()}>Download File</Button>\r\n          </>\r\n        ) : null}\r\n      </ButtonsContainer>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default Sidebar;\r\n","export const ItemTypes = {\r\n  NODE: 'node',\r\n};\r\n","import { CSSProperties } from 'react';\r\nimport { XYCoord } from 'react-dnd';\r\n\r\nexport const getStyles = (\r\n  left: number,\r\n  top: number,\r\n  isDragging: boolean,\r\n): CSSProperties => {\r\n  const transform = `translate3d(${left}px, ${top}px, 0)`;\r\n\r\n  return {\r\n    position: 'absolute',\r\n    transform,\r\n    WebkitTransform: transform,\r\n    opacity: isDragging ? 0 : 1,\r\n    height: isDragging ? 0 : '',\r\n  };\r\n};\r\n\r\nexport const getItemStyles = (\r\n  initialOffset: XYCoord | null,\r\n  currentOffset: XYCoord | null,\r\n): CSSProperties => {\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: 'none',\r\n    };\r\n  }\r\n\r\n  const { x, y } = currentOffset;\r\n  const transform = `translate(${x}px, ${y}px)`;\r\n\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform,\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  from: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  to: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  markerMid: string;\r\n}\r\n\r\nconst Connection: React.FC<Props> = ({\r\n  from: { x: x1, y: y1 },\r\n  to: { x: x2, y: y2 },\r\n  markerMid,\r\n}) => {\r\n  return (\r\n    <path\r\n      stroke=\"#000\"\r\n      strokeWidth={2}\r\n      strokeLinecap=\"round\"\r\n      markerUnits={2}\r\n      d={`M${x1 + 75},${y1 + 50}L${(x1 + x2 + 150) / 2},${\r\n        (y1 + y2 + 100) / 2\r\n      }L${x2 + 75},${y2 + 50}`}\r\n      markerMid={markerMid}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Connection;\r\n","import { Delete, Edit } from '@material-ui/icons';\r\nimport { linearGradient } from 'polished';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 150px;\r\n  height: 100px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: ${(props) =>\r\n    linearGradient({\r\n      colorStops: [`${props.theme.colors.sidebar} 5%`, `#1c1c2f 80%`],\r\n      toDirection: 'to top right',\r\n      fallback: '#fff',\r\n    })};\r\n  border: 1px solid ${(props) => props.theme.colors.text};\r\n\r\n  border-radius: 20px;\r\n  box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const IconsContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  padding: 5px 10px;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 60px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: move;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const DeleteIcon = styled(Delete)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const EditIcon = styled(Edit)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n\r\n  cursor: pointer;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport {\r\n  Container,\r\n  ContentContainer,\r\n  DeleteIcon,\r\n  EditIcon,\r\n  IconsContainer,\r\n} from './styles';\r\n\r\ninterface DialogueNodeProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNode: React.FC<DialogueNodeProps> = observer(({ identifier }) => {\r\n  const { nodesStore } = useContext(RootStoreContext);\r\n\r\n  const deleteNode = () => {\r\n    nodesStore.setActiveNode(identifier, 'delete');\r\n  };\r\n\r\n  const editNode = () => {\r\n    nodesStore.setActiveNode(identifier, 'edit');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <IconsContainer>\r\n        {identifier === 'id:rootNode' ? null : (\r\n          <DeleteIcon onClick={deleteNode} />\r\n        )}\r\n        <EditIcon onClick={editNode} />\r\n      </IconsContainer>\r\n      <ContentContainer>{identifier}</ContentContainer>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DialogueNode;\r\n","import React from 'react';\r\n\r\nimport DialogueNode from './DialogueNode';\r\n\r\ninterface DialogueNodeDragPreviewProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNodeDragPreview: React.FC<DialogueNodeDragPreviewProps> = ({\r\n  identifier,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <DialogueNode identifier={identifier} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueNodeDragPreview;\r\n","import React, { useEffect } from 'react';\r\nimport { DragSourceMonitor, useDrag } from 'react-dnd';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getStyles } from '../../utils/getStyles';\r\nimport DialogueNode from './DialogueNode';\r\n\r\nconst DraggableDialogueNode: React.FC<Node> = ({ id, left, top }) => {\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: ItemTypes.NODE, id, left, top },\r\n    collect: (monitor: DragSourceMonitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true });\r\n  }, [preview]);\r\n\r\n  return (\r\n    <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n      <DialogueNode identifier={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableDialogueNode;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n\r\n  background: ${(props) => props.theme.colors.background};\r\n`;\r\n\r\nexport const DragLayer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 100;\r\n  position: fixed;\r\n  pointer-events: none;\r\n`;\r\n","import React from 'react';\r\nimport { useDragLayer } from 'react-dnd';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getItemStyles } from '../../utils/getStyles';\r\nimport { DialogueNodeDragPreview } from '../Nodes';\r\nimport { DragLayer } from './styles';\r\n\r\nconst CustomDragLayer: React.FC = () => {\r\n  const {\r\n    itemType,\r\n    isDragging,\r\n    item,\r\n    initialOffset,\r\n    currentOffset,\r\n  } = useDragLayer((monitor) => ({\r\n    item: monitor.getItem() as Node,\r\n    itemType: monitor.getItemType(),\r\n    initialOffset: monitor.getInitialSourceClientOffset(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging(),\r\n  }));\r\n\r\n  const renderItem = () => {\r\n    switch (itemType) {\r\n      case ItemTypes.NODE:\r\n        return <DialogueNodeDragPreview identifier={item.id} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (!isDragging) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <DragLayer>\r\n      <div style={getItemStyles(initialOffset, currentOffset)}>\r\n        {renderItem()}\r\n      </div>\r\n    </DragLayer>\r\n  );\r\n};\r\n\r\nexport default CustomDragLayer;\r\n","import styled from 'styled-components';\r\n\r\ninterface ContainerProps {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface ContextItemProps {\r\n  last: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: ${(props: ContainerProps) => props.y}px;\r\n  left: ${(props: ContainerProps) => props.x + 5}px;\r\n\r\n  z-index: 300;\r\n`;\r\n\r\nexport const ContextItem = styled.div`\r\n  background: #fff;\r\n  border-bottom: ${(props: ContextItemProps) =>\r\n    !props.last ? 'dotted 1px #ccc' : null};\r\n  padding: 5px 25px;\r\n\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f1f1f1;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Container, ContextItem } from './styles';\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Option {\r\n  label: string;\r\n  callback?(event: React.MouseEvent<any, MouseEvent>): void;\r\n}\r\n\r\ninterface Props {\r\n  options: Option[];\r\n  visible: boolean;\r\n  changeVisibility(state: boolean): void;\r\n}\r\n\r\nconst ContextMenu: React.FC<Props> = ({\r\n  options,\r\n  visible,\r\n  changeVisibility,\r\n}) => {\r\n  const [position, setPosition] = useState<Position>({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  const handleContextMenu = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    const { clientX: x, clientY: y } = event;\r\n\r\n    setPosition({ x, y });\r\n  };\r\n\r\n  const handleContextMenuBlur = (event: React.MouseEvent<any, MouseEvent>) => {\r\n    event.preventDefault();\r\n\r\n    changeVisibility(false);\r\n    setPosition({ x: 0, y: 0 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('contextmenu', handleContextMenu);\r\n    // document.addEventListener('click', handleContextMenuBlur);\r\n\r\n    return () => {\r\n      document.removeEventListener('contextmenu', handleContextMenu);\r\n      // document.removeEventListener('click', handleContextMenuBlur);\r\n    };\r\n  }, []);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Container x={position.x} y={position.y}>\r\n      {options.map((item, index, arr) => {\r\n        return (\r\n          <ContextItem\r\n            key={index.toString()}\r\n            last={arr.length - 1 === index}\r\n            onClick={(event) => {\r\n              if (item.callback) item.callback(event);\r\n              handleContextMenuBlur(event);\r\n            }}\r\n          >\r\n            {item.label}\r\n          </ContextItem>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport ContextMenu from '../ContextMenu';\r\nimport { Connection as ConnectionLine, DraggableDialogueNode } from '../Nodes';\r\nimport { Container } from './styles';\r\n\r\nconst DragAndDropContainerGlobal: React.FC = observer(() => {\r\n  const [showContextMenu, setShowContextMenu] = useState(false);\r\n  const { nodesStore, connectionsStore, filesStore } = useContext(\r\n    RootStoreContext,\r\n  );\r\n\r\n  const moveNode = useCallback(\r\n    (id: string, left: number, top: number) => {\r\n      nodesStore.updateNodePosition(id, left, top);\r\n    },\r\n    [nodesStore],\r\n  );\r\n\r\n  const addNode = (id: string, left: number, top: number) => {\r\n    nodesStore.addNode(id, left, top);\r\n  };\r\n\r\n  const handleAddNode = (event: React.MouseEvent<any, MouseEvent>) => {\r\n    const numberOfNodes = nodesStore.nodesKeys.length;\r\n    const identifier = `id:node${numberOfNodes}`;\r\n\r\n    addNode(identifier, event.clientX, event.clientY);\r\n  };\r\n\r\n  const loadFileClick = () => {\r\n    filesStore.setModal(true);\r\n  };\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.NODE,\r\n    drop(item: Node, monitor) {\r\n      const delta = monitor.getDifferenceFromInitialOffset() as {\r\n        x: number;\r\n        y: number;\r\n      };\r\n\r\n      const left = Math.round(item.left + delta.x);\r\n      const top = Math.round(item.top + delta.y);\r\n\r\n      moveNode(item.id, left, top);\r\n      return undefined;\r\n    },\r\n  });\r\n\r\n  const renderNode = (item: any, key: string) => {\r\n    return <DraggableDialogueNode key={key} id={key} {...item} />;\r\n  };\r\n\r\n  if (nodesStore.showModal || filesStore.loadFileModal) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ContextMenu\r\n        options={[\r\n          { label: 'New Node', callback: handleAddNode },\r\n          { label: 'Load File', callback: loadFileClick },\r\n          { label: 'Close' },\r\n        ]}\r\n        visible={showContextMenu}\r\n        changeVisibility={setShowContextMenu}\r\n      />\r\n\r\n      <Container\r\n        ref={drop}\r\n        onContextMenu={() => setShowContextMenu(true)}\r\n        onClick={() => setShowContextMenu(false)}\r\n      >\r\n        {nodesStore.nodesKeys.map((key) =>\r\n          renderNode(nodesStore.nodes[key], key),\r\n        )}\r\n        <svg\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          style={{\r\n            zIndex: 400,\r\n          }}\r\n        >\r\n          <defs>\r\n            <marker\r\n              id=\"arrowhead\"\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"0\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n            >\r\n              <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n            </marker>\r\n          </defs>\r\n          {connectionsStore.connections.length > 0\r\n            ? connectionsStore.connections.map((connection) => {\r\n                const from = {\r\n                  x: nodesStore.nodes[connection.fromId].left,\r\n                  y: nodesStore.nodes[connection.fromId].top,\r\n                };\r\n\r\n                const to = {\r\n                  x: nodesStore.nodes[connection.toId].left,\r\n                  y: nodesStore.nodes[connection.toId].top,\r\n                };\r\n\r\n                return (\r\n                  <ConnectionLine\r\n                    key={`${connection.fromId}${connection.toId}`}\r\n                    from={from}\r\n                    to={to}\r\n                    markerMid=\"url(#arrowhead)\"\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n        </svg>\r\n      </Container>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default DragAndDropContainerGlobal;\r\n","import React from 'react';\r\n\r\nimport { CustomDragLayer, DragAndDropContainerGlobal } from '.';\r\n\r\n// import { Container } from './styles';\r\n\r\nconst DragAroundCustomLayer: React.FC = () => {\r\n  return (\r\n    <>\r\n      <DragAndDropContainerGlobal />\r\n      <CustomDragLayer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAroundCustomLayer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Backdrop = styled.div`\r\n  background: rgba(10, 10, 10, 0.8);\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  background: transparent;\r\n  width: auto;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  z-index: 300;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-right: -50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Backdrop, Container } from './styles';\r\n\r\ninterface Props {\r\n  children?: React.ReactElement | string;\r\n  show: boolean;\r\n  onBackdropClick?(): void;\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({ children, show, onBackdropClick }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop onClick={onBackdropClick} />\r\n      <Container>{children}</Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import './styles.css';\r\n\r\nimport { useField } from '@unform/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport MultiSelect from 'react-multi-select-component';\r\n\r\ninterface SelectProps {\r\n  name: string;\r\n  options: { label: string; value: string }[];\r\n  label?: string;\r\n}\r\n\r\ntype Props = JSX.IntrinsicElements['select'] & SelectProps;\r\n\r\nconst Select: React.FC<Props> = ({\r\n  name,\r\n  multiple,\r\n  options,\r\n  placeholder,\r\n  label,\r\n}) => {\r\n  const [values, setValues] = useState<any[]>([]);\r\n  const selectRef = useRef(null);\r\n\r\n  const { fieldName, registerField, defaultValue } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: selectRef.current,\r\n      getValue: () => {\r\n        if (!multiple) {\r\n          return values[0];\r\n        }\r\n\r\n        return values;\r\n      },\r\n      setValue: (ref, value) => {\r\n        if (!multiple) {\r\n          setValues([value]);\r\n        }\r\n      },\r\n    });\r\n  }, [registerField, fieldName, multiple, values]);\r\n\r\n  useEffect(() => {\r\n    if (defaultValue && multiple) {\r\n      setValues(defaultValue);\r\n    }\r\n  }, [defaultValue, multiple]);\r\n\r\n  const handleValueChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (!multiple) {\r\n      const vals = [];\r\n      vals.push(event.target.value);\r\n      setValues(vals);\r\n    }\r\n  };\r\n\r\n  if (!multiple) {\r\n    return (\r\n      <div className=\"select-group\">\r\n        {label && <label htmlFor={fieldName}>{label}</label>}\r\n        <select\r\n          ref={selectRef}\r\n          value={values[0]}\r\n          onChange={handleValueChange}\r\n          className=\"multi-select single\"\r\n          placeholder={placeholder}\r\n          defaultValue={defaultValue}\r\n        >\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // eslint-disable-next-line jsx-a11y/control-has-associated-label\r\n  return (\r\n    <div className=\"select-group\">\r\n      {label && <label htmlFor={fieldName}>{label}</label>}\r\n      <MultiSelect\r\n        options={options}\r\n        value={values}\r\n        onChange={setValues}\r\n        hasSelectAll={false}\r\n        labelledBy=\"Select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useField } from '@unform/core';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\ninterface Props {\r\n  name: string;\r\n  label?: string;\r\n  width?: number;\r\n}\r\n\r\ntype TextareaProps = JSX.IntrinsicElements['textarea'] & Props;\r\n\r\nconst TextArea: React.FC<TextareaProps> = ({ name, label, width, ...rest }) => {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const { fieldName, defaultValue, registerField, error } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      path: 'value',\r\n      ref: textareaRef.current,\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <div>\r\n      {label ? <label htmlFor={fieldName}>{label}</label> : null}\r\n\r\n      <textarea\r\n        id={fieldName}\r\n        ref={textareaRef}\r\n        defaultValue={defaultValue}\r\n        style={{\r\n          width: width || 400,\r\n          height: 400,\r\n          background: '#e4e4e4',\r\n          fontSize: 18,\r\n          padding: 20,\r\n          resize: 'none',\r\n        }}\r\n        {...rest}\r\n      />\r\n\r\n      {error ? <span>{error}</span> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import { Form as RawForm } from '@unform/web';\r\nimport styled from 'styled-components';\r\n\r\ninterface ModalContainerProps {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: ${(props) => props.theme.colors.sidebar};\r\n  width: ${(props: ModalContainerProps) => props.width || 400}px;\r\n  height: ${(props: ModalContainerProps) => props.height || 400}px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalTitle = styled.h3`\r\n  width: 100%;\r\n  height: 12.5%;\r\n\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  width: 100%;\r\n  height: 87.5%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Form = styled(RawForm)`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 20px;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport { RootStoreContext } from '../../stores';\r\nimport { ModalContainer, ModalContent, ModalTitle } from './styles';\r\n\r\nconst LoadModal: React.FC = observer(() => {\r\n  const { filesStore } = useContext(RootStoreContext);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onabort = () => console.log('Read aborted');\r\n      reader.onerror = () => console.log('Read failed');\r\n      reader.onload = () => {\r\n        const content = reader.result?.toString();\r\n        const json = content !== undefined && JSON.parse(content);\r\n\r\n        filesStore.file = json;\r\n        filesStore.loadFileContent();\r\n        filesStore.setModal(false);\r\n      };\r\n\r\n      reader.readAsText(acceptedFiles[0]);\r\n    },\r\n    [filesStore],\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: 'application/json',\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      show={filesStore.loadFileModal}\r\n      onBackdropClick={() => filesStore.setModal(false)}\r\n    >\r\n      <ModalContainer>\r\n        <ModalTitle>Load File</ModalTitle>\r\n        <ModalContent>\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {isDragActive ? (\r\n              <p>Drop the files here...</p>\r\n            ) : (\r\n              <p>Drag and drop files / Click here</p>\r\n            )}\r\n          </div>\r\n        </ModalContent>\r\n      </ModalContainer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default LoadModal;\r\n","import { FormHandles, SubmitHandler } from '@unform/core';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useRef } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport backend from 'react-dnd-html5-backend';\r\n\r\nimport Button from '../../components/Button';\r\nimport { DragAroundCustomLayer } from '../../components/DragAndDrop';\r\nimport Modal from '../../components/Modal';\r\nimport Select from '../../components/Select';\r\nimport { Space } from '../../components/Space';\r\nimport TextArea from '../../components/TextArea';\r\nimport { RootStoreContext } from '../../stores';\r\nimport LoadModal from './LoadModal';\r\nimport {\r\n  BoxContainer,\r\n  Center,\r\n  Form,\r\n  ModalContainer,\r\n  ModalContent,\r\n  ModalTitle,\r\n} from './styles';\r\n\r\n// Add three+ character dialogue option\r\n\r\ntype DialogueType = 'player' | 'ai-character';\r\n\r\ninterface NodeEditFormData {\r\n  text: string;\r\n  inConnections: { label: string; value: string }[];\r\n  outConnections: { label: string; value: string }[];\r\n  type: DialogueType;\r\n}\r\n\r\nconst Main: React.FC = observer(() => {\r\n  const { nodesStore, connectionsStore } = useContext(RootStoreContext);\r\n  const editNodeFormRef = useRef<FormHandles>(null);\r\n\r\n  const deleteNode = (id: string) => {\r\n    nodesStore.deleteNode(id);\r\n    connectionsStore.removeConnnections(id);\r\n  };\r\n\r\n  const handleEditFormSubmit: SubmitHandler<NodeEditFormData> = (data) => {\r\n    // console.log(data);\r\n    const { inConnections, outConnections, text, type } = data;\r\n\r\n    const node = nodesStore.activeNode;\r\n\r\n    node.text = text;\r\n    node.dialogueType = type;\r\n    node.inConnections = inConnections.map((connection) => connection.value);\r\n    node.outConnections = outConnections.map((connection) => connection.value);\r\n\r\n    outConnections.forEach((connection) => {\r\n      nodesStore.nodes[connection.value].inConnections = [];\r\n      nodesStore.nodes[connection.value].inConnections?.push(node.id);\r\n      connectionsStore.addConnection(node.id, connection.value);\r\n    });\r\n\r\n    inConnections.forEach((connection) => {\r\n      nodesStore.nodes[connection.value].outConnections = [];\r\n      nodesStore.nodes[connection.value].outConnections?.push(node.id);\r\n      connectionsStore.addConnection(connection.value, node.id);\r\n    });\r\n\r\n    nodesStore.setActiveNode('', null);\r\n  };\r\n\r\n  const renderModal = () => {\r\n    if (nodesStore.activeNodeModal.mode === 'delete') {\r\n      return (\r\n        <Modal\r\n          show={nodesStore.showModal}\r\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\r\n        >\r\n          <ModalContainer>\r\n            <ModalTitle>Are you sure you want to delete this node?</ModalTitle>\r\n            <ModalContent>\r\n              <Button\r\n                onClick={() => {\r\n                  deleteNode(nodesStore.activeNodeModal.id);\r\n                  nodesStore.setActiveNode('', null);\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n              <Space width=\"100%\" height={20} />\r\n              <Button onClick={() => nodesStore.setActiveNode('', null)}>\r\n                No\r\n              </Button>\r\n            </ModalContent>\r\n          </ModalContainer>\r\n        </Modal>\r\n      );\r\n    }\r\n    if (nodesStore.activeNodeModal.mode === 'edit') {\r\n      const node = nodesStore.activeNode;\r\n      const initialText = node.text;\r\n      const initialDialogueType = node.dialogueType;\r\n\r\n      const tempIn = [];\r\n      const tempOut = [];\r\n\r\n      if (node.inConnections !== undefined) {\r\n        for (let i = 0; i < node.inConnections?.length; i += 1) {\r\n          tempIn.push({\r\n            label: node.inConnections[i],\r\n            value: node.inConnections[i],\r\n          });\r\n        }\r\n      }\r\n\r\n      if (node.outConnections !== undefined) {\r\n        for (let i = 0; i < node.outConnections?.length; i += 1) {\r\n          tempOut.push({\r\n            label: node.outConnections[i],\r\n            value: node.outConnections[i],\r\n          });\r\n        }\r\n      }\r\n\r\n      const initialInConnections = tempIn;\r\n      const initialOutConnections = tempOut;\r\n\r\n      return (\r\n        <Modal\r\n          show={nodesStore.showModal}\r\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\r\n        >\r\n          <ModalContainer width={1000} height={800}>\r\n            <ModalTitle>\r\n              {`Editing ${nodesStore.activeNodeModal.id}`}\r\n            </ModalTitle>\r\n            <ModalContent>\r\n              <Form\r\n                ref={editNodeFormRef}\r\n                onSubmit={handleEditFormSubmit}\r\n                initialData={{\r\n                  text: initialText,\r\n                  inConnections: initialInConnections,\r\n                  outConnections: initialOutConnections,\r\n                  type: initialDialogueType,\r\n                }}\r\n              >\r\n                <BoxContainer>\r\n                  <Select\r\n                    name=\"inConnections\"\r\n                    label=\"In Connections\"\r\n                    multiple\r\n                    options={nodesStore.activeNodeOptions}\r\n                  />\r\n                  <Select\r\n                    name=\"outConnections\"\r\n                    label=\"Out Connections\"\r\n                    multiple\r\n                    options={nodesStore.activeNodeOptions}\r\n                  />\r\n                  <Select\r\n                    name=\"type\"\r\n                    label=\"Dialogue Type\"\r\n                    options={nodesStore.dialogueTypeOptions}\r\n                  />\r\n                </BoxContainer>\r\n                <Space width=\"100%\" height={20} />\r\n                <BoxContainer>\r\n                  <TextArea\r\n                    name=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Dialogue text\"\r\n                    width={800}\r\n                  />\r\n                </BoxContainer>\r\n                <Space width=\"100%\" height={30} />\r\n                <Center>\r\n                  <Button onClick={() => editNodeFormRef.current?.submitForm()}>\r\n                    Save\r\n                  </Button>\r\n                </Center>\r\n              </Form>\r\n            </ModalContent>\r\n          </ModalContainer>\r\n        </Modal>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderModal()}\r\n      <LoadModal />\r\n      <DndProvider backend={backend}>\r\n        <DragAroundCustomLayer />\r\n      </DndProvider>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Main;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    top: 0;\r\n    left: 0;\r\n    font-family: 'Fira Code', monospace;\r\n  }\r\n\r\n  html, body {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: ${(props) => props.theme.colors.background};\r\n  }\r\n\r\n  #root {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const SidebarContainer = styled.div`\r\n  width: 15vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 85vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const RootContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n","import 'mobx-react-lite/batchingForReactDom';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport Sidebar from './components/Sidebar';\r\nimport Main from './pages/Main';\r\nimport {\r\n  ContentContainer,\r\n  GlobalStyles,\r\n  RootContainer,\r\n  SidebarContainer,\r\n} from './styles/global';\r\nimport { light } from './styles/themes/light';\r\n\r\n// import { dark } from './styles/themes/dark';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={light}>\r\n      <GlobalStyles />\r\n      <RootContainer>\r\n        <SidebarContainer>\r\n          <Sidebar />\r\n        </SidebarContainer>\r\n        <ContentContainer>\r\n          <Main />\r\n        </ContentContainer>\r\n      </RootContainer>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const light: DefaultTheme = {\r\n  name: 'light',\r\n  colors: {\r\n    background: '#f0f0f0',\r\n    sidebar: '#1b1b2f',\r\n    primary: '#e43f5a',\r\n    text: '#000',\r\n    textSecondary: '#fff',\r\n    accent: '#e0ac1b',\r\n  },\r\n};\r\n"],"sourceRoot":""}
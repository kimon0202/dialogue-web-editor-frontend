{"version":3,"sources":["components/Button/styles.ts","components/Button/index.tsx","types/ItemTypes.ts","utils/getStyles.ts","styles/themes/dark.ts","components/Nodes/Connection.tsx","stores/connectionsStore.ts","stores/filesStore.ts","stores/nodesStore.ts","stores/index.ts","components/Nodes/styles.ts","components/Nodes/DialogueNode.tsx","components/Nodes/DialogueNodeDragPreview.tsx","components/Nodes/DraggableDialogueNode.tsx","components/DragAndDrop/styles.ts","components/DragAndDrop/CustomDragLayer.tsx","components/ContextMenu/styles.ts","components/ContextMenu/index.tsx","components/DragAndDrop/ConnectionsContainer.tsx","components/DragAndDrop/DragAndDropContainerGlobal.tsx","components/DragAndDrop/DragAroundCustomLayer.tsx","components/Modal/styles.ts","components/Modal/PortalModal.tsx","components/Select/index.tsx","components/Space/index.ts","components/Sidebar/styles.ts","components/Sidebar/index.tsx","components/TextArea/styles.ts","components/TextArea/index.tsx","pages/Main/styles.ts","pages/Main/LoadModal.tsx","pages/Main/index.tsx","styles/global.ts","index.tsx"],"names":["StyledButton","styled","button","props","theme","colors","primary","shade","Button","children","onClick","type","ItemTypes","getStyles","left","top","isDragging","transform","position","WebkitTransform","opacity","height","getItemStyles","initialOffset","currentOffset","display","x","y","dark","name","background","backgroundSecondary","text","textSecondary","accent","success","info","warning","danger","Connection","from","x1","y1","to","x2","y2","markerMid","stroke","strokeWidth","strokeLinecap","markerUnits","d","ConnectionsStore","rootStore","connections","this","fromId","toId","key","newMap","update","$set","id","connectionsKeys","forEach","indexOf","Object","keys","decorate","observable","addConnection","action","removeConnnection","computed","FilesStore","file","loadFileModal","state","connection","nodesStore","nodes","connectionsStore","setModal","loadFileContent","NodesStore","dialogueType","undefined","activeNodeModal","mode","$merge","newNodes","nodesKeys","filesStore","opts","filter","activeNode","possibleOptions","option","push","label","value","updateNodePosition","addNode","setActiveNode","reset","activeNodeOptions","showModal","RootStoreContext","createContext","Container","div","ContentContainer","DeleteIcon","Delete","EditIcon","Edit","Header","Title","h5","Body","textarea","DialogueNode","observer","identifier","useContext","useState","nodeBody","setNodeBody","editNode","replace","fontSize","defaultValue","placeholder","onDoubleClick","onChange","event","target","onBlur","DialogueNodeDragPreview","DraggableDialogueNode","useDrag","item","collect","monitor","drag","preview","useEffect","getEmptyImage","captureDraggingState","ref","style","DragLayer","CustomDragLayer","useDragLayer","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","ContextItem","last","ContextMenu","options","visible","changeVisibility","setPosition","handleContextMenu","preventDefault","clientX","clientY","document","addEventListener","removeEventListener","map","index","arr","toString","length","callback","handleContextMenuBlur","ConnectionsContainer","memo","width","zIndex","markerWidth","markerHeight","fill","refX","refY","orient","points","fromNode","toNode","DragAndDropContainerGlobal","showContextMenu","setShowContextMenu","nodeCount","setNodeCount","moveNode","useCallback","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","xPos","yPos","onContextMenu","renderNode","DragAroundCustomLayer","ModalWrapper","ModalBackdrop","ModalContainer","PortalModal","isVisible","onBackdropClick","modalRoot","onCloseRequest","getElementById","parentElement","createElement","appendChild","removeChild","createPortal","Select","multiple","values","setValues","selectRef","useRef","useField","fieldName","registerField","current","getValue","setValue","className","htmlFor","hasSelectAll","labelledBy","vals","Space","TitleContainer","ButtonsContainer","Navbar","MenuIcon","Menu","CloseIcon","Close","AnimateHeight","AnimatedIconContainer","animated","Sidebar","sidebarOpen","setSidebarOpen","trnasitions","useTransition","enter","leave","handleSave","toJS","handleFileDownload","a","json","JSON","stringify","blob","Blob","URL","createObjectURL","href","link","download","body","click","handleMenuClick","duration","InputControl","TextArea","rest","textareaRef","labelRef","error","path","handleBlur","classList","add","remove","autoCorrect","autoComplete","ModalTitle","h2","ModalContent","Center","BoxContainer","Form","RawForm","LoadModal","onDrop","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","content","result","parse","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","Main","editNodeFormRef","handleEditFormSubmit","data","inConnections","outConnections","node","deleteNode","initialText","initialDialogueType","tempIn","tempOut","handleGetInitialConnections","onSubmit","initialData","autoFocus","submitForm","renderModal","DndProvider","backend","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a38c0be3.chunk.js","sourcesContent":["import { shade } from 'polished';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  background: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n\n  border: none;\n  outline: none;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 150px;\n  height: 60px;\n  border-radius: 8px;\n\n  color: #fff;\n  font-weight: bold;\n  font-size: 18px;\n\n  :hover {\n    background: ${(props) => shade(0.25, props.theme.colors.primary)};\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledButton } from './styles';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactElement | string;\r\n  onClick?(): void;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export const ItemTypes = {\r\n  NODE: 'node',\r\n};\r\n","import { CSSProperties } from 'react';\r\nimport { XYCoord } from 'react-dnd';\r\n\r\nexport const getStyles = (\r\n  left: number,\r\n  top: number,\r\n  isDragging: boolean,\r\n): CSSProperties => {\r\n  const transform = `translate3d(${left}px, ${top}px, 0)`;\r\n\r\n  return {\r\n    position: 'absolute',\r\n    transform,\r\n    WebkitTransform: transform,\r\n    opacity: isDragging ? 0 : 1,\r\n    height: isDragging ? 0 : '',\r\n  };\r\n};\r\n\r\nexport const getItemStyles = (\r\n  initialOffset: XYCoord | null,\r\n  currentOffset: XYCoord | null,\r\n): CSSProperties => {\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: 'none',\r\n    };\r\n  }\r\n\r\n  const { x, y } = currentOffset;\r\n  const transform = `translate(${x}px, ${y}px)`;\r\n\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform,\r\n  };\r\n};\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const dark: DefaultTheme = {\r\n  name: 'dark',\r\n  colors: {\r\n    background: '#131417',\r\n    backgroundSecondary: '#1E1F26',\r\n    primary: '#3511B8',\r\n    text: '#fff',\r\n    textSecondary: '#e7dfdd',\r\n    accent: '#a239ca',\r\n    success: '#1B7C16',\r\n    info: '#0078A8',\r\n    warning: '#FCA105',\r\n    danger: '#D81E1E',\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nimport { dark } from '../../styles/themes/dark';\r\n\r\ninterface Props {\r\n  from: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  to: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  markerMid: string;\r\n}\r\n\r\nconst Connection: React.FC<Props> = ({\r\n  from: { x: x1, y: y1 },\r\n  to: { x: x2, y: y2 },\r\n  markerMid,\r\n}) => {\r\n  return (\r\n    <path\r\n      stroke={dark.colors.textSecondary}\r\n      strokeWidth={2}\r\n      strokeLinecap=\"round\"\r\n      markerUnits={2}\r\n      d={`M${x1 + 100},${y1 + 75}L${(x1 + x2 + 200) / 2},${\r\n        (y1 + y2 + 150) / 2\r\n      }L${x2 + 100},${y2 + 75}`}\r\n      markerMid={markerMid}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Connection;\r\n","import update from 'immutability-helper';\nimport { action, computed, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { ConnectionMap } from '../types/Connection';\n\nclass ConnectionsStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  connections: ConnectionMap = {};\n\n  public addConnection(fromId: string, toId: string) {\n    const key = `${fromId}|${toId}`;\n\n    const newMap = update(this.connections, {\n      [key]: {\n        $set: {\n          fromId,\n          toId,\n        },\n      },\n    });\n\n    this.connections = newMap;\n  }\n\n  public removeConnnection(id: string) {\n    this.connectionsKeys.forEach((key) => {\n      if (key.indexOf(id) !== -1) {\n        delete this.connections[key];\n      }\n    });\n  }\n\n  public get connectionsKeys() {\n    return Object.keys(this.connections);\n  }\n}\n\ndecorate(ConnectionsStore, {\n  connections: observable,\n  addConnection: action,\n  removeConnnection: action,\n  connectionsKeys: computed,\n});\n\nexport default ConnectionsStore;\n","import update from 'immutability-helper';\nimport { action, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { ConnectionMap } from '../types/Connection';\nimport { FileData } from '../types/FileData';\n\nclass FilesStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  file: FileData = {} as FileData;\n  loadFileModal = false;\n\n  public setModal(state: boolean) {\n    this.loadFileModal = state;\n  }\n\n  public loadFileContent() {\n    if (!this.file) {\n      return;\n    }\n\n    let connections: ConnectionMap = {};\n\n    this.file.connections.forEach((connection) => {\n      const key = `${connection.fromId}|${connection.toId}`;\n\n      connections = update(connections, {\n        [key]: {\n          $set: {\n            fromId: connection.fromId,\n            toId: connection.toId,\n          },\n        },\n      });\n    });\n\n    this.rootStore.nodesStore.nodes = this.file.nodes;\n    this.rootStore.connectionsStore.connections = connections;\n  }\n}\n\ndecorate(FilesStore, {\n  file: observable,\n  loadFileModal: observable,\n  setModal: action,\n  loadFileContent: action,\n});\n\nexport default FilesStore;\n","import update from 'immutability-helper';\nimport { action, computed, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { FileData } from '../types/FileData';\nimport { NodeMap } from '../types/Node';\n\ninterface ActiveNodeModal {\n  id: string;\n  mode: 'delete' | 'edit' | null;\n}\n\nclass NodesStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  nodes: NodeMap = {\n    'id:rootNode': {\n      id: 'id:rootNode',\n      left: 80,\n      top: 20,\n      dialogueType: undefined,\n      text: '',\n    },\n  };\n\n  activeNodeModal: ActiveNodeModal = {\n    id: '',\n    mode: null,\n  };\n\n  public updateNodePosition(id: string, left: number, top: number) {\n    this.nodes = update(this.nodes, {\n      [id]: {\n        $merge: { left, top },\n      },\n    });\n  }\n\n  public addNode(id: string, left: number, top: number) {\n    const newNodes = update(this.nodes, {\n      [id]: {\n        $set: {\n          left,\n          top,\n          id,\n          dialogueType: undefined,\n          text: '',\n        },\n      },\n    });\n\n    this.nodes = newNodes;\n  }\n\n  public deleteNode(id: string) {\n    this.nodesKeys.forEach((key) => {\n      if (key === id) {\n        delete this.nodes[id];\n      }\n    });\n  }\n\n  public setActiveNode(id: string, mode: 'delete' | 'edit' | null) {\n    this.activeNodeModal = {\n      id,\n      mode,\n    };\n  }\n\n  public reset() {\n    this.nodes = {\n      'id:rootNode': {\n        id: 'id:rootNode',\n        left: 80,\n        top: 20,\n        dialogueType: undefined,\n        text: '',\n      },\n    };\n    this.rootStore.connectionsStore.connections = {};\n    this.rootStore.filesStore.file = {} as FileData;\n  }\n\n  public get activeNode() {\n    return this.nodes[this.activeNodeModal.id];\n  }\n\n  public get activeNodeOptions() {\n    const opts = this.nodesKeys.filter((key) => key !== this.activeNode.id);\n    const possibleOptions: { label: string; value: string }[] = [];\n\n    opts.forEach((option) => {\n      possibleOptions.push({\n        label: option,\n        value: option,\n      });\n    });\n\n    return possibleOptions;\n  }\n\n  public get nodesKeys() {\n    return Object.keys(this.nodes);\n  }\n\n  public get showModal() {\n    return this.activeNodeModal.id !== '';\n  }\n}\n\ndecorate(NodesStore, {\n  nodes: observable,\n  activeNodeModal: observable,\n  updateNodePosition: action,\n  addNode: action,\n  setActiveNode: action,\n  reset: action,\n  activeNode: computed,\n  activeNodeOptions: computed,\n  nodesKeys: computed,\n  showModal: computed,\n});\n\nexport default NodesStore;\n","import { createContext } from 'react';\r\n\r\nimport ConnectionsStore from './connectionsStore';\r\nimport FilesStore from './filesStore';\r\nimport NodesStore from './nodesStore';\r\n\r\nexport class RootStore {\r\n  public nodesStore: NodesStore = new NodesStore(this);\r\n  public connectionsStore: ConnectionsStore = new ConnectionsStore(this);\r\n  public filesStore: FilesStore = new FilesStore(this);\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import { Delete, Edit } from '@material-ui/icons';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 200px;\r\n  height: 150px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 120px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: move;\r\n\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n\r\n  background: #fefefe;\r\n  color: #000;\r\n`;\r\n\r\nexport const DeleteIcon = styled(Delete)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.text};\r\n\r\n  cursor: pointer;\r\n  margin-left: 4px;\r\n`;\r\n\r\nexport const EditIcon = styled(Edit)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.text};\r\n\r\n  cursor: pointer;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  height: 30px;\r\n  background: ${(props) => props.theme.colors.primary};\r\n  padding: 4px;\r\n\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n\r\n  cursor: move;\r\n`;\r\n\r\nexport const Title = styled.h5`\r\n  width: 60%;\r\n  height: 100%;\r\n  margin: 0;\r\n\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n\r\n  color: ${(props) => props.theme.colors.text};\r\n`;\r\n\r\nexport const Body = styled.textarea`\r\n  resize: none;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  outline: none;\r\n  padding: 4px;\r\n  color: #000;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\nimport React, { useContext, useState } from 'react';\n\nimport { RootStoreContext } from '../../stores';\nimport {\n  Body,\n  Container,\n  ContentContainer,\n  DeleteIcon,\n  EditIcon,\n  Header,\n  Title,\n} from './styles';\n\ninterface DialogueNodeProps {\n  identifier: string;\n}\n\nconst DialogueNode: React.FC<DialogueNodeProps> = observer(({ identifier }) => {\n  const { nodesStore } = useContext(RootStoreContext);\n  const [nodeBody, setNodeBody] = useState(nodesStore.nodes[identifier].text);\n\n  const deleteNode = () => {\n    nodesStore.setActiveNode(identifier, 'delete');\n  };\n\n  const editNode = () => {\n    nodesStore.setActiveNode(identifier, 'edit');\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Title>{identifier.replace('id:', '')}</Title>\n        <EditIcon fontSize=\"small\" onClick={editNode} />\n        <DeleteIcon fontSize=\"small\" onClick={deleteNode} />\n      </Header>\n      <ContentContainer>\n        <Body\n          defaultValue={nodeBody}\n          placeholder=\"Dialogue Text...\"\n          onDoubleClick={editNode}\n          onChange={(event) => setNodeBody(event.target.value)}\n          onBlur={() => {\n            nodesStore.nodes[identifier].text = nodeBody;\n          }}\n        />\n      </ContentContainer>\n    </Container>\n  );\n});\n\nexport default DialogueNode;\n","import React from 'react';\r\n\r\nimport DialogueNode from './DialogueNode';\r\n\r\ninterface DialogueNodeDragPreviewProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNodeDragPreview: React.FC<DialogueNodeDragPreviewProps> = ({\r\n  identifier,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <DialogueNode identifier={identifier} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueNodeDragPreview;\r\n","import React, { useEffect } from 'react';\r\nimport { DragSourceMonitor, useDrag } from 'react-dnd';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getStyles } from '../../utils/getStyles';\r\nimport DialogueNode from './DialogueNode';\r\n\r\nconst DraggableDialogueNode: React.FC<Node> = ({ id, left, top }) => {\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: ItemTypes.NODE, id, left, top },\r\n    collect: (monitor: DragSourceMonitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true });\r\n  }, [preview]);\r\n\r\n  return (\r\n    <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n      <DialogueNode identifier={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableDialogueNode;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  position: relative;\r\n`;\r\n\r\nexport const DragLayer = styled.div`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 100;\r\n  position: fixed;\r\n  pointer-events: none;\r\n`;\r\n","import React from 'react';\r\nimport { useDragLayer } from 'react-dnd';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getItemStyles } from '../../utils/getStyles';\r\nimport { DialogueNodeDragPreview } from '../Nodes';\r\nimport { DragLayer } from './styles';\r\n\r\nconst CustomDragLayer: React.FC = () => {\r\n  const {\r\n    itemType,\r\n    isDragging,\r\n    item,\r\n    initialOffset,\r\n    currentOffset,\r\n  } = useDragLayer((monitor) => ({\r\n    item: monitor.getItem() as Node,\r\n    itemType: monitor.getItemType(),\r\n    initialOffset: monitor.getInitialSourceClientOffset(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging(),\r\n  }));\r\n\r\n  const renderItem = () => {\r\n    switch (itemType) {\r\n      case ItemTypes.NODE:\r\n        return <DialogueNodeDragPreview identifier={item.id} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (!isDragging) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <DragLayer>\r\n      <div style={getItemStyles(initialOffset, currentOffset)}>\r\n        {renderItem()}\r\n      </div>\r\n    </DragLayer>\r\n  );\r\n};\r\n\r\nexport default CustomDragLayer;\r\n","import styled from 'styled-components';\r\n\r\ninterface ContainerProps {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface ContextItemProps {\r\n  last: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: ${(props: ContainerProps) => props.y}px;\r\n  left: ${(props: ContainerProps) => props.x + 5}px;\r\n\r\n  z-index: 300;\r\n`;\r\n\r\nexport const ContextItem = styled.div`\r\n  background: #fff;\r\n  border-bottom: ${(props: ContextItemProps) =>\r\n    !props.last ? 'dotted 1px #ccc' : null};\r\n  padding: 5px 25px;\r\n\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f1f1f1;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Container, ContextItem } from './styles';\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Option {\r\n  label: string;\r\n  callback?(event: React.MouseEvent<any, MouseEvent>): void;\r\n}\r\n\r\ninterface Props {\r\n  options: Option[];\r\n  visible: boolean;\r\n  changeVisibility(state: boolean): void;\r\n}\r\n\r\nconst ContextMenu: React.FC<Props> = ({\r\n  options,\r\n  visible,\r\n  changeVisibility,\r\n}) => {\r\n  const [position, setPosition] = useState<Position>({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  const handleContextMenu = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    const { clientX: x, clientY: y } = event;\r\n\r\n    setPosition({ x, y });\r\n  };\r\n\r\n  const handleContextMenuBlur = (event: React.MouseEvent<any, MouseEvent>) => {\r\n    event.preventDefault();\r\n\r\n    changeVisibility(false);\r\n    setPosition({ x: 0, y: 0 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('contextmenu', handleContextMenu);\r\n    // document.addEventListener('click', handleContextMenuBlur);\r\n\r\n    return () => {\r\n      document.removeEventListener('contextmenu', handleContextMenu);\r\n      // document.removeEventListener('click', handleContextMenuBlur);\r\n    };\r\n  }, []);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Container x={position.x} y={position.y}>\r\n      {options.map((item, index, arr) => {\r\n        return (\r\n          <ContextItem\r\n            key={index.toString()}\r\n            last={arr.length - 1 === index}\r\n            onClick={(event) => {\r\n              if (item.callback) item.callback(event);\r\n              handleContextMenuBlur(event);\r\n            }}\r\n          >\r\n            {item.label}\r\n          </ContextItem>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useContext } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { dark } from '../../styles/themes/dark';\r\nimport { Connection as ConnectionLine } from '../Nodes';\r\n\r\n// import { Container } from './styles';\r\nconst ConnectionsContainer: React.FC = memo(\r\n  observer(() => {\r\n    const { nodesStore, connectionsStore } = useContext(RootStoreContext);\r\n\r\n    return (\r\n      <svg\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        style={{\r\n          zIndex: 400,\r\n        }}\r\n      >\r\n        <defs>\r\n          <marker\r\n            id=\"arrowhead\"\r\n            markerWidth=\"10\"\r\n            markerHeight=\"7\"\r\n            fill={dark.colors.textSecondary}\r\n            refX=\"0\"\r\n            refY=\"3.5\"\r\n            orient=\"auto\"\r\n          >\r\n            <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n          </marker>\r\n        </defs>\r\n\r\n        {connectionsStore.connectionsKeys.length > 0\r\n          ? connectionsStore.connectionsKeys.map((key) => {\r\n              const connection = connectionsStore.connections[key];\r\n\r\n              const fromNode = nodesStore.nodes[connection.fromId];\r\n              const toNode = nodesStore.nodes[connection.toId];\r\n\r\n              if (fromNode === undefined || toNode === undefined) {\r\n                return null;\r\n              }\r\n\r\n              const from = {\r\n                x: fromNode.left,\r\n\r\n                y: fromNode.top,\r\n              };\r\n\r\n              const to = {\r\n                x: toNode.left,\r\n\r\n                y: toNode.top,\r\n              };\r\n\r\n              return (\r\n                <ConnectionLine\r\n                  key={`${connection.fromId}${connection.toId}`}\r\n                  from={from}\r\n                  to={to}\r\n                  markerMid=\"url(#arrowhead)\"\r\n                />\r\n              );\r\n            })\r\n          : null}\r\n      </svg>\r\n    );\r\n  }),\r\n);\r\n\r\nexport default ConnectionsContainer;\r\n","import { observer } from 'mobx-react-lite';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { useDrop } from 'react-dnd';\n\nimport { RootStoreContext } from '../../stores';\nimport { ItemTypes } from '../../types/ItemTypes';\nimport { Node } from '../../types/Node';\nimport ContextMenu from '../ContextMenu';\nimport { DraggableDialogueNode } from '../Nodes';\nimport ConnectionsContainer from './ConnectionsContainer';\nimport { Container } from './styles';\n\nconst DragAndDropContainerGlobal: React.FC = observer(() => {\n  const { nodesStore, filesStore } = useContext(RootStoreContext);\n\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [nodeCount, setNodeCount] = useState(nodesStore.nodesKeys.length);\n\n  const moveNode = useCallback(\n    (id: string, left: number, top: number) => {\n      nodesStore.updateNodePosition(id, left, top);\n    },\n    [nodesStore],\n  );\n\n  const addNode = (id: string, left: number, top: number) => {\n    setNodeCount(nodeCount + 1);\n    nodesStore.addNode(id, left, top);\n  };\n\n  const handleAddNode = (event: React.MouseEvent<any, MouseEvent>) => {\n    const identifier = `id:node${nodeCount}`;\n\n    const xPos = event.clientX - 100;\n    const yPos = event.clientY - 75;\n\n    addNode(identifier, xPos, yPos);\n  };\n\n  const loadFileClick = () => {\n    filesStore.setModal(true);\n  };\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.NODE,\n    drop(item: Node, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset() as {\n        x: number;\n        y: number;\n      };\n\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n\n      moveNode(item.id, left, top);\n      return undefined;\n    },\n  });\n\n  const renderNode = (item: any, key: string) => {\n    return <DraggableDialogueNode key={key} id={key} {...item} />;\n  };\n\n  // if (nodesStore.showModal || filesStore.loadFileModal) {\n  //   return null;\n  // }\n\n  return (\n    <>\n      <ContextMenu\n        options={[\n          { label: 'New Node', callback: handleAddNode },\n          { label: 'Load File', callback: loadFileClick },\n          { label: 'Close' },\n        ]}\n        visible={showContextMenu}\n        changeVisibility={setShowContextMenu}\n      />\n\n      <Container\n        ref={drop}\n        onContextMenu={() => setShowContextMenu(true)}\n        onClick={() => setShowContextMenu(false)}\n      >\n        {nodesStore.nodesKeys.map((key) =>\n          renderNode(nodesStore.nodes[key], key),\n        )}\n        <ConnectionsContainer />\n      </Container>\n    </>\n  );\n});\n\nexport default DragAndDropContainerGlobal;\n","import React from 'react';\r\n\r\nimport { CustomDragLayer, DragAndDropContainerGlobal } from '.';\r\n\r\n// import { Container } from './styles';\r\n\r\nconst DragAroundCustomLayer: React.FC = () => {\r\n  return (\r\n    <>\r\n      <DragAndDropContainerGlobal />\r\n      <CustomDragLayer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAroundCustomLayer;\r\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  background: rgba(10, 10, 10, 0.5);\n  width: 100vw;\n  height: 100vh;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nexport const Container = styled.div`\n  position: absolute;\n  background: transparent;\n  width: auto;\n  height: auto;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  z-index: 300;\n  top: 50%;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const ModalWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalBackdrop = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n\n  background: rgba(0, 0, 0, 0.6);\n`;\n\nexport const ModalContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: auto;\n  height: auto;\n\n  z-index: 1000;\n`;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { ModalBackdrop, ModalContainer, ModalWrapper } from './styles';\n\ninterface PortalModalProps {\n  isVisible: boolean;\n  children?: React.ReactElement | React.ReactNode | string;\n  onBackdropClick?(): void;\n  onCloseRequest?(): void;\n}\n\nconst PortalModal: React.FC<PortalModalProps> = ({\n  isVisible,\n  children,\n  onBackdropClick,\n  onCloseRequest,\n}) => {\n  const modalRoot = document.getElementById('modal-root');\n  const parentElement = document.createElement('div');\n\n  useEffect(() => {\n    modalRoot?.appendChild(parentElement);\n\n    return () => {\n      modalRoot?.removeChild(parentElement);\n    };\n  }, [modalRoot, parentElement]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return createPortal(\n    <ModalWrapper>\n      <ModalBackdrop onClick={onBackdropClick} />\n      <ModalContainer>{children}</ModalContainer>\n    </ModalWrapper>,\n    parentElement,\n  );\n};\n\nexport default PortalModal;\n","import './styles.css';\r\n\r\nimport { useField } from '@unform/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport MultiSelect from 'react-multi-select-component';\r\n\r\ninterface SelectProps {\r\n  name: string;\r\n  options: { label: string; value: string }[];\r\n  label?: string;\r\n}\r\n\r\ntype Props = JSX.IntrinsicElements['select'] & SelectProps;\r\n\r\nconst Select: React.FC<Props> = ({\r\n  name,\r\n  multiple,\r\n  options,\r\n  placeholder,\r\n  label,\r\n}) => {\r\n  const [values, setValues] = useState<any[]>([]);\r\n  const selectRef = useRef(null);\r\n\r\n  const { fieldName, registerField, defaultValue } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: selectRef.current,\r\n      getValue: () => {\r\n        if (!multiple) {\r\n          return values[0];\r\n        }\r\n\r\n        return values;\r\n      },\r\n      setValue: (ref, value) => {\r\n        if (!multiple) {\r\n          setValues([value]);\r\n        }\r\n      },\r\n    });\r\n  }, [registerField, fieldName, multiple, values]);\r\n\r\n  useEffect(() => {\r\n    if (defaultValue && multiple) {\r\n      setValues(defaultValue);\r\n    }\r\n  }, [defaultValue, multiple]);\r\n\r\n  const handleValueChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (!multiple) {\r\n      const vals = [];\r\n      vals.push(event.target.value);\r\n      setValues(vals);\r\n    }\r\n  };\r\n\r\n  if (!multiple) {\r\n    return (\r\n      <div className=\"select-group\">\r\n        {label && <label htmlFor={fieldName}>{label}</label>}\r\n        <select\r\n          ref={selectRef}\r\n          value={values[0]}\r\n          onChange={handleValueChange}\r\n          className=\"multi-select single\"\r\n          placeholder={placeholder}\r\n          defaultValue={defaultValue}\r\n        >\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // eslint-disable-next-line jsx-a11y/control-has-associated-label\r\n  return (\r\n    <div className=\"select-group\">\r\n      {label && <label htmlFor={fieldName}>{label}</label>}\r\n      <MultiSelect\r\n        options={options}\r\n        value={values}\r\n        onChange={setValues}\r\n        hasSelectAll={false}\r\n        labelledBy=\"Select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  width: number | string;\r\n  height: number | string;\r\n}\r\n\r\nexport const Space = styled.div`\r\n  width: ${(props: Props) =>\r\n    typeof props.width === typeof 'aa' ? props.width : `${props.width}px`};\r\n\r\n  height: ${(props: Props) =>\r\n    typeof props.height === typeof 'aa' ? props.height : `${props.height}px`};\r\n`;\r\n","import { Close, Menu } from '@material-ui/icons';\nimport AnimateHeight from 'react-animate-height';\nimport { animated } from 'react-spring';\nimport styled from 'styled-components';\n\nexport const TitleContainer = styled.div`\n  height: 100%;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-size: 0.8em;\n  font-weight: bold;\n\n  color: ${(props) => props.theme.colors.text};\n`;\n\nexport const ButtonsContainer = styled.div`\n  width: 100%;\n  height: auto;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  padding: 16px;\n`;\n\nexport const Navbar = styled.div`\n  width: 100%;\n  height: 10vh;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n\n  padding: 16px 32px;\n  background: ${(props) => props.theme.colors.backgroundSecondary};\n\n  font-size: 30px;\n  position: sticky;\n`;\n\nexport const MenuIcon = styled(Menu)`\n  color: white;\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(Close)`\n  color: white;\n  cursor: pointer;\n`;\n\n// Add smooth transition later\n\ninterface ContainerProps {\n  height: number | string;\n}\n\nexport const Container = styled(AnimateHeight)`\n  position: absolute;\n  z-index: 400;\n  top: 10vh;\n  left: 0;\n  width: 400px;\n  height: ${(props: ContainerProps) => props.height};\n\n  background: ${(props) => props.theme.colors.backgroundSecondary};\n`;\n\nexport const AnimatedIconContainer = styled(animated.div)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 100%;\n\n  padding: 8px 16px;\n  margin-right: 4px;\n`;\n","import { toJS } from 'mobx';\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext, useState } from 'react';\nimport { useTransition } from 'react-spring';\n\nimport { RootStoreContext } from '../../stores';\nimport { Connection } from '../../types/Connection';\nimport { FileData } from '../../types/FileData';\nimport Button from '../Button';\nimport { Space } from '../Space';\nimport {\n  AnimatedIconContainer,\n  ButtonsContainer,\n  CloseIcon,\n  Container,\n  MenuIcon,\n  Navbar,\n  TitleContainer,\n} from './styles';\n\nconst Sidebar: React.FC = observer(() => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const trnasitions = useTransition(sidebarOpen, null, {\n    from: {\n      position: 'absolute',\n      opacity: 0,\n    },\n    enter: {\n      opacity: 1,\n    },\n    leave: {\n      opacity: 0,\n    },\n  });\n\n  const { nodesStore, connectionsStore, filesStore } = useContext(\n    RootStoreContext,\n  );\n\n  const handleSave = () => {\n    const connections: Connection[] = [];\n\n    connectionsStore.connectionsKeys.forEach((key) => {\n      connections.push(toJS(connectionsStore.connections[key]));\n    });\n\n    const file: FileData = {\n      name: 'NewFile',\n      nodes: nodesStore.nodes,\n      connections,\n    };\n\n    filesStore.file = file;\n  };\n\n  const handleFileDownload = async () => {\n    handleSave();\n    const json = JSON.stringify(filesStore.file);\n    const blob = new Blob([json], {\n      type: 'application/json',\n    });\n    const href = await URL.createObjectURL(blob);\n\n    const link = document.createElement('a');\n    link.href = href;\n    link.download = filesStore.file.name + '.json';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const handleMenuClick = () => {\n    setSidebarOpen(!sidebarOpen);\n  };\n\n  return (\n    <>\n      <Navbar>\n        {trnasitions.map(({ item, key, props }) =>\n          item ? (\n            <AnimatedIconContainer key={key} style={props}>\n              <CloseIcon fontSize=\"inherit\" onClick={handleMenuClick} />\n            </AnimatedIconContainer>\n          ) : (\n            <AnimatedIconContainer key={key} style={props}>\n              <MenuIcon fontSize=\"inherit\" onClick={handleMenuClick} />\n            </AnimatedIconContainer>\n          ),\n        )}\n        <Space width={32} height=\"100%\" />\n        <TitleContainer>Dialogue Editor</TitleContainer>\n      </Navbar>\n      <Container height={sidebarOpen ? 'auto' : 0} duration={400}>\n        <ButtonsContainer>\n          <Button\n            onClick={() => {\n              nodesStore.reset();\n              nodesStore.setActiveNode('', null);\n            }}\n          >\n            Clear\n          </Button>\n          <Space width=\"100%\" height={20} />\n          <Button onClick={handleFileDownload}>Download</Button>\n          <Space width=\"100%\" height={20} />\n          <Button onClick={() => filesStore.setModal(true)}>Load File</Button>\n        </ButtonsContainer>\n      </Container>\n    </>\n  );\n});\n\nexport default Sidebar;\n","import styled from 'styled-components';\n\nexport const InputControl = styled.div`\n  position: relative;\n`;\n","import './styles.css';\n\nimport { useField } from '@unform/core';\nimport React, { useEffect, useRef } from 'react';\n\nimport { InputControl } from './styles';\n\ninterface Props {\n  name: string;\n  label?: string;\n  width?: number | string;\n  height?: number | string;\n}\n\ntype TextareaProps = JSX.IntrinsicElements['textarea'] & Props;\n\nconst TextArea: React.FC<TextareaProps> = ({\n  name,\n  label,\n  width = 400,\n  height = 400,\n  ...rest\n}) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const labelRef = useRef<HTMLLabelElement>(null);\n  const { fieldName, defaultValue, registerField, error } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n\n      path: 'value',\n\n      ref: textareaRef.current,\n    });\n  }, [fieldName, registerField]);\n\n  const handleBlur = () => {\n    if (textareaRef.current?.value !== '') {\n      labelRef.current?.classList.add('active');\n    } else {\n      labelRef.current?.classList.remove('active');\n    }\n  };\n\n  return (\n    <InputControl onBlur={handleBlur}>\n      <textarea\n        id={fieldName}\n        ref={textareaRef}\n        defaultValue={defaultValue}\n        className=\"input-control\"\n        style={{\n          width,\n          height,\n        }}\n        autoCorrect=\"off\"\n        autoComplete=\"off\"\n        onBlur={handleBlur}\n        {...rest}\n      />\n      {label ? (\n        <label className=\"label\" htmlFor={fieldName} ref={labelRef}>\n          {label}\n        </label>\n      ) : null}\n      {error ? <span>{error}</span> : null}\n    </InputControl>\n  );\n};\n\nexport default TextArea;\n","import { Form as RawForm } from '@unform/web';\r\nimport styled from 'styled-components';\r\n\r\ninterface ModalContainerProps {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n  width: ${(props: ModalContainerProps) => props.width || 400}px;\r\n  height: ${(props: ModalContainerProps) => props.height || 400}px;\r\n  border-radius: 16px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalTitle = styled.h2`\r\n  width: 100%;\r\n  height: 12.5%;\r\n\r\n  padding: 8px 24px;\r\n  text-align: center;\r\n\r\n  color: ${(props) => props.theme.colors.text};\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  width: 100%;\r\n  height: 87.5%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Form = styled(RawForm)`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 24px;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\nimport React, { useCallback, useContext } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nimport PortalModal from '../../components/Modal/PortalModal';\nimport { RootStoreContext } from '../../stores';\nimport { ModalContainer, ModalContent, ModalTitle } from './styles';\n\nconst LoadModal: React.FC = observer(() => {\n  const { filesStore } = useContext(RootStoreContext);\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('Read aborted');\n      reader.onerror = () => console.log('Read failed');\n      reader.onload = () => {\n        const content = reader.result?.toString();\n        const json = content !== undefined && JSON.parse(content);\n\n        filesStore.file = json;\n        filesStore.loadFileContent();\n        filesStore.setModal(false);\n      };\n\n      reader.readAsText(acceptedFiles[0]);\n    },\n    [filesStore],\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: 'application/json',\n    multiple: false,\n  });\n\n  // return (\n  //   <Modal\n  //     show={filesStore.loadFileModal}\n  //     onBackdropClick={() => filesStore.setModal(false)}\n  //   >\n  //     <ModalContainer>\n  //       <ModalTitle>Load File</ModalTitle>\n  //       <ModalContent>\n  //         <div {...getRootProps()}>\n  //           <input {...getInputProps()} />\n  //           {isDragActive ? (\n  //             <p>Drop the files here...</p>\n  //           ) : (\n  //             <p>Drag and drop files / Click here</p>\n  //           )}\n  //         </div>\n  //       </ModalContent>\n  //     </ModalContainer>\n  //   </Modal>\n  // );\n  return (\n    <PortalModal\n      isVisible={filesStore.loadFileModal}\n      onBackdropClick={() => filesStore.setModal(false)}\n    >\n      <ModalContainer>\n        <ModalTitle>Load File</ModalTitle>\n        <ModalContent>\n          <div {...getRootProps()}>\n            <input {...getInputProps()} />\n            {isDragActive ? (\n              <p>Drop the files here...</p>\n            ) : (\n              <p>Drag and drop files / Click here</p>\n            )}\n          </div>\n        </ModalContent>\n      </ModalContainer>\n    </PortalModal>\n  );\n});\n\nexport default LoadModal;\n","import { FormHandles, SubmitHandler } from '@unform/core';\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext, useRef } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport backend from 'react-dnd-html5-backend';\n\nimport Button from '../../components/Button';\nimport { DragAroundCustomLayer } from '../../components/DragAndDrop';\nimport PortalModal from '../../components/Modal/PortalModal';\nimport Select from '../../components/Select';\nimport Sidebar from '../../components/Sidebar';\nimport { Space } from '../../components/Space';\nimport TextArea from '../../components/TextArea';\nimport { RootStoreContext } from '../../stores';\nimport LoadModal from './LoadModal';\nimport {\n  BoxContainer,\n  Center,\n  Form,\n  ModalContainer,\n  ModalContent,\n  ModalTitle,\n} from './styles';\n\n// Add three+ character dialogue option\n\ntype DialogueType = 'player' | 'ai-character';\n\ninterface NodeEditFormData {\n  text: string;\n  inConnections: { label: string; value: string }[];\n  outConnections: { label: string; value: string }[];\n  type: DialogueType;\n}\n\nconst Main: React.FC = observer(() => {\n  const { nodesStore, connectionsStore } = useContext(RootStoreContext);\n  const editNodeFormRef = useRef<FormHandles>(null);\n\n  const deleteNode = (id: string) => {\n    nodesStore.deleteNode(id);\n    connectionsStore.removeConnnection(id);\n  };\n\n  const handleEditFormSubmit: SubmitHandler<NodeEditFormData> = (data) => {\n    // console.log(data);\n    const { inConnections, outConnections, text, type } = data;\n\n    const node = nodesStore.activeNode;\n\n    node.text = text;\n    node.dialogueType = type;\n\n    outConnections.forEach((connection) => {\n      connectionsStore.addConnection(node.id, connection.value);\n    });\n\n    if (node.id !== 'id:rootNode') {\n      inConnections.forEach((connection) => {\n        connectionsStore.addConnection(connection.value, node.id);\n      });\n    }\n\n    nodesStore.setActiveNode('', null);\n  };\n\n  const handleGetInitialConnections = (id: string) => {\n    const tempIn: { label: string; value: string }[] = [];\n    const tempOut: { label: string; value: string }[] = [];\n\n    connectionsStore.connectionsKeys.forEach((key) => {\n      if (connectionsStore.connections[key].fromId === id) {\n        tempOut.push({\n          label: connectionsStore.connections[key].toId,\n          value: connectionsStore.connections[key].toId,\n        });\n      }\n\n      if (connectionsStore.connections[key].toId === id) {\n        tempIn.push({\n          label: connectionsStore.connections[key].fromId,\n          value: connectionsStore.connections[key].fromId,\n        });\n      }\n    });\n\n    return {\n      inConnections: tempIn,\n      outConnections: tempOut,\n    };\n  };\n\n  const renderModal = () => {\n    if (nodesStore.activeNodeModal.mode === 'delete') {\n      return (\n        <PortalModal\n          isVisible={nodesStore.showModal}\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\n        >\n          <ModalContainer>\n            <ModalTitle>Are you sure you want to delete this node?</ModalTitle>\n            <ModalContent>\n              <Button\n                onClick={() => {\n                  deleteNode(nodesStore.activeNodeModal.id);\n                  nodesStore.setActiveNode('', null);\n                }}\n              >\n                Yes\n              </Button>\n              <Space width=\"100%\" height={20} />\n              <Button onClick={() => nodesStore.setActiveNode('', null)}>\n                No\n              </Button>\n            </ModalContent>\n          </ModalContainer>\n        </PortalModal>\n      );\n    }\n    if (nodesStore.activeNodeModal.mode === 'edit') {\n      const node = nodesStore.activeNode;\n      const initialText = node.text;\n      const initialDialogueType = node.dialogueType;\n\n      const { inConnections, outConnections } = handleGetInitialConnections(\n        node.id,\n      );\n\n      return (\n        <PortalModal\n          isVisible={nodesStore.showModal}\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\n        >\n          <ModalContainer width={1024} height={800}>\n            <ModalTitle>\n              {`Editing ${nodesStore.activeNodeModal.id}`}\n            </ModalTitle>\n            <ModalContent>\n              <Form\n                ref={editNodeFormRef}\n                onSubmit={handleEditFormSubmit}\n                initialData={{\n                  text: initialText,\n                  inConnections,\n                  outConnections,\n                  type: initialDialogueType,\n                }}\n              >\n                <BoxContainer>\n                  {node.id === 'id:rootNode' ? null : (\n                    <Select\n                      name=\"inConnections\"\n                      label=\"In Connections\"\n                      multiple\n                      options={nodesStore.activeNodeOptions}\n                    />\n                  )}\n                  <Select\n                    name=\"outConnections\"\n                    label=\"Out Connections\"\n                    multiple\n                    options={nodesStore.activeNodeOptions}\n                  />\n                  <Select\n                    name=\"type\"\n                    label=\"Dialogue Type\"\n                    options={[\n                      {\n                        label: 'Select Dialogue Type...',\n                        value: 'None',\n                      },\n                      {\n                        label: 'Player',\n                        value: 'Player',\n                      },\n                      {\n                        label: 'AICharacter',\n                        value: 'AICharacter',\n                      },\n                    ]}\n                  />\n                </BoxContainer>\n                <Space width=\"100%\" height={20} />\n                <Center>\n                  <TextArea\n                    name=\"text\"\n                    autoFocus\n                    placeholder=\"Dialogue text...\"\n                    width={960}\n                  />\n                </Center>\n                <Space width=\"100%\" height={30} />\n                <Center>\n                  <Button onClick={() => editNodeFormRef.current?.submitForm()}>\n                    Save\n                  </Button>\n                </Center>\n              </Form>\n            </ModalContent>\n          </ModalContainer>\n        </PortalModal>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <>\n      <Sidebar />\n      {renderModal()}\n      <LoadModal />\n      <DndProvider backend={backend}>\n        <DragAroundCustomLayer />\n      </DndProvider>\n    </>\n  );\n});\n\nexport default Main;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    top: 0;\n    left: 0;\n    font-family: 'Fira Code', monospace;\n  }\n\n  html, body {\n    width: 100vw;\n    height: 100vh;\n    background: ${(props) => props.theme.colors.background};\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n  }\n\n  #modal-root {\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 0;\n    left: 0;\n    /* pointer-events: none; */\n    z-index: 1000;\n  }\n`;\n","import 'mobx-react-lite/batchingForReactDom';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport Main from './pages/Main';\r\nimport { GlobalStyles } from './styles/global';\r\nimport { dark } from './styles/themes/dark';\r\n\r\n// import { light } from './styles/themes/light';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={dark}>\r\n      <GlobalStyles />\r\n      <Main />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
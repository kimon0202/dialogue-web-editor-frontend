{"version":3,"sources":["types/ItemTypes.ts","utils/getStyles.ts","styles/themes/dark.ts","components/Nodes/Connection.tsx","stores/connectionsStore.ts","stores/filesStore.ts","stores/nodesStore.ts","stores/index.ts","components/Button/styles.ts","components/Button/index.tsx","components/Select/styles.ts","components/Select/icons.tsx","components/Dropdown/styles.ts","components/Dropdown/index.tsx","components/Space/index.ts","components/Select/index.tsx","utils/useOutsideClick.ts","components/Select/FormSelect.tsx","components/TextArea/styles.ts","components/TextArea/index.tsx","components/Nodes/styles.ts","components/Nodes/DialogueNode.tsx","components/Nodes/DialogueNodeDragPreview.tsx","components/Nodes/DraggableDialogueNode.tsx","components/DragAndDrop/styles.ts","components/DragAndDrop/CustomDragLayer.tsx","components/ContextMenu/styles.ts","components/ContextMenu/index.tsx","components/DragAndDrop/ConnectionsContainer.tsx","components/DragAndDrop/DragAndDropContainerGlobal.tsx","components/DragAndDrop/DragAroundCustomLayer.tsx","components/Sidebar/styles.ts","components/Sidebar/index.tsx","pages/Main/styles.ts","pages/Main/LoadModal.tsx","pages/Main/index.tsx","styles/global.ts","index.tsx"],"names":["ItemTypes","getStyles","left","top","isDragging","transform","position","WebkitTransform","opacity","height","getItemStyles","initialOffset","currentOffset","display","x","y","dark","name","colors","background","backgroundSecondary","primary","text","textSecondary","accent","success","info","warning","danger","Connection","from","x1","y1","to","x2","y2","markerMid","stroke","strokeWidth","strokeLinecap","markerUnits","d","ConnectionsStore","rootStore","connections","this","fromId","toId","key","newMap","update","$set","id","connectionsKeys","forEach","indexOf","Object","keys","decorate","observable","addConnection","action","removeConnnection","computed","FilesStore","file","loadFileModal","state","connection","nodesStore","nodes","connectionsStore","setModal","loadFileContent","NodesStore","dialogueType","undefined","$merge","newNodes","nodesKeys","filesStore","updateNodePosition","addNode","reset","RootStoreContext","createContext","StyledButton","styled","button","props","theme","shade","Button","children","onClick","type","Container","div","width","isFocused","hasError","errorColor","focusedColor","InnerContainer","InputWrrapper","Input","input","Icon","Divider","span","IconSVG","svg","ErrorMessage","color","SelectedItemsContainer","SelectedItem","isLast","SelectedItemText","p","SelectWrapperContainer","SelectLabel","label","ArrowIcon","viewBox","DeleteIcon","style","pointerEvents","List","ul","DropdownItem","li","isActive","backgroundColor","Dropdown","forwardRef","ref","options","isVisible","setIsVisible","selectedColor","containerStyles","listStyles","itemsStyles","selectOptions","selectedOption","customDropdownItem","map","option","index","arr","value","length","Space","Select","heihgt","placeholder","isMulti","inputStyles","selectedItemsContainerStyles","selectedItemStyles","defaultValue","useState","dropdownVisible","setDropdownVisible","focused","setFocused","errors","setErrors","inputValue","setInputValue","values","setValues","useImperativeHandle","inputRef","useRef","dropdownRef","onClose","escapeListener","useCallback","e","clickListener","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutsideClick","handleSelectOptions","selectedOptions","className","newValues","filter","handleSelectedItemDeleteClick","onFocus","focus","onBlur","tabIndex","onChange","event","onKeyDown","keyCode","labels","includes","Number","error","FormSelect","rest","selectRef","useField","fieldName","registerField","getValue","htmlFor","InputControl","TextArea","textareaRef","labelRef","path","handleBlur","classList","add","remove","autoCorrect","autoComplete","ContentContainer","Delete","EditIcon","Edit","Header","Title","h5","Body","textarea","ModalContainer","ModalTitle","h2","ModalContent","Center","BoxContainer","Form","RawForm","DialogueNode","observer","identifier","useContext","nodeBody","setNodeBody","showDeleteModal","setShowDeleteModal","showEditModal","setShowEditModal","editNodeFormRef","handleEditFormSubmit","data","inConnections","outConnections","node","replace","fontSize","onDoubleClick","onBackdropClick","deleteNode","initialText","initialDialogueType","tempIn","tempOut","push","handleGetInitialConnections","connectionOptions","onSubmit","initialData","autoFocus","submitForm","renderEditModal","DialogueNodeDragPreview","DraggableDialogueNode","useDrag","item","collect","monitor","drag","preview","getEmptyImage","captureDraggingState","DragLayer","CustomDragLayer","useDragLayer","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","ContextItem","last","ContextMenu","visible","changeVisibility","setPosition","handleContextMenu","preventDefault","clientX","clientY","toString","callback","handleContextMenuBlur","ConnectionsContainer","memo","zIndex","markerWidth","markerHeight","fill","refX","refY","orient","points","fromNode","toNode","DragAndDropContainerGlobal","showContextMenu","setShowContextMenu","nodeCount","setNodeCount","moveNode","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","xPos","yPos","onContextMenu","renderNode","DragAroundCustomLayer","TitleContainer","ButtonsContainer","Navbar","MenuIcon","Menu","CloseIcon","Close","AnimateHeight","AnimatedIconContainer","animated","Sidebar","sidebarOpen","setSidebarOpen","trnasitions","useTransition","enter","leave","handleSave","toJS","handleFileDownload","a","json","JSON","stringify","blob","Blob","URL","createObjectURL","href","link","createElement","download","body","appendChild","click","removeChild","handleMenuClick","duration","LoadModal","onDrop","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","content","result","parse","readAsText","useDropzone","multiple","getRootProps","getInputProps","isDragActive","Main","DndProvider","backend","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7ce24f2e.chunk.js","sourcesContent":["export const ItemTypes = {\r\n  NODE: 'node',\r\n};\r\n","import { CSSProperties } from 'react';\r\nimport { XYCoord } from 'react-dnd';\r\n\r\nexport const getStyles = (\r\n  left: number,\r\n  top: number,\r\n  isDragging: boolean,\r\n): CSSProperties => {\r\n  const transform = `translate3d(${left}px, ${top}px, 0)`;\r\n\r\n  return {\r\n    position: 'absolute',\r\n    transform,\r\n    WebkitTransform: transform,\r\n    opacity: isDragging ? 0 : 1,\r\n    height: isDragging ? 0 : '',\r\n  };\r\n};\r\n\r\nexport const getItemStyles = (\r\n  initialOffset: XYCoord | null,\r\n  currentOffset: XYCoord | null,\r\n): CSSProperties => {\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: 'none',\r\n    };\r\n  }\r\n\r\n  const { x, y } = currentOffset;\r\n  const transform = `translate(${x}px, ${y}px)`;\r\n\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform,\r\n  };\r\n};\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const dark: DefaultTheme = {\r\n  name: 'dark',\r\n  colors: {\r\n    background: '#131417',\r\n    backgroundSecondary: '#1E1F26',\r\n    primary: '#3511B8',\r\n    text: '#fff',\r\n    textSecondary: '#e7dfdd',\r\n    accent: '#a239ca',\r\n    success: '#1B7C16',\r\n    info: '#0078A8',\r\n    warning: '#FCA105',\r\n    danger: '#D81E1E',\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nimport { dark } from '../../styles/themes/dark';\r\n\r\ninterface Props {\r\n  from: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  to: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  markerMid: string;\r\n}\r\n\r\nconst Connection: React.FC<Props> = ({\r\n  from: { x: x1, y: y1 },\r\n  to: { x: x2, y: y2 },\r\n  markerMid,\r\n}) => {\r\n  return (\r\n    <path\r\n      stroke={dark.colors.textSecondary}\r\n      strokeWidth={2}\r\n      strokeLinecap=\"round\"\r\n      markerUnits={2}\r\n      d={`M${x1 + 100},${y1 + 75}L${(x1 + x2 + 200) / 2},${\r\n        (y1 + y2 + 150) / 2\r\n      }L${x2 + 100},${y2 + 75}`}\r\n      markerMid={markerMid}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Connection;\r\n","import update from 'immutability-helper';\nimport { action, computed, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { ConnectionMap } from '../types/Connection';\n\nclass ConnectionsStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  connections: ConnectionMap = {};\n\n  public addConnection(fromId: string, toId: string) {\n    const key = `${fromId}|${toId}`;\n\n    const newMap = update(this.connections, {\n      [key]: {\n        $set: {\n          fromId,\n          toId,\n        },\n      },\n    });\n\n    this.connections = newMap;\n  }\n\n  public removeConnnection(id: string) {\n    this.connectionsKeys.forEach((key) => {\n      if (key.indexOf(id) !== -1) {\n        delete this.connections[key];\n      }\n    });\n  }\n\n  public get connectionsKeys() {\n    return Object.keys(this.connections);\n  }\n}\n\ndecorate(ConnectionsStore, {\n  connections: observable,\n  addConnection: action,\n  removeConnnection: action,\n  connectionsKeys: computed,\n});\n\nexport default ConnectionsStore;\n","import update from 'immutability-helper';\nimport { action, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { ConnectionMap } from '../types/Connection';\nimport { FileData } from '../types/FileData';\n\nclass FilesStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  file: FileData = {} as FileData;\n  loadFileModal = false;\n\n  public setModal(state: boolean) {\n    this.loadFileModal = state;\n  }\n\n  public loadFileContent() {\n    if (!this.file) {\n      return;\n    }\n\n    let connections: ConnectionMap = {};\n\n    this.file.connections.forEach((connection) => {\n      const key = `${connection.fromId}|${connection.toId}`;\n\n      connections = update(connections, {\n        [key]: {\n          $set: {\n            fromId: connection.fromId,\n            toId: connection.toId,\n          },\n        },\n      });\n    });\n\n    this.rootStore.nodesStore.nodes = this.file.nodes;\n    this.rootStore.connectionsStore.connections = connections;\n  }\n}\n\ndecorate(FilesStore, {\n  file: observable,\n  loadFileModal: observable,\n  setModal: action,\n  loadFileContent: action,\n});\n\nexport default FilesStore;\n","import update from 'immutability-helper';\r\nimport { action, computed, decorate, observable } from 'mobx';\r\n\r\nimport { RootStore } from '.';\r\nimport { FileData } from '../types/FileData';\r\nimport { NodeMap } from '../types/Node';\r\n\r\ninterface ActiveNodeModal {\r\n  id: string;\r\n  mode: 'delete' | 'edit' | null;\r\n}\r\n\r\nclass NodesStore {\r\n  private rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  nodes: NodeMap = {\r\n    'id:rootNode': {\r\n      id: 'id:rootNode',\r\n      left: 80,\r\n      top: 20,\r\n      dialogueType: undefined,\r\n      text: '',\r\n    },\r\n  };\r\n\r\n  public updateNodePosition(id: string, left: number, top: number) {\r\n    this.nodes = update(this.nodes, {\r\n      [id]: {\r\n        $merge: { left, top },\r\n      },\r\n    });\r\n  }\r\n\r\n  public addNode(id: string, left: number, top: number) {\r\n    const newNodes = update(this.nodes, {\r\n      [id]: {\r\n        $set: {\r\n          left,\r\n          top,\r\n          id,\r\n          dialogueType: undefined,\r\n          text: '',\r\n        },\r\n      },\r\n    });\r\n\r\n    this.nodes = newNodes;\r\n  }\r\n\r\n  public deleteNode(id: string) {\r\n    this.nodesKeys.forEach((key) => {\r\n      if (key === id) {\r\n        delete this.nodes[id];\r\n      }\r\n    });\r\n  }\r\n\r\n  public reset() {\r\n    this.nodes = {\r\n      'id:rootNode': {\r\n        id: 'id:rootNode',\r\n        left: 80,\r\n        top: 20,\r\n        dialogueType: undefined,\r\n        text: '',\r\n      },\r\n    };\r\n    this.rootStore.connectionsStore.connections = {};\r\n    this.rootStore.filesStore.file = {} as FileData;\r\n  }\r\n\r\n  public get nodesKeys() {\r\n    return Object.keys(this.nodes);\r\n  }\r\n}\r\n\r\ndecorate(NodesStore, {\r\n  nodes: observable,\r\n  updateNodePosition: action,\r\n  addNode: action,\r\n  reset: action,\r\n  nodesKeys: computed,\r\n});\r\n\r\nexport default NodesStore;\r\n","import { createContext } from 'react';\r\n\r\nimport ConnectionsStore from './connectionsStore';\r\nimport FilesStore from './filesStore';\r\nimport NodesStore from './nodesStore';\r\n\r\nexport class RootStore {\r\n  public nodesStore: NodesStore = new NodesStore(this);\r\n  public connectionsStore: ConnectionsStore = new ConnectionsStore(this);\r\n  public filesStore: FilesStore = new FilesStore(this);\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import { shade } from 'polished';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  background: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n\n  border: none;\n  outline: none;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 150px;\n  height: 60px;\n  border-radius: 8px;\n\n  color: #fff;\n  font-weight: bold;\n  font-size: 18px;\n\n  :hover {\n    background: ${(props) => shade(0.25, props.theme.colors.primary)};\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledButton } from './styles';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactElement | string;\r\n  onClick?(): void;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","/* eslint-disable no-nested-ternary */\r\nimport styled from 'styled-components';\r\n\r\nimport {\r\n  SelectContainerProps,\r\n  ErrorMessageProps,\r\n  SelectedItemProps,\r\n} from './select.interfaces';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n\r\n  width: ${(props: SelectContainerProps) =>\r\n    typeof props.width === 'string' ? props.width : `${props.width}px`};\r\n\r\n  height: ${(props: SelectContainerProps) =>\r\n    typeof props.height === 'string' ? props.height : `${props.height}px`};\r\n\r\n  border: ${(props: SelectContainerProps) =>\r\n    props.isFocused\r\n      ? props.hasError\r\n        ? `1px solid ${props.errorColor}`\r\n        : `1px solid ${props.focusedColor}`\r\n      : props.hasError\r\n      ? `1px solid ${props.errorColor}`\r\n      : '1px solid black'};\r\n  border-radius: 4px;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const InnerContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  padding: 0 8px;\r\n`;\r\n\r\nexport const InputWrrapper = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 0;\r\n  border: none;\r\n\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n  outline: none;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n  height: 100%;\r\n  width: 50px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Divider = styled.span`\r\n  width: 1px;\r\n  height: 60%;\r\n  background: black;\r\n`;\r\n\r\nexport const IconSVG = styled.svg`\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  /* transform: translateY(10%); */\r\n`;\r\n\r\nexport const ErrorMessage = styled.span`\r\n  color: ${(props: ErrorMessageProps) => props.color};\r\n  font-size: 14px;\r\n  font-weight: medium;\r\n`;\r\n\r\nexport const SelectedItemsContainer = styled.div`\r\n  min-width: 200px;\r\n  width: auto;\r\n  min-height: 100%;\r\n  padding: 0 4px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow-x: auto;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const SelectedItem = styled.div`\r\n  color: #000;\r\n  height: 60%;\r\n  width: fit-content;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  /* TODO: props background color */\r\n  background: #f1f1f1;\r\n  border-radius: 4px;\r\n\r\n  margin-right: ${(props: SelectedItemProps) => (props.isLast ? '0px' : '4px')};\r\n  user-select: none;\r\n`;\r\n\r\nexport const SelectedItemText = styled.p`\r\n  padding: 4px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const SelectWrapperContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const SelectLabel = styled.label`\r\n  color: #fff;\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n`;\r\n","/* eslint-disable max-len */\r\n/* eslint-disable react/no-multi-comp */\r\nimport React from 'react';\r\n\r\nimport { IconSVG } from './styles';\r\n\r\nconst arrowIcon = `\r\nM4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481\r\n 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502\r\n -4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 \r\n 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z`;\r\n\r\nconst deleteIcon = `M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z`;\r\n\r\ninterface IconProps {\r\n  onClick?: () => void;\r\n  opacity?: number;\r\n  viewBox?: string;\r\n}\r\n\r\nconst ArrowIcon: React.FC<IconProps> = ({ onClick }) => (\r\n  <IconSVG viewBox=\"0 0 20 20\" onClick={onClick}>\r\n    <path d={arrowIcon} />\r\n  </IconSVG>\r\n);\r\n\r\nconst DeleteIcon: React.FC<IconProps> = ({ onClick, opacity, viewBox }) => (\r\n  <IconSVG\r\n    viewBox={viewBox || '0 0 20 20'}\r\n    onClick={onClick}\r\n    style={{\r\n      opacity,\r\n      pointerEvents: opacity === 1 ? 'auto' : 'none',\r\n      transform: viewBox ? 'translateY(10%)' : '',\r\n    }}\r\n  >\r\n    <path d={deleteIcon} />\r\n  </IconSVG>\r\n);\r\n\r\nexport { ArrowIcon, DeleteIcon };\r\n","import { shade } from 'polished';\r\nimport styled from 'styled-components';\r\n\r\nimport {\r\n  DropdownContainerProps,\r\n  DropdownItemProps,\r\n} from './dropdown.interfaces';\r\n\r\nexport const Container = styled.div`\r\n  height: auto;\r\n  width: ${(props: DropdownContainerProps) =>\r\n    typeof props.width === 'string' ? props.width : `${props.width}px`};\r\n\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  border-radius: 4px;\r\n\r\n  position: absolute;\r\n  z-index: 999999;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  font-family: sans-serif;\r\n`;\r\n\r\nexport const DropdownItem = styled.li`\r\n  padding: 8px 24px;\r\n  margin: 0;\r\n  cursor: pointer;\r\n\r\n  border-bottom: ${(props: DropdownItemProps) =>\r\n    props.isLast ? '' : '1px dashed #ccc'};\r\n\r\n  background: ${(props: DropdownItemProps) =>\r\n    props.isActive ? props.theme.colors.primary : props.backgroundColor};\r\n\r\n  &:hover {\r\n    background: ${(props: DropdownItemProps) =>\r\n      shade(\r\n        0.1,\r\n        props.isActive ? props.theme.colors.primary : props.backgroundColor,\r\n      )};\r\n  }\r\n\r\n  &:active {\r\n    background: ${(props: DropdownItemProps) =>\r\n      shade(\r\n        0.15,\r\n        props.isActive ? props.theme.colors.primary : props.backgroundColor,\r\n      )};\r\n  }\r\n`;\r\n","import React, { forwardRef } from 'react';\r\n\r\nimport { OptionBase } from '../../types/Option';\r\nimport { Container, DropdownItem, List } from './styles';\r\nimport { DropdownStyle } from './dropdown.interfaces';\r\n\r\ninterface DropdownProps extends DropdownStyle {\r\n  options: OptionBase[];\r\n  isVisible: boolean;\r\n  setIsVisible: (state: boolean) => void;\r\n\r\n  width?: React.ReactText;\r\n  backgroundColor?: string;\r\n  selectedColor?: string;\r\n\r\n  selectOptions?: (selectedOptions: OptionBase[]) => void;\r\n  selectedOption?: OptionBase;\r\n\r\n  customDropdownItem?: React.ReactNode;\r\n}\r\n\r\nconst Dropdown = forwardRef<HTMLDivElement, DropdownProps>(\r\n  (\r\n    {\r\n      options,\r\n      isVisible,\r\n      setIsVisible,\r\n      width = 500,\r\n      backgroundColor = '#fff',\r\n      selectedColor = '#07bcaa',\r\n      containerStyles = undefined,\r\n      listStyles = undefined,\r\n      itemsStyles = undefined,\r\n      selectOptions = () => null,\r\n      selectedOption = undefined,\r\n      customDropdownItem = null,\r\n    },\r\n    ref,\r\n  ) => {\r\n    if (!isVisible) return null;\r\n\r\n    return (\r\n      <Container width={width} style={containerStyles} ref={ref}>\r\n        <List style={listStyles}>\r\n          {options.map((option, index, arr) => {\r\n            return (\r\n              customDropdownItem || (\r\n                <DropdownItem\r\n                  key={option.value}\r\n                  style={itemsStyles}\r\n                  isLast={index === arr.length - 1}\r\n                  isActive={selectedOption === option}\r\n                  backgroundColor={backgroundColor}\r\n                  selectedColor={selectedColor}\r\n                  onClick={() => {\r\n                    selectOptions([option]);\r\n                    setIsVisible(false);\r\n                  }}\r\n                >\r\n                  <span>{option.label}</span>\r\n                </DropdownItem>\r\n              )\r\n            );\r\n          })}\r\n        </List>\r\n      </Container>\r\n    );\r\n  },\r\n);\r\n\r\nexport default Dropdown;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  width: number | string;\r\n  height: number | string;\r\n}\r\n\r\nexport const Space = styled.div`\r\n  width: ${(props: Props) =>\r\n    typeof props.width === typeof 'aa' ? props.width : `${props.width}px`};\r\n\r\n  height: ${(props: Props) =>\r\n    typeof props.height === typeof 'aa' ? props.height : `${props.height}px`};\r\n`;\r\n","/* eslint-disable @typescript-eslint/no-use-before-define */\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  CSSProperties,\r\n} from 'react';\r\nimport { ArrowIcon, DeleteIcon } from './icons';\r\n\r\nimport { OptionBase } from '../../types/Option';\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Icon,\r\n  InnerContainer,\r\n  Input,\r\n  InputWrrapper,\r\n  ErrorMessage,\r\n  SelectedItem,\r\n  SelectedItemText,\r\n  SelectedItemsContainer,\r\n} from './styles';\r\nimport { useOutsideClick } from '../../utils/useOutsideClick';\r\nimport Dropdown from '../Dropdown';\r\nimport { Space } from '../Space';\r\nimport { SelectStyles } from './select.interfaces';\r\n\r\nexport interface SelectProps extends SelectStyles {\r\n  options: OptionBase[];\r\n\r\n  width?: React.ReactText;\r\n  heihgt?: React.ReactText;\r\n  placeholder?: string;\r\n  focusedColor?: string;\r\n  errorColor?: string;\r\n  isMulti?: boolean;\r\n  defaultValue?: OptionBase[];\r\n  customDropdownItem?: React.ReactNode;\r\n  listStyles?: CSSProperties;\r\n}\r\n\r\n// TODO: Make component focused when Arrow Icon is clicked\r\n// TODO: Focus input component when arrow icon is clciked\r\n// TODO: Remove options from array when default values is received\r\n// TODO: Add scrollable selected items container for multi select component\r\n// // TODO: Receive default values\r\n// // TODO: Multi Select state management\r\n// // TODO: Add override styles props for each component of select component\r\n// // TODO: Clear select and multi select button\r\n// // TODO: Add remove icon from selected options\r\n// // TODO: Remove selected options from values array\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst Select = forwardRef<{ state: OptionBase[] }, SelectProps>(\r\n  (\r\n    {\r\n      options,\r\n      width = 500,\r\n      heihgt = 38,\r\n      placeholder,\r\n      focusedColor = '#2684FF',\r\n      errorColor = '#c91616',\r\n      isMulti = false,\r\n      containerStyles = undefined,\r\n      inputStyles = undefined,\r\n      selectedItemsContainerStyles = undefined,\r\n      selectedItemStyles = undefined,\r\n      defaultValue = [],\r\n      customDropdownItem = null,\r\n      listStyles = undefined,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [dropdownVisible, setDropdownVisible] = useState(false);\r\n    const [focused, setFocused] = useState(false);\r\n    const [errors, setErrors] = useState<string[]>([]);\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [values, setValues] = useState<OptionBase[]>(defaultValue);\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        state: values,\r\n      }),\r\n      [values],\r\n    );\r\n\r\n    // * Input focus and dropdown state management\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const dropdownRef = useOutsideClick(() => {\r\n      if (!dropdownVisible || focused) return;\r\n\r\n      setDropdownVisible(false);\r\n    });\r\n\r\n    const handleFocus = () => {\r\n      setFocused(true);\r\n      setDropdownVisible(true);\r\n\r\n      inputRef.current?.focus();\r\n    };\r\n\r\n    const handleBlur = () => {\r\n      setFocused(false);\r\n    };\r\n\r\n    const handleToggleDropdown = () => {\r\n      setDropdownVisible(!dropdownVisible);\r\n      // setFocused(!focused);\r\n    };\r\n\r\n    // * Select State Management\r\n    const handleInputValueChange = (\r\n      event: React.ChangeEvent<HTMLInputElement>,\r\n    ): void => {\r\n      setInputValue(event.target.value);\r\n    };\r\n\r\n    const handleInputKeyDown = (\r\n      event: React.KeyboardEvent<HTMLInputElement>,\r\n    ): void => {\r\n      if (event.keyCode === 13) {\r\n        /* Enter key */\r\n        // console.log(inputRef.current?.value);\r\n        const labels = options.map((option) => option.label);\r\n\r\n        if (\r\n          inputRef.current?.value &&\r\n          labels.includes(inputRef.current?.value)\r\n        ) {\r\n          const selectedOptions = options.filter(\r\n            (option) => option.label === inputRef.current?.value,\r\n          );\r\n\r\n          setErrors([]);\r\n          handleSelectOptions(selectedOptions);\r\n          setFocused(false);\r\n          setDropdownVisible(false);\r\n        } else {\r\n          // console.log('No avaiable option could be found');\r\n          setErrors([`No option ${inputRef.current?.value} found`]);\r\n          setInputValue('');\r\n          setDropdownVisible(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleSelectOptions = (selectedOptions: OptionBase[]) => {\r\n      if (!isMulti) {\r\n        setValues([selectedOptions[0]]);\r\n        setErrors([]);\r\n        return;\r\n      }\r\n\r\n      setValues([...values, ...selectedOptions]);\r\n      setErrors([]);\r\n    };\r\n\r\n    const handleClearSelectionsClick = () => {\r\n      setValues([]);\r\n    };\r\n\r\n    const handleSelectedItemDeleteClick = (option: OptionBase) => {\r\n      const newValues = values.filter((value) => value !== option);\r\n      setValues(newValues);\r\n    };\r\n\r\n    useEffect(() => {\r\n      setInputValue((): string => {\r\n        if (!isMulti) {\r\n          if (!values[0]) return '';\r\n\r\n          return values[0].label;\r\n        }\r\n\r\n        return '';\r\n      });\r\n    }, [values, isMulti]);\r\n\r\n    return (\r\n      <>\r\n        <Container\r\n          width={width}\r\n          height={heihgt}\r\n          isFocused={focused}\r\n          hasError={errors.length !== 0}\r\n          focusedColor={focusedColor}\r\n          errorColor={errorColor}\r\n          style={containerStyles}\r\n        >\r\n          {isMulti && values.length > 0 ? (\r\n            <SelectedItemsContainer\r\n              style={selectedItemsContainerStyles}\r\n              className=\"dragscroll\"\r\n            >\r\n              {values.map((value, index, arr) => (\r\n                <SelectedItem\r\n                  isLast={index === arr.length - 1}\r\n                  key={value.value}\r\n                  style={selectedItemStyles}\r\n                >\r\n                  <SelectedItemText>{value.label}</SelectedItemText>\r\n                  <DeleteIcon\r\n                    onClick={() => handleSelectedItemDeleteClick(value)}\r\n                    opacity={1}\r\n                    viewBox=\"0 0 25 25\"\r\n                  />\r\n                </SelectedItem>\r\n              ))}\r\n            </SelectedItemsContainer>\r\n          ) : null}\r\n          <InnerContainer>\r\n            <InputWrrapper\r\n              onFocus={handleFocus}\r\n              onBlur={handleBlur}\r\n              tabIndex={0}\r\n            >\r\n              <Input\r\n                ref={inputRef}\r\n                placeholder={values.length > 0 ? '' : placeholder}\r\n                value={inputValue}\r\n                onChange={handleInputValueChange}\r\n                onKeyDown={handleInputKeyDown}\r\n                // onFocus={handleFocus}\r\n                // onBlur={handleBlur}\r\n                tabIndex={-1}\r\n                style={inputStyles}\r\n              />\r\n            </InputWrrapper>\r\n            <Icon>\r\n              <DeleteIcon\r\n                onClick={handleClearSelectionsClick}\r\n                opacity={Number(values.length > 0)}\r\n              />\r\n              <Space width={8} height=\"100%\" />\r\n              <Divider />\r\n              <Space width={8} height=\"100%\" />\r\n              <ArrowIcon onClick={handleToggleDropdown} />\r\n            </Icon>\r\n          </InnerContainer>\r\n\r\n          <Dropdown\r\n            ref={dropdownRef}\r\n            isVisible={dropdownVisible}\r\n            setIsVisible={setDropdownVisible}\r\n            options={\r\n              isMulti\r\n                ? options.filter((option) => !values.includes(option))\r\n                : options\r\n            }\r\n            width={width}\r\n            containerStyles={{ top: '110%' }}\r\n            listStyles={listStyles}\r\n            selectOptions={handleSelectOptions}\r\n            selectedOption={values[0] || undefined}\r\n            customDropdownItem={customDropdownItem}\r\n          />\r\n        </Container>\r\n        {errors.map((error) => (\r\n          <>\r\n            <Space width=\"100%\" height={5} />\r\n            <ErrorMessage color={errorColor}>{error}</ErrorMessage>\r\n          </>\r\n        ))}\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nexport default Select;\r\n","/* eslint-disable no-continue */\r\nimport { useCallback, useEffect, useRef } from 'react';\r\n\r\nexport const useOutsideClick = (onClose: () => void) => {\r\n  const ref = useRef(null);\r\n\r\n  const escapeListener = useCallback(\r\n    (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    },\r\n    [onClose],\r\n  );\r\n\r\n  const clickListener = useCallback(\r\n    (e: MouseEvent) => {\r\n      if (!ref.current) return;\r\n\r\n      if (!(ref.current! as any).contains(e.target)) {\r\n        onClose?.();\r\n      }\r\n    },\r\n    [onClose],\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', clickListener);\r\n    document.addEventListener('keyup', escapeListener);\r\n    return () => {\r\n      document.removeEventListener('click', clickListener);\r\n      document.removeEventListener('keyup', escapeListener);\r\n    };\r\n  }, [clickListener, escapeListener]);\r\n\r\n  return ref;\r\n};\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { useField } from '@unform/core';\r\nimport Select, { SelectProps } from '.';\r\n\r\nimport { SelectWrapperContainer, SelectLabel } from './styles';\r\nimport { OptionBase } from '../../types/Option';\r\n\r\ninterface FormSelectProps extends SelectProps {\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\nconst FormSelect: React.FC<FormSelectProps> = ({\r\n  name,\r\n  isMulti,\r\n  options,\r\n  label,\r\n  ...rest\r\n}) => {\r\n  const selectRef = useRef<{ state: OptionBase[] }>(null);\r\n  const { fieldName, registerField, defaultValue } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: selectRef.current,\r\n      getValue: () => {\r\n        if (isMulti) {\r\n          if (!selectRef.current?.state) return [];\r\n\r\n          return selectRef.current.state;\r\n        }\r\n\r\n        if (!selectRef.current?.state[0]) return { label: '', value: '' };\r\n\r\n        return selectRef.current.state[0];\r\n      },\r\n    });\r\n  }, [fieldName, registerField, isMulti]);\r\n\r\n  return (\r\n    <SelectWrapperContainer>\r\n      {label && <SelectLabel htmlFor=\"select\">{label}</SelectLabel>}\r\n      <Select\r\n        ref={selectRef}\r\n        isMulti={isMulti}\r\n        options={options}\r\n        defaultValue={defaultValue}\r\n        {...rest}\r\n      />\r\n    </SelectWrapperContainer>\r\n  );\r\n};\r\n\r\nexport default FormSelect;\r\n","import styled from 'styled-components';\r\n\r\nexport const InputControl = styled.div`\r\n  position: relative;\r\n`;\r\n","import './styles.css';\r\n\r\nimport { useField } from '@unform/core';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nimport { InputControl } from './styles';\r\n\r\ninterface Props {\r\n  name: string;\r\n  label?: string;\r\n  width?: number | string;\r\n  height?: number | string;\r\n}\r\n\r\ntype TextareaProps = JSX.IntrinsicElements['textarea'] & Props;\r\n\r\nconst TextArea: React.FC<TextareaProps> = ({\r\n  name,\r\n  label,\r\n  width = 400,\r\n  height = 400,\r\n  ...rest\r\n}) => {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const labelRef = useRef<HTMLLabelElement>(null);\r\n  const { fieldName, defaultValue, registerField, error } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n\r\n      path: 'value',\r\n\r\n      ref: textareaRef.current,\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  const handleBlur = () => {\r\n    if (textareaRef.current?.value !== '') {\r\n      labelRef.current?.classList.add('active');\r\n    } else {\r\n      labelRef.current?.classList.remove('active');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InputControl onBlur={handleBlur}>\r\n      <textarea\r\n        id={fieldName}\r\n        ref={textareaRef}\r\n        defaultValue={defaultValue}\r\n        className=\"input-control\"\r\n        style={{\r\n          width,\r\n          height,\r\n        }}\r\n        autoCorrect=\"off\"\r\n        autoComplete=\"off\"\r\n        onBlur={handleBlur}\r\n        {...rest}\r\n      />\r\n      {label ? (\r\n        <label className=\"label\" htmlFor={fieldName} ref={labelRef}>\r\n          {label}\r\n        </label>\r\n      ) : null}\r\n      {error ? <span>{error}</span> : null}\r\n    </InputControl>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import { Delete, Edit } from '@material-ui/icons';\r\nimport { Form as RawForm } from '@unform/web';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 200px;\r\n  height: 150px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 120px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: move;\r\n\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n\r\n  background: #fefefe;\r\n  color: #000;\r\n`;\r\n\r\nexport const DeleteIcon = styled(Delete)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.text};\r\n\r\n  cursor: pointer;\r\n  margin-left: 4px;\r\n`;\r\n\r\nexport const EditIcon = styled(Edit)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.text};\r\n\r\n  cursor: pointer;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  height: 30px;\r\n  background: ${(props) => props.theme.colors.primary};\r\n  padding: 4px;\r\n\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n\r\n  cursor: move;\r\n`;\r\n\r\nexport const Title = styled.h5`\r\n  width: 60%;\r\n  height: 100%;\r\n  margin: 0;\r\n\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n\r\n  color: ${(props) => props.theme.colors.text};\r\n`;\r\n\r\nexport const Body = styled.textarea`\r\n  resize: none;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  outline: none;\r\n  padding: 4px;\r\n  color: #000;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n`;\r\n\r\ninterface ModalContainerProps {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n  width: ${(props: ModalContainerProps) => props.width || 400}px;\r\n  height: ${(props: ModalContainerProps) => props.height || 400}px;\r\n  border-radius: 16px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalTitle = styled.h2`\r\n  width: 100%;\r\n  height: 12.5%;\r\n\r\n  padding: 8px 24px;\r\n  text-align: center;\r\n\r\n  color: ${(props) => props.theme.colors.text};\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  width: 100%;\r\n  height: 87.5%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  padding: 24px;\r\n`;\r\n\r\nexport const Form = styled(RawForm)`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  /* padding: 24px; */\r\n`;\r\n","import { FormHandles, SubmitHandler } from '@unform/core';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Modal } from 'portal-modals';\r\nimport React, { useContext, useRef, useState } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { NodeEditFormData } from '../../types/Node';\r\nimport Button from '../Button';\r\nimport FormSelect from '../Select/FormSelect';\r\nimport { Space } from '../Space';\r\nimport TextArea from '../TextArea';\r\nimport {\r\n  Body,\r\n  BoxContainer,\r\n  Center,\r\n  Container,\r\n  ContentContainer,\r\n  DeleteIcon,\r\n  EditIcon,\r\n  Form,\r\n  Header,\r\n  ModalContainer,\r\n  ModalContent,\r\n  ModalTitle,\r\n  Title,\r\n} from './styles';\r\n\r\ninterface DialogueNodeProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNode: React.FC<DialogueNodeProps> = observer(({ identifier }) => {\r\n  const { nodesStore, connectionsStore } = useContext(RootStoreContext);\r\n  const [nodeBody, setNodeBody] = useState(nodesStore.nodes[identifier].text);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const editNodeFormRef = useRef<FormHandles>(null);\r\n\r\n  const deleteNode = (id: string) => {\r\n    nodesStore.deleteNode(id);\r\n    connectionsStore.removeConnnection(id);\r\n  };\r\n\r\n  const renderDeleteModal = () => (\r\n    <Modal\r\n      isVisible={showDeleteModal}\r\n      onBackdropClick={() => setShowDeleteModal(false)}\r\n    >\r\n      <ModalContainer>\r\n        <ModalTitle>Are you sure you want to delete this node?</ModalTitle>\r\n        <ModalContent>\r\n          <Button\r\n            onClick={() => {\r\n              deleteNode(identifier);\r\n            }}\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Space width=\"100%\" height={20} />\r\n          <Button\r\n            onClick={() => {\r\n              setShowDeleteModal(false);\r\n            }}\r\n          >\r\n            No\r\n          </Button>\r\n        </ModalContent>\r\n      </ModalContainer>\r\n    </Modal>\r\n  );\r\n\r\n  const handleEditFormSubmit: SubmitHandler<NodeEditFormData> = (data) => {\r\n    // console.log(data);\r\n    const { inConnections, outConnections, text, type } = data;\r\n\r\n    const node = nodesStore.nodes[identifier];\r\n\r\n    node.text = text;\r\n    node.dialogueType = type.value;\r\n\r\n    outConnections.forEach((connection) => {\r\n      connectionsStore.addConnection(node.id, connection.value);\r\n    });\r\n\r\n    if (node.id !== 'id:rootNode') {\r\n      inConnections.forEach((connection) => {\r\n        connectionsStore.addConnection(connection.value, node.id);\r\n      });\r\n    }\r\n\r\n    setShowEditModal(false);\r\n  };\r\n\r\n  const handleGetInitialConnections = (id: string) => {\r\n    const tempIn: { label: string; value: string }[] = [];\r\n    const tempOut: { label: string; value: string }[] = [];\r\n\r\n    connectionsStore.connectionsKeys.forEach((key) => {\r\n      if (connectionsStore.connections[key].fromId === id) {\r\n        tempOut.push({\r\n          label: connectionsStore.connections[key].toId,\r\n          value: connectionsStore.connections[key].toId,\r\n        });\r\n      }\r\n\r\n      if (connectionsStore.connections[key].toId === id) {\r\n        tempIn.push({\r\n          label: connectionsStore.connections[key].fromId,\r\n          value: connectionsStore.connections[key].fromId,\r\n        });\r\n      }\r\n    });\r\n\r\n    return {\r\n      inConnections: tempIn,\r\n      outConnections: tempOut,\r\n    };\r\n  };\r\n\r\n  const renderEditModal = () => {\r\n    const node = nodesStore.nodes[identifier];\r\n    const initialText = node.text;\r\n    const initialDialogueType = {\r\n      label: node.dialogueType,\r\n      value: node.dialogueType,\r\n    };\r\n\r\n    const { inConnections, outConnections } = handleGetInitialConnections(\r\n      node.id,\r\n    );\r\n\r\n    const connectionOptions = nodesStore.nodesKeys\r\n      .filter((key) => key !== identifier)\r\n      .map((key) => ({ label: key, value: key }));\r\n\r\n    return (\r\n      <Modal\r\n        isVisible={showEditModal}\r\n        onBackdropClick={() => setShowEditModal(false)}\r\n      >\r\n        <ModalContainer width={1024} height={800}>\r\n          <ModalTitle>{`Editing ${identifier}`}</ModalTitle>\r\n          <ModalContent>\r\n            <Form\r\n              ref={editNodeFormRef}\r\n              onSubmit={handleEditFormSubmit}\r\n              initialData={{\r\n                text: initialText,\r\n                inConnections,\r\n                outConnections,\r\n                type: initialDialogueType.label ? [initialDialogueType] : [],\r\n              }}\r\n            >\r\n              <BoxContainer>\r\n                {node.id === 'id:rootNode' ? null : (\r\n                  <FormSelect\r\n                    name=\"inConnections\"\r\n                    label=\"In Connections\"\r\n                    placeholder=\"Select in connections...\"\r\n                    isMulti\r\n                    options={connectionOptions}\r\n                    width={300}\r\n                    containerStyles={{\r\n                      backgroundColor: '#fff',\r\n                    }}\r\n                    selectedItemStyles={{\r\n                      color: '#000',\r\n                    }}\r\n                    inputStyles={{\r\n                      color: '#000',\r\n                    }}\r\n                    listStyles={{\r\n                      color: '#000',\r\n                    }}\r\n                  />\r\n                )}\r\n                <FormSelect\r\n                  name=\"outConnections\"\r\n                  label=\"Out Connections\"\r\n                  placeholder=\"Select out connections...\"\r\n                  isMulti\r\n                  options={connectionOptions}\r\n                  width={300}\r\n                  containerStyles={{\r\n                    backgroundColor: '#fff',\r\n                  }}\r\n                  inputStyles={{\r\n                    color: '#000',\r\n                  }}\r\n                  listStyles={{\r\n                    color: '#000',\r\n                  }}\r\n                />\r\n                <FormSelect\r\n                  name=\"type\"\r\n                  label=\"Dialogue Type\"\r\n                  placeholder=\"Select dialogue type...\"\r\n                  containerStyles={{\r\n                    backgroundColor: '#fff',\r\n                  }}\r\n                  inputStyles={{\r\n                    color: '#000',\r\n                  }}\r\n                  listStyles={{\r\n                    color: '#000',\r\n                  }}\r\n                  options={[\r\n                    {\r\n                      label: 'Player',\r\n                      value: 'Player',\r\n                    },\r\n                    {\r\n                      label: 'AICharacter',\r\n                      value: 'AICharacter',\r\n                    },\r\n                  ]}\r\n                  width={300}\r\n                />\r\n              </BoxContainer>\r\n              <Space width=\"100%\" height={20} />\r\n              <Center>\r\n                <TextArea\r\n                  name=\"text\"\r\n                  autoFocus\r\n                  placeholder=\"Dialogue text...\"\r\n                  width={960}\r\n                />\r\n              </Center>\r\n              <Space width=\"100%\" height={30} />\r\n              <Center>\r\n                <Button onClick={() => editNodeFormRef.current?.submitForm()}>\r\n                  Save\r\n                </Button>\r\n              </Center>\r\n            </Form>\r\n          </ModalContent>\r\n        </ModalContainer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>{identifier.replace('id:', '')}</Title>\r\n        <EditIcon fontSize=\"small\" onClick={() => setShowEditModal(true)} />\r\n        {identifier === 'id:rootNode' ? null : (\r\n          <DeleteIcon\r\n            fontSize=\"small\"\r\n            onClick={() => setShowDeleteModal(true)}\r\n          />\r\n        )}\r\n      </Header>\r\n      <ContentContainer>\r\n        <Body\r\n          defaultValue={nodeBody}\r\n          placeholder=\"Dialogue Text...\"\r\n          onDoubleClick={() => setShowEditModal(true)}\r\n          onChange={(event) => setNodeBody(event.target.value)}\r\n          onBlur={() => {\r\n            nodesStore.nodes[identifier].text = nodeBody;\r\n          }}\r\n        />\r\n      </ContentContainer>\r\n      {renderDeleteModal()}\r\n      {renderEditModal()}\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DialogueNode;\r\n","import React from 'react';\r\n\r\nimport DialogueNode from './DialogueNode';\r\n\r\ninterface DialogueNodeDragPreviewProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNodeDragPreview: React.FC<DialogueNodeDragPreviewProps> = ({\r\n  identifier,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <DialogueNode identifier={identifier} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueNodeDragPreview;\r\n","import React, { useEffect } from 'react';\r\nimport { DragSourceMonitor, useDrag } from 'react-dnd';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getStyles } from '../../utils/getStyles';\r\nimport DialogueNode from './DialogueNode';\r\n\r\nconst DraggableDialogueNode: React.FC<Node> = ({ id, left, top }) => {\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: ItemTypes.NODE, id, left, top },\r\n    collect: (monitor: DragSourceMonitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true });\r\n  }, [preview]);\r\n\r\n  return (\r\n    <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n      <DialogueNode identifier={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableDialogueNode;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  position: relative;\r\n`;\r\n\r\nexport const DragLayer = styled.div`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 100;\r\n  position: fixed;\r\n  pointer-events: none;\r\n`;\r\n","import React from 'react';\r\nimport { useDragLayer } from 'react-dnd';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getItemStyles } from '../../utils/getStyles';\r\nimport { DialogueNodeDragPreview } from '../Nodes';\r\nimport { DragLayer } from './styles';\r\n\r\nconst CustomDragLayer: React.FC = () => {\r\n  const {\r\n    itemType,\r\n    isDragging,\r\n    item,\r\n    initialOffset,\r\n    currentOffset,\r\n  } = useDragLayer((monitor) => ({\r\n    item: monitor.getItem() as Node,\r\n    itemType: monitor.getItemType(),\r\n    initialOffset: monitor.getInitialSourceClientOffset(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging(),\r\n  }));\r\n\r\n  const renderItem = () => {\r\n    switch (itemType) {\r\n      case ItemTypes.NODE:\r\n        return <DialogueNodeDragPreview identifier={item.id} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (!isDragging) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <DragLayer>\r\n      <div style={getItemStyles(initialOffset, currentOffset)}>\r\n        {renderItem()}\r\n      </div>\r\n    </DragLayer>\r\n  );\r\n};\r\n\r\nexport default CustomDragLayer;\r\n","import styled from 'styled-components';\r\n\r\ninterface ContainerProps {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface ContextItemProps {\r\n  last: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: ${(props: ContainerProps) => props.y}px;\r\n  left: ${(props: ContainerProps) => props.x + 5}px;\r\n\r\n  z-index: 300;\r\n`;\r\n\r\nexport const ContextItem = styled.div`\r\n  background: #fff;\r\n  border-bottom: ${(props: ContextItemProps) =>\r\n    !props.last ? 'dotted 1px #ccc' : null};\r\n  padding: 5px 25px;\r\n\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f1f1f1;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Container, ContextItem } from './styles';\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Option {\r\n  label: string;\r\n  callback?(event: React.MouseEvent<any, MouseEvent>): void;\r\n}\r\n\r\ninterface Props {\r\n  options: Option[];\r\n  visible: boolean;\r\n  changeVisibility(state: boolean): void;\r\n}\r\n\r\nconst ContextMenu: React.FC<Props> = ({\r\n  options,\r\n  visible,\r\n  changeVisibility,\r\n}) => {\r\n  const [position, setPosition] = useState<Position>({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  const handleContextMenu = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    const { clientX: x, clientY: y } = event;\r\n\r\n    setPosition({ x, y });\r\n  };\r\n\r\n  const handleContextMenuBlur = (event: React.MouseEvent<any, MouseEvent>) => {\r\n    event.preventDefault();\r\n\r\n    changeVisibility(false);\r\n    setPosition({ x: 0, y: 0 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('contextmenu', handleContextMenu);\r\n    // document.addEventListener('click', handleContextMenuBlur);\r\n\r\n    return () => {\r\n      document.removeEventListener('contextmenu', handleContextMenu);\r\n      // document.removeEventListener('click', handleContextMenuBlur);\r\n    };\r\n  }, []);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Container x={position.x} y={position.y}>\r\n      {options.map((item, index, arr) => {\r\n        return (\r\n          <ContextItem\r\n            key={index.toString()}\r\n            last={arr.length - 1 === index}\r\n            onClick={(event) => {\r\n              if (item.callback) item.callback(event);\r\n              handleContextMenuBlur(event);\r\n            }}\r\n          >\r\n            {item.label}\r\n          </ContextItem>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useContext } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { dark } from '../../styles/themes/dark';\r\nimport { Connection as ConnectionLine } from '../Nodes';\r\n\r\n// import { Container } from './styles';\r\nconst ConnectionsContainer: React.FC = memo(\r\n  observer(() => {\r\n    const { nodesStore, connectionsStore } = useContext(RootStoreContext);\r\n\r\n    return (\r\n      <svg\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        style={{\r\n          zIndex: 400,\r\n        }}\r\n      >\r\n        <defs>\r\n          <marker\r\n            id=\"arrowhead\"\r\n            markerWidth=\"10\"\r\n            markerHeight=\"7\"\r\n            fill={dark.colors.textSecondary}\r\n            refX=\"0\"\r\n            refY=\"3.5\"\r\n            orient=\"auto\"\r\n          >\r\n            <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n          </marker>\r\n        </defs>\r\n\r\n        {connectionsStore.connectionsKeys.length > 0\r\n          ? connectionsStore.connectionsKeys.map((key) => {\r\n              const connection = connectionsStore.connections[key];\r\n\r\n              const fromNode = nodesStore.nodes[connection.fromId];\r\n              const toNode = nodesStore.nodes[connection.toId];\r\n\r\n              if (fromNode === undefined || toNode === undefined) {\r\n                return null;\r\n              }\r\n\r\n              const from = {\r\n                x: fromNode.left,\r\n\r\n                y: fromNode.top,\r\n              };\r\n\r\n              const to = {\r\n                x: toNode.left,\r\n\r\n                y: toNode.top,\r\n              };\r\n\r\n              return (\r\n                <ConnectionLine\r\n                  key={`${connection.fromId}${connection.toId}`}\r\n                  from={from}\r\n                  to={to}\r\n                  markerMid=\"url(#arrowhead)\"\r\n                />\r\n              );\r\n            })\r\n          : null}\r\n      </svg>\r\n    );\r\n  }),\r\n);\r\n\r\nexport default ConnectionsContainer;\r\n","import { observer } from 'mobx-react-lite';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { useDrop } from 'react-dnd';\n\nimport { RootStoreContext } from '../../stores';\nimport { ItemTypes } from '../../types/ItemTypes';\nimport { Node } from '../../types/Node';\nimport ContextMenu from '../ContextMenu';\nimport { DraggableDialogueNode } from '../Nodes';\nimport ConnectionsContainer from './ConnectionsContainer';\nimport { Container } from './styles';\n\nconst DragAndDropContainerGlobal: React.FC = observer(() => {\n  const { nodesStore, filesStore } = useContext(RootStoreContext);\n\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [nodeCount, setNodeCount] = useState(nodesStore.nodesKeys.length);\n\n  const moveNode = useCallback(\n    (id: string, left: number, top: number) => {\n      nodesStore.updateNodePosition(id, left, top);\n    },\n    [nodesStore],\n  );\n\n  const addNode = (id: string, left: number, top: number) => {\n    setNodeCount(nodeCount + 1);\n    nodesStore.addNode(id, left, top);\n  };\n\n  const handleAddNode = (event: React.MouseEvent<any, MouseEvent>) => {\n    const identifier = `id:node${nodeCount}`;\n\n    const xPos = event.clientX - 100;\n    const yPos = event.clientY - 75;\n\n    addNode(identifier, xPos, yPos);\n  };\n\n  const loadFileClick = () => {\n    filesStore.setModal(true);\n  };\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.NODE,\n    drop(item: Node, monitor) {\n      const delta = monitor.getDifferenceFromInitialOffset() as {\n        x: number;\n        y: number;\n      };\n\n      const left = Math.round(item.left + delta.x);\n      const top = Math.round(item.top + delta.y);\n\n      moveNode(item.id, left, top);\n      return undefined;\n    },\n  });\n\n  const renderNode = (item: any, key: string) => {\n    return <DraggableDialogueNode key={key} id={key} {...item} />;\n  };\n\n  // if (nodesStore.showModal || filesStore.loadFileModal) {\n  //   return null;\n  // }\n\n  return (\n    <>\n      <ContextMenu\n        options={[\n          { label: 'New Node', callback: handleAddNode },\n          { label: 'Load File', callback: loadFileClick },\n          { label: 'Close' },\n        ]}\n        visible={showContextMenu}\n        changeVisibility={setShowContextMenu}\n      />\n\n      <Container\n        ref={drop}\n        onContextMenu={() => setShowContextMenu(true)}\n        onClick={() => setShowContextMenu(false)}\n      >\n        {nodesStore.nodesKeys.map((key) =>\n          renderNode(nodesStore.nodes[key], key),\n        )}\n        <ConnectionsContainer />\n      </Container>\n    </>\n  );\n});\n\nexport default DragAndDropContainerGlobal;\n","import React from 'react';\r\n\r\nimport { CustomDragLayer, DragAndDropContainerGlobal } from '.';\r\n\r\n// import { Container } from './styles';\r\n\r\nconst DragAroundCustomLayer: React.FC = () => {\r\n  return (\r\n    <>\r\n      <DragAndDropContainerGlobal />\r\n      <CustomDragLayer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAroundCustomLayer;\r\n","import { Close, Menu } from '@material-ui/icons';\r\nimport AnimateHeight from 'react-animate-height';\r\nimport { animated } from 'react-spring';\r\nimport styled from 'styled-components';\r\n\r\nexport const TitleContainer = styled.div`\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-size: 0.8em;\r\n  font-weight: bold;\r\n\r\n  color: ${(props) => props.theme.colors.text};\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  padding: 16px;\r\n`;\r\n\r\nexport const Navbar = styled.div`\r\n  width: 100%;\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  padding: 16px 32px;\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n\r\n  font-size: 30px;\r\n  position: sticky;\r\n`;\r\n\r\nexport const MenuIcon = styled(Menu)`\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CloseIcon = styled(Close)`\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\n// Add smooth transition later\r\n\r\ninterface ContainerProps {\r\n  height: number | string;\r\n}\r\n\r\nexport const Container = styled(AnimateHeight)`\r\n  position: absolute;\r\n  z-index: 400;\r\n  top: 10vh;\r\n  left: 0;\r\n  width: 400px;\r\n  height: ${(props: ContainerProps) => props.height};\r\n\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n`;\r\n\r\nexport const AnimatedIconContainer = styled(animated.div)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 90px;\r\n  height: 100%;\r\n\r\n  padding: 8px 16px;\r\n  margin-right: 4px;\r\n`;\r\n","import { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react';\r\nimport { useTransition } from 'react-spring';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { Connection } from '../../types/Connection';\r\nimport { FileData } from '../../types/FileData';\r\nimport Button from '../Button';\r\nimport { Space } from '../Space';\r\nimport {\r\n  AnimatedIconContainer,\r\n  ButtonsContainer,\r\n  CloseIcon,\r\n  Container,\r\n  MenuIcon,\r\n  Navbar,\r\n  TitleContainer,\r\n} from './styles';\r\n\r\nconst Sidebar: React.FC = observer(() => {\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const trnasitions = useTransition(sidebarOpen, null, {\r\n    from: {\r\n      position: 'absolute',\r\n      opacity: 0,\r\n    },\r\n    enter: {\r\n      opacity: 1,\r\n    },\r\n    leave: {\r\n      opacity: 0,\r\n    },\r\n  });\r\n\r\n  const { nodesStore, connectionsStore, filesStore } = useContext(\r\n    RootStoreContext,\r\n  );\r\n\r\n  const handleSave = () => {\r\n    const connections: Connection[] = [];\r\n\r\n    connectionsStore.connectionsKeys.forEach((key) => {\r\n      connections.push(toJS(connectionsStore.connections[key]));\r\n    });\r\n\r\n    const file: FileData = {\r\n      name: 'NewFile',\r\n      nodes: nodesStore.nodes,\r\n      connections,\r\n    };\r\n\r\n    filesStore.file = file;\r\n  };\r\n\r\n  const handleFileDownload = async () => {\r\n    handleSave();\r\n    const json = JSON.stringify(filesStore.file);\r\n    const blob = new Blob([json], {\r\n      type: 'application/json',\r\n    });\r\n    const href = await URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = href;\r\n    link.download = filesStore.file.name + '.json';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const handleMenuClick = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar>\r\n        {trnasitions.map(({ item, key, props }) =>\r\n          item ? (\r\n            <AnimatedIconContainer key={key} style={props}>\r\n              <CloseIcon fontSize=\"inherit\" onClick={handleMenuClick} />\r\n            </AnimatedIconContainer>\r\n          ) : (\r\n            <AnimatedIconContainer key={key} style={props}>\r\n              <MenuIcon fontSize=\"inherit\" onClick={handleMenuClick} />\r\n            </AnimatedIconContainer>\r\n          ),\r\n        )}\r\n        <Space width={32} height=\"100%\" />\r\n        <TitleContainer>Dialogue Editor</TitleContainer>\r\n      </Navbar>\r\n      <Container height={sidebarOpen ? 'auto' : 0} duration={400}>\r\n        <ButtonsContainer>\r\n          <Button\r\n            onClick={() => {\r\n              nodesStore.reset();\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n          <Space width=\"100%\" height={20} />\r\n          <Button onClick={handleFileDownload}>Download</Button>\r\n          <Space width=\"100%\" height={20} />\r\n          <Button onClick={() => filesStore.setModal(true)}>Load File</Button>\r\n        </ButtonsContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Sidebar;\r\n","import { Form as RawForm } from '@unform/web';\r\nimport styled from 'styled-components';\r\n\r\ninterface ModalContainerProps {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n  width: ${(props: ModalContainerProps) => props.width || 400}px;\r\n  height: ${(props: ModalContainerProps) => props.height || 400}px;\r\n  border-radius: 16px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalTitle = styled.h2`\r\n  width: 100%;\r\n  height: 12.5%;\r\n\r\n  padding: 8px 24px;\r\n  text-align: center;\r\n\r\n  color: ${(props) => props.theme.colors.text};\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  width: 100%;\r\n  height: 87.5%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Form = styled(RawForm)`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 24px;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Modal } from 'portal-modals';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { ModalContainer, ModalContent, ModalTitle } from './styles';\r\n\r\n// import PortalModal from '../../components/Modal/PortalModal';\r\nconst LoadModal: React.FC = observer(() => {\r\n  const { filesStore } = useContext(RootStoreContext);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onabort = () => console.log('Read aborted');\r\n      reader.onerror = () => console.log('Read failed');\r\n      reader.onload = () => {\r\n        const content = reader.result?.toString();\r\n        const json = content !== undefined && JSON.parse(content);\r\n\r\n        filesStore.file = json;\r\n        filesStore.loadFileContent();\r\n        filesStore.setModal(false);\r\n      };\r\n\r\n      reader.readAsText(acceptedFiles[0]);\r\n    },\r\n    [filesStore],\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: 'application/json',\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      isVisible={filesStore.loadFileModal}\r\n      onBackdropClick={() => filesStore.setModal(false)}\r\n    >\r\n      <ModalContainer>\r\n        <ModalTitle>Load File</ModalTitle>\r\n        <ModalContent>\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {isDragActive ? (\r\n              <p>Drop the files here...</p>\r\n            ) : (\r\n              <p>Drag and drop files / Click here</p>\r\n            )}\r\n          </div>\r\n        </ModalContent>\r\n      </ModalContainer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default LoadModal;\r\n","import React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport backend from 'react-dnd-html5-backend';\r\n\r\nimport { DragAroundCustomLayer } from '../../components/DragAndDrop';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport LoadModal from './LoadModal';\r\n\r\n// Add three+ character dialogue option\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      <LoadModal />\r\n      <DndProvider backend={backend}>\r\n        <DragAroundCustomLayer />\r\n      </DndProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    top: 0;\n    left: 0;\n    font-family: 'Fira Code', monospace;\n  }\n\n  html, body {\n    width: 100vw;\n    height: 100vh;\n    background: ${(props) => props.theme.colors.background};\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n  }\n\n  #modal-root {\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 0;\n    left: 0;\n    /* pointer-events: none; */\n    z-index: 1000;\n  }\n`;\n","import 'mobx-react-lite/batchingForReactDom';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport Main from './pages/Main';\r\nimport { GlobalStyles } from './styles/global';\r\nimport { dark } from './styles/themes/dark';\r\n\r\n// import { light } from './styles/themes/light';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={dark}>\r\n      <GlobalStyles />\r\n      <Main />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
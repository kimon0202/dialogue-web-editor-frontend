{"version":3,"sources":["components/Button/styles.ts","components/Button/index.tsx","types/ItemTypes.ts","utils/getStyles.ts","styles/themes/dark.ts","components/Nodes/Connection.tsx","stores/connectionsStore.ts","stores/filesStore.ts","stores/nodesStore.ts","stores/index.ts","components/Nodes/styles.ts","components/Nodes/DialogueNode.tsx","components/Nodes/DialogueNodeDragPreview.tsx","components/Nodes/DraggableDialogueNode.tsx","components/DragAndDrop/styles.ts","components/DragAndDrop/CustomDragLayer.tsx","components/ContextMenu/styles.ts","components/ContextMenu/index.tsx","components/DragAndDrop/ConnectionsContainer.tsx","components/DragAndDrop/DragAndDropContainerGlobal.tsx","components/DragAndDrop/DragAroundCustomLayer.tsx","components/Modal/styles.ts","components/Modal/index.tsx","components/Select/index.tsx","components/Space/index.ts","components/Sidebar/styles.ts","components/Sidebar/index.tsx","components/TextArea/index.tsx","pages/Main/styles.ts","pages/Main/LoadModal.tsx","pages/Main/index.tsx","styles/global.ts","index.tsx"],"names":["StyledButton","styled","button","props","theme","colors","primary","shade","Button","children","onClick","type","ItemTypes","getStyles","left","top","isDragging","transform","position","WebkitTransform","opacity","height","getItemStyles","initialOffset","currentOffset","display","x","y","dark","name","background","backgroundSecondary","text","textSecondary","accent","success","info","warning","danger","Connection","from","x1","y1","to","x2","y2","markerMid","stroke","strokeWidth","strokeLinecap","markerUnits","d","ConnectionsStore","rootStore","connections","this","fromId","toId","key","newMap","update","$set","id","connectionsKeys","forEach","indexOf","Object","keys","decorate","observable","addConnection","action","removeConnnection","computed","FilesStore","file","loadFileModal","state","connection","nodesStore","nodes","connectionsStore","setModal","loadFileContent","NodesStore","dialogueType","undefined","activeNodeModal","mode","$merge","newNodes","nodesKeys","filesStore","opts","filter","activeNode","possibleOptions","option","push","label","value","updateNodePosition","addNode","setActiveNode","reset","activeNodeOptions","showModal","RootStoreContext","createContext","Container","div","ContentContainer","DeleteIcon","Delete","EditIcon","Edit","Header","Title","h5","Body","textarea","DialogueNode","observer","identifier","useContext","useState","nodeBody","setNodeBody","editNode","fontSize","defaultValue","placeholder","onDoubleClick","onChange","event","target","onBlur","DialogueNodeDragPreview","DraggableDialogueNode","useDrag","item","collect","monitor","drag","preview","useEffect","getEmptyImage","captureDraggingState","ref","style","DragLayer","CustomDragLayer","useDragLayer","getItem","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","renderItem","ContextItem","last","ContextMenu","options","visible","changeVisibility","setPosition","handleContextMenu","preventDefault","clientX","clientY","document","addEventListener","removeEventListener","map","index","arr","toString","length","callback","handleContextMenuBlur","ConnectionsContainer","memo","width","zIndex","markerWidth","markerHeight","fill","refX","refY","orient","points","fromNode","toNode","DragAndDropContainerGlobal","showContextMenu","setShowContextMenu","nodeCount","setNodeCount","moveNode","useCallback","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","xPos","yPos","onContextMenu","renderNode","DragAroundCustomLayer","Backdrop","Modal","show","onBackdropClick","showBackdrop","Select","multiple","values","setValues","selectRef","useRef","useField","fieldName","registerField","current","getValue","setValue","className","htmlFor","hasSelectAll","labelledBy","vals","Space","TitleContainer","ButtonsContainer","Navbar","MenuIcon","Menu","CloseIcon","Close","Sidebar","sidebarOpen","setSidebarOpen","handleSave","toJS","createdAt","Date","now","handleFileDownload","a","json","JSON","stringify","blob","Blob","URL","createObjectURL","href","link","createElement","download","body","appendChild","click","removeChild","handleMenuClick","TextArea","rest","textareaRef","error","path","padding","resize","outline","autoCorrect","autoComplete","ModalContainer","ModalTitle","h2","ModalContent","Center","BoxContainer","Form","RawForm","LoadModal","onDrop","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","content","result","parse","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","Main","editNodeFormRef","handleEditFormSubmit","data","inConnections","outConnections","node","deleteNode","initialText","initialDialogueType","tempIn","tempOut","handleGetInitialConnections","onSubmit","initialData","autoFocus","submitForm","renderModal","DndProvider","backend","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dd817575.chunk.js","sourcesContent":["import { shade } from 'polished';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  background: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n\r\n  border: none;\r\n  outline: none;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 150px;\r\n  height: 60px;\r\n  border-radius: 16px;\r\n\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n\r\n  :hover {\r\n    background: ${(props) => shade(0.25, props.theme.colors.primary)};\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledButton } from './styles';\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactElement | string;\r\n  onClick?(): void;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export const ItemTypes = {\r\n  NODE: 'node',\r\n};\r\n","import { CSSProperties } from 'react';\r\nimport { XYCoord } from 'react-dnd';\r\n\r\nexport const getStyles = (\r\n  left: number,\r\n  top: number,\r\n  isDragging: boolean,\r\n): CSSProperties => {\r\n  const transform = `translate3d(${left}px, ${top}px, 0)`;\r\n\r\n  return {\r\n    position: 'absolute',\r\n    transform,\r\n    WebkitTransform: transform,\r\n    opacity: isDragging ? 0 : 1,\r\n    height: isDragging ? 0 : '',\r\n  };\r\n};\r\n\r\nexport const getItemStyles = (\r\n  initialOffset: XYCoord | null,\r\n  currentOffset: XYCoord | null,\r\n): CSSProperties => {\r\n  if (!initialOffset || !currentOffset) {\r\n    return {\r\n      display: 'none',\r\n    };\r\n  }\r\n\r\n  const { x, y } = currentOffset;\r\n  const transform = `translate(${x}px, ${y}px)`;\r\n\r\n  return {\r\n    transform,\r\n    WebkitTransform: transform,\r\n  };\r\n};\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\nexport const dark: DefaultTheme = {\r\n  name: 'dark',\r\n  colors: {\r\n    background: '#131417',\r\n    backgroundSecondary: '#1E1F26',\r\n    primary: '#3511B8',\r\n    text: '#fff',\r\n    textSecondary: '#e7dfdd',\r\n    accent: '#a239ca',\r\n    success: '#1B7C16',\r\n    info: '#0078A8',\r\n    warning: '#FCA105',\r\n    danger: '#D81E1E',\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nimport { dark } from '../../styles/themes/dark';\r\n\r\ninterface Props {\r\n  from: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  to: {\r\n    x: number;\r\n    y: number;\r\n  };\r\n  markerMid: string;\r\n}\r\n\r\nconst Connection: React.FC<Props> = ({\r\n  from: { x: x1, y: y1 },\r\n  to: { x: x2, y: y2 },\r\n  markerMid,\r\n}) => {\r\n  return (\r\n    <path\r\n      stroke={dark.colors.textSecondary}\r\n      strokeWidth={2}\r\n      strokeLinecap=\"round\"\r\n      markerUnits={2}\r\n      d={`M${x1 + 100},${y1 + 75}L${(x1 + x2 + 200) / 2},${\r\n        (y1 + y2 + 150) / 2\r\n      }L${x2 + 100},${y2 + 75}`}\r\n      markerMid={markerMid}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Connection;\r\n","import update from 'immutability-helper';\nimport { action, computed, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { ConnectionMap } from '../types/Connection';\n\nclass ConnectionsStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  connections: ConnectionMap = {};\n\n  public addConnection(fromId: string, toId: string) {\n    const key = `${fromId}|${toId}`;\n\n    const newMap = update(this.connections, {\n      [key]: {\n        $set: {\n          fromId,\n          toId,\n        },\n      },\n    });\n\n    this.connections = newMap;\n  }\n\n  public removeConnnection(id: string) {\n    this.connectionsKeys.forEach((key) => {\n      if (key.indexOf(id) !== -1) {\n        delete this.connections[key];\n      }\n    });\n  }\n\n  public get connectionsKeys() {\n    return Object.keys(this.connections);\n  }\n}\n\ndecorate(ConnectionsStore, {\n  connections: observable,\n  addConnection: action,\n  removeConnnection: action,\n  connectionsKeys: computed,\n});\n\nexport default ConnectionsStore;\n","import update from 'immutability-helper';\nimport { action, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { ConnectionMap } from '../types/Connection';\nimport { FileData } from '../types/FileData';\n\nclass FilesStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  file: FileData = {} as FileData;\n  loadFileModal = false;\n\n  public setModal(state: boolean) {\n    this.loadFileModal = state;\n  }\n\n  public loadFileContent() {\n    if (!this.file) {\n      return;\n    }\n\n    let connections: ConnectionMap = {};\n\n    this.file.connections.forEach((connection) => {\n      const key = `${connection.fromId}|${connection.toId}`;\n\n      connections = update(connections, {\n        [key]: {\n          $set: {\n            fromId: connection.fromId,\n            toId: connection.toId,\n          },\n        },\n      });\n    });\n\n    this.rootStore.nodesStore.nodes = this.file.nodes;\n    this.rootStore.connectionsStore.connections = connections;\n  }\n}\n\ndecorate(FilesStore, {\n  file: observable,\n  loadFileModal: observable,\n  setModal: action,\n  loadFileContent: action,\n});\n\nexport default FilesStore;\n","import update from 'immutability-helper';\nimport { action, computed, decorate, observable } from 'mobx';\n\nimport { RootStore } from '.';\nimport { FileData } from '../types/FileData';\nimport { NodeMap } from '../types/Node';\n\ninterface ActiveNodeModal {\n  id: string;\n  mode: 'delete' | 'edit' | null;\n}\n\nclass NodesStore {\n  private rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  nodes: NodeMap = {\n    'id:rootNode': {\n      id: 'id:rootNode',\n      left: 80,\n      top: 20,\n      dialogueType: undefined,\n      text: '',\n    },\n  };\n\n  activeNodeModal: ActiveNodeModal = {\n    id: '',\n    mode: null,\n  };\n\n  public updateNodePosition(id: string, left: number, top: number) {\n    this.nodes = update(this.nodes, {\n      [id]: {\n        $merge: { left, top },\n      },\n    });\n  }\n\n  public addNode(id: string, left: number, top: number) {\n    const newNodes = update(this.nodes, {\n      [id]: {\n        $set: {\n          left,\n          top,\n          id,\n          dialogueType: undefined,\n          text: '',\n        },\n      },\n    });\n\n    this.nodes = newNodes;\n  }\n\n  public deleteNode(id: string) {\n    this.nodesKeys.forEach((key) => {\n      if (key === id) {\n        delete this.nodes[id];\n      }\n    });\n  }\n\n  public setActiveNode(id: string, mode: 'delete' | 'edit' | null) {\n    this.activeNodeModal = {\n      id,\n      mode,\n    };\n  }\n\n  public reset() {\n    this.nodes = {\n      'id:rootNode': {\n        id: 'id:rootNode',\n        left: 80,\n        top: 20,\n        dialogueType: undefined,\n        text: '',\n      },\n    };\n    this.rootStore.connectionsStore.connections = {};\n    this.rootStore.filesStore.file = {} as FileData;\n  }\n\n  public get activeNode() {\n    return this.nodes[this.activeNodeModal.id];\n  }\n\n  public get activeNodeOptions() {\n    const opts = this.nodesKeys.filter((key) => key !== this.activeNode.id);\n    const possibleOptions: { label: string; value: string }[] = [];\n\n    opts.forEach((option) => {\n      possibleOptions.push({\n        label: option,\n        value: option,\n      });\n    });\n\n    return possibleOptions;\n  }\n\n  public get nodesKeys() {\n    return Object.keys(this.nodes);\n  }\n\n  public get showModal() {\n    return this.activeNodeModal.id !== '';\n  }\n}\n\ndecorate(NodesStore, {\n  nodes: observable,\n  activeNodeModal: observable,\n  updateNodePosition: action,\n  addNode: action,\n  setActiveNode: action,\n  reset: action,\n  activeNode: computed,\n  activeNodeOptions: computed,\n  nodesKeys: computed,\n  showModal: computed,\n});\n\nexport default NodesStore;\n","import { createContext } from 'react';\r\n\r\nimport ConnectionsStore from './connectionsStore';\r\nimport FilesStore from './filesStore';\r\nimport NodesStore from './nodesStore';\r\n\r\nexport class RootStore {\r\n  public nodesStore: NodesStore = new NodesStore(this);\r\n  public connectionsStore: ConnectionsStore = new ConnectionsStore(this);\r\n  public filesStore: FilesStore = new FilesStore(this);\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import { Delete, Edit } from '@material-ui/icons';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 200px;\r\n  height: 150px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  height: 120px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: move;\r\n\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n\r\n  background: #fefefe;\r\n  color: #000;\r\n`;\r\n\r\nexport const DeleteIcon = styled(Delete)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.text};\r\n\r\n  cursor: pointer;\r\n  margin-left: 4px;\r\n`;\r\n\r\nexport const EditIcon = styled(Edit)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${(props) => props.theme.colors.text};\r\n\r\n  cursor: pointer;\r\n  margin-left: auto;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  width: 100%;\r\n  height: 30px;\r\n  background: ${(props) => props.theme.colors.primary};\r\n  padding: 4px;\r\n\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n\r\n  cursor: move;\r\n`;\r\n\r\nexport const Title = styled.h5`\r\n  width: 60%;\r\n  height: 100%;\r\n  margin: 0;\r\n\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n\r\n  color: ${(props) => props.theme.colors.text};\r\n`;\r\n\r\nexport const Body = styled.textarea`\r\n  resize: none;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  outline: none;\r\n  padding: 4px;\r\n  color: #000;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport {\r\n  Body,\r\n  Container,\r\n  ContentContainer,\r\n  DeleteIcon,\r\n  EditIcon,\r\n  Header,\r\n  Title,\r\n} from './styles';\r\n\r\ninterface DialogueNodeProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNode: React.FC<DialogueNodeProps> = observer(({ identifier }) => {\r\n  const { nodesStore } = useContext(RootStoreContext);\r\n  const [nodeBody, setNodeBody] = useState(nodesStore.nodes[identifier].text);\r\n\r\n  const deleteNode = () => {\r\n    nodesStore.setActiveNode(identifier, 'delete');\r\n  };\r\n\r\n  const editNode = () => {\r\n    nodesStore.setActiveNode(identifier, 'edit');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>{identifier}</Title>\r\n        <EditIcon fontSize=\"small\" onClick={editNode} />\r\n        <DeleteIcon fontSize=\"small\" onClick={deleteNode} />\r\n      </Header>\r\n      <ContentContainer>\r\n        <Body\r\n          defaultValue={nodeBody}\r\n          placeholder=\"Dialogue Text...\"\r\n          onDoubleClick={editNode}\r\n          onChange={(event) => setNodeBody(event.target.value)}\r\n          onBlur={() => {\r\n            nodesStore.nodes[identifier].text = nodeBody;\r\n          }}\r\n        />\r\n      </ContentContainer>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DialogueNode;\r\n","import React from 'react';\r\n\r\nimport DialogueNode from './DialogueNode';\r\n\r\ninterface DialogueNodeDragPreviewProps {\r\n  identifier: string;\r\n}\r\n\r\nconst DialogueNodeDragPreview: React.FC<DialogueNodeDragPreviewProps> = ({\r\n  identifier,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <DialogueNode identifier={identifier} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueNodeDragPreview;\r\n","import React, { useEffect } from 'react';\r\nimport { DragSourceMonitor, useDrag } from 'react-dnd';\r\nimport { getEmptyImage } from 'react-dnd-html5-backend';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getStyles } from '../../utils/getStyles';\r\nimport DialogueNode from './DialogueNode';\r\n\r\nconst DraggableDialogueNode: React.FC<Node> = ({ id, left, top }) => {\r\n  const [{ isDragging }, drag, preview] = useDrag({\r\n    item: { type: ItemTypes.NODE, id, left, top },\r\n    collect: (monitor: DragSourceMonitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    preview(getEmptyImage(), { captureDraggingState: true });\r\n  }, [preview]);\r\n\r\n  return (\r\n    <div ref={drag} style={getStyles(left, top, isDragging)}>\r\n      <DialogueNode identifier={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableDialogueNode;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  position: relative;\r\n`;\r\n\r\nexport const DragLayer = styled.div`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 100;\r\n  position: fixed;\r\n  pointer-events: none;\r\n`;\r\n","import React from 'react';\r\nimport { useDragLayer } from 'react-dnd';\r\n\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport { getItemStyles } from '../../utils/getStyles';\r\nimport { DialogueNodeDragPreview } from '../Nodes';\r\nimport { DragLayer } from './styles';\r\n\r\nconst CustomDragLayer: React.FC = () => {\r\n  const {\r\n    itemType,\r\n    isDragging,\r\n    item,\r\n    initialOffset,\r\n    currentOffset,\r\n  } = useDragLayer((monitor) => ({\r\n    item: monitor.getItem() as Node,\r\n    itemType: monitor.getItemType(),\r\n    initialOffset: monitor.getInitialSourceClientOffset(),\r\n    currentOffset: monitor.getSourceClientOffset(),\r\n    isDragging: monitor.isDragging(),\r\n  }));\r\n\r\n  const renderItem = () => {\r\n    switch (itemType) {\r\n      case ItemTypes.NODE:\r\n        return <DialogueNodeDragPreview identifier={item.id} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (!isDragging) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <DragLayer>\r\n      <div style={getItemStyles(initialOffset, currentOffset)}>\r\n        {renderItem()}\r\n      </div>\r\n    </DragLayer>\r\n  );\r\n};\r\n\r\nexport default CustomDragLayer;\r\n","import styled from 'styled-components';\r\n\r\ninterface ContainerProps {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface ContextItemProps {\r\n  last: boolean;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  top: ${(props: ContainerProps) => props.y}px;\r\n  left: ${(props: ContainerProps) => props.x + 5}px;\r\n\r\n  z-index: 300;\r\n`;\r\n\r\nexport const ContextItem = styled.div`\r\n  background: #fff;\r\n  border-bottom: ${(props: ContextItemProps) =>\r\n    !props.last ? 'dotted 1px #ccc' : null};\r\n  padding: 5px 25px;\r\n\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: #f1f1f1;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Container, ContextItem } from './styles';\r\n\r\ninterface Position {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Option {\r\n  label: string;\r\n  callback?(event: React.MouseEvent<any, MouseEvent>): void;\r\n}\r\n\r\ninterface Props {\r\n  options: Option[];\r\n  visible: boolean;\r\n  changeVisibility(state: boolean): void;\r\n}\r\n\r\nconst ContextMenu: React.FC<Props> = ({\r\n  options,\r\n  visible,\r\n  changeVisibility,\r\n}) => {\r\n  const [position, setPosition] = useState<Position>({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  const handleContextMenu = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    const { clientX: x, clientY: y } = event;\r\n\r\n    setPosition({ x, y });\r\n  };\r\n\r\n  const handleContextMenuBlur = (event: React.MouseEvent<any, MouseEvent>) => {\r\n    event.preventDefault();\r\n\r\n    changeVisibility(false);\r\n    setPosition({ x: 0, y: 0 });\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('contextmenu', handleContextMenu);\r\n    // document.addEventListener('click', handleContextMenuBlur);\r\n\r\n    return () => {\r\n      document.removeEventListener('contextmenu', handleContextMenu);\r\n      // document.removeEventListener('click', handleContextMenuBlur);\r\n    };\r\n  }, []);\r\n\r\n  if (!visible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Container x={position.x} y={position.y}>\r\n      {options.map((item, index, arr) => {\r\n        return (\r\n          <ContextItem\r\n            key={index.toString()}\r\n            last={arr.length - 1 === index}\r\n            onClick={(event) => {\r\n              if (item.callback) item.callback(event);\r\n              handleContextMenuBlur(event);\r\n            }}\r\n          >\r\n            {item.label}\r\n          </ContextItem>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContextMenu;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { memo, useContext } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { dark } from '../../styles/themes/dark';\r\nimport { Connection as ConnectionLine } from '../Nodes';\r\n\r\n// import { Container } from './styles';\r\nconst ConnectionsContainer: React.FC = memo(\r\n  observer(() => {\r\n    const { nodesStore, connectionsStore } = useContext(RootStoreContext);\r\n\r\n    return (\r\n      <svg\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        style={{\r\n          zIndex: 400,\r\n        }}\r\n      >\r\n        <defs>\r\n          <marker\r\n            id=\"arrowhead\"\r\n            markerWidth=\"10\"\r\n            markerHeight=\"7\"\r\n            fill={dark.colors.textSecondary}\r\n            refX=\"0\"\r\n            refY=\"3.5\"\r\n            orient=\"auto\"\r\n          >\r\n            <polygon points=\"0 0, 10 3.5, 0 7\" />\r\n          </marker>\r\n        </defs>\r\n\r\n        {connectionsStore.connectionsKeys.length > 0\r\n          ? connectionsStore.connectionsKeys.map((key) => {\r\n              const connection = connectionsStore.connections[key];\r\n\r\n              const fromNode = nodesStore.nodes[connection.fromId];\r\n              const toNode = nodesStore.nodes[connection.toId];\r\n\r\n              if (fromNode === undefined || toNode === undefined) {\r\n                return null;\r\n              }\r\n\r\n              const from = {\r\n                x: fromNode.left,\r\n\r\n                y: fromNode.top,\r\n              };\r\n\r\n              const to = {\r\n                x: toNode.left,\r\n\r\n                y: toNode.top,\r\n              };\r\n\r\n              return (\r\n                <ConnectionLine\r\n                  key={`${connection.fromId}${connection.toId}`}\r\n                  from={from}\r\n                  to={to}\r\n                  markerMid=\"url(#arrowhead)\"\r\n                />\r\n              );\r\n            })\r\n          : null}\r\n      </svg>\r\n    );\r\n  }),\r\n);\r\n\r\nexport default ConnectionsContainer;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useContext, useState } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { ItemTypes } from '../../types/ItemTypes';\r\nimport { Node } from '../../types/Node';\r\nimport ContextMenu from '../ContextMenu';\r\nimport { DraggableDialogueNode } from '../Nodes';\r\nimport ConnectionsContainer from './ConnectionsContainer';\r\nimport { Container } from './styles';\r\n\r\nconst DragAndDropContainerGlobal: React.FC = observer(() => {\r\n  const { nodesStore, filesStore } = useContext(RootStoreContext);\r\n\r\n  const [showContextMenu, setShowContextMenu] = useState(false);\r\n  const [nodeCount, setNodeCount] = useState(nodesStore.nodesKeys.length);\r\n\r\n  const moveNode = useCallback(\r\n    (id: string, left: number, top: number) => {\r\n      nodesStore.updateNodePosition(id, left, top);\r\n    },\r\n    [nodesStore],\r\n  );\r\n\r\n  const addNode = (id: string, left: number, top: number) => {\r\n    setNodeCount(nodeCount + 1);\r\n    nodesStore.addNode(id, left, top);\r\n  };\r\n\r\n  const handleAddNode = (event: React.MouseEvent<any, MouseEvent>) => {\r\n    const identifier = `id:node${nodeCount}`;\r\n\r\n    const xPos = event.clientX - 100;\r\n    const yPos = event.clientY - 75;\r\n\r\n    addNode(identifier, xPos, yPos);\r\n  };\r\n\r\n  const loadFileClick = () => {\r\n    filesStore.setModal(true);\r\n  };\r\n\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.NODE,\r\n    drop(item: Node, monitor) {\r\n      const delta = monitor.getDifferenceFromInitialOffset() as {\r\n        x: number;\r\n        y: number;\r\n      };\r\n\r\n      const left = Math.round(item.left + delta.x);\r\n      const top = Math.round(item.top + delta.y);\r\n\r\n      moveNode(item.id, left, top);\r\n      return undefined;\r\n    },\r\n  });\r\n\r\n  const renderNode = (item: any, key: string) => {\r\n    return <DraggableDialogueNode key={key} id={key} {...item} />;\r\n  };\r\n\r\n  if (nodesStore.showModal || filesStore.loadFileModal) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ContextMenu\r\n        options={[\r\n          { label: 'New Node', callback: handleAddNode },\r\n          { label: 'Load File', callback: loadFileClick },\r\n          { label: 'Close' },\r\n        ]}\r\n        visible={showContextMenu}\r\n        changeVisibility={setShowContextMenu}\r\n      />\r\n\r\n      <Container\r\n        ref={drop}\r\n        onContextMenu={() => setShowContextMenu(true)}\r\n        onClick={() => setShowContextMenu(false)}\r\n      >\r\n        {nodesStore.nodesKeys.map((key) =>\r\n          renderNode(nodesStore.nodes[key], key),\r\n        )}\r\n        <ConnectionsContainer />\r\n      </Container>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default DragAndDropContainerGlobal;\r\n","import React from 'react';\r\n\r\nimport { CustomDragLayer, DragAndDropContainerGlobal } from '.';\r\n\r\n// import { Container } from './styles';\r\n\r\nconst DragAroundCustomLayer: React.FC = () => {\r\n  return (\r\n    <>\r\n      <DragAndDropContainerGlobal />\r\n      <CustomDragLayer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragAroundCustomLayer;\r\n","import styled from 'styled-components';\r\n\r\nexport const Backdrop = styled.div`\r\n  background: rgba(10, 10, 10, 0.5);\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  background: transparent;\r\n  width: auto;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  z-index: 300;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-right: -50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Backdrop, Container } from './styles';\r\n\r\ninterface Props {\r\n  children?: React.ReactElement | string;\r\n  show: boolean;\r\n  showBackdrop?: boolean;\r\n  onBackdropClick?(): void;\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({\r\n  children,\r\n  show,\r\n  onBackdropClick,\r\n  showBackdrop = true,\r\n}) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showBackdrop ? <Backdrop onClick={onBackdropClick} /> : null}\r\n      <Container>{children}</Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import './styles.css';\r\n\r\nimport { useField } from '@unform/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport MultiSelect from 'react-multi-select-component';\r\n\r\ninterface SelectProps {\r\n  name: string;\r\n  options: { label: string; value: string }[];\r\n  label?: string;\r\n}\r\n\r\ntype Props = JSX.IntrinsicElements['select'] & SelectProps;\r\n\r\nconst Select: React.FC<Props> = ({\r\n  name,\r\n  multiple,\r\n  options,\r\n  placeholder,\r\n  label,\r\n}) => {\r\n  const [values, setValues] = useState<any[]>([]);\r\n  const selectRef = useRef(null);\r\n\r\n  const { fieldName, registerField, defaultValue } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: selectRef.current,\r\n      getValue: () => {\r\n        if (!multiple) {\r\n          return values[0];\r\n        }\r\n\r\n        return values;\r\n      },\r\n      setValue: (ref, value) => {\r\n        if (!multiple) {\r\n          setValues([value]);\r\n        }\r\n      },\r\n    });\r\n  }, [registerField, fieldName, multiple, values]);\r\n\r\n  useEffect(() => {\r\n    if (defaultValue && multiple) {\r\n      setValues(defaultValue);\r\n    }\r\n  }, [defaultValue, multiple]);\r\n\r\n  const handleValueChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    if (!multiple) {\r\n      const vals = [];\r\n      vals.push(event.target.value);\r\n      setValues(vals);\r\n    }\r\n  };\r\n\r\n  if (!multiple) {\r\n    return (\r\n      <div className=\"select-group\">\r\n        {label && <label htmlFor={fieldName}>{label}</label>}\r\n        <select\r\n          ref={selectRef}\r\n          value={values[0]}\r\n          onChange={handleValueChange}\r\n          className=\"multi-select single\"\r\n          placeholder={placeholder}\r\n          defaultValue={defaultValue}\r\n        >\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // eslint-disable-next-line jsx-a11y/control-has-associated-label\r\n  return (\r\n    <div className=\"select-group\">\r\n      {label && <label htmlFor={fieldName}>{label}</label>}\r\n      <MultiSelect\r\n        options={options}\r\n        value={values}\r\n        onChange={setValues}\r\n        hasSelectAll={false}\r\n        labelledBy=\"Select\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  width: number | string;\r\n  height: number | string;\r\n}\r\n\r\nexport const Space = styled.div`\r\n  width: ${(props: Props) =>\r\n    typeof props.width === typeof 'aa' ? props.width : `${props.width}px`};\r\n\r\n  height: ${(props: Props) =>\r\n    typeof props.height === typeof 'aa' ? props.height : `${props.height}px`};\r\n`;\r\n","import { Close, Menu } from '@material-ui/icons';\r\nimport styled from 'styled-components';\r\n\r\ninterface VerticalContainerProps {\r\n  isOpen: boolean;\r\n}\r\n\r\nexport const TitleContainer = styled.div`\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-size: 0.8em;\r\n  font-weight: bold;\r\n\r\n  color: ${(props) => props.theme.colors.text};\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  padding: 16px;\r\n`;\r\n\r\nexport const Navbar = styled.div`\r\n  width: 100%;\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  padding: 16px 32px;\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n\r\n  font-size: 30px;\r\n  position: sticky;\r\n`;\r\n\r\nexport const MenuIcon = styled(Menu)`\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CloseIcon = styled(Close)`\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\n// Add smooth transition later\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  z-index: 400;\r\n  top: 10vh;\r\n  left: 0;\r\n  width: 15vw;\r\n  height: 90vh;\r\n\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n`;\r\n","import { toJS } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { RootStoreContext } from '../../stores';\r\nimport { Connection } from '../../types/Connection';\r\nimport { FileData } from '../../types/FileData';\r\nimport Button from '../Button';\r\nimport { Space } from '../Space';\r\nimport {\r\n  ButtonsContainer,\r\n  CloseIcon,\r\n  Container,\r\n  MenuIcon,\r\n  Navbar,\r\n  TitleContainer,\r\n} from './styles';\r\n\r\nconst Sidebar: React.FC = observer(() => {\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n\r\n  const { nodesStore, connectionsStore, filesStore } = useContext(\r\n    RootStoreContext,\r\n  );\r\n\r\n  const handleSave = () => {\r\n    const connections: Connection[] = [];\r\n\r\n    connectionsStore.connectionsKeys.forEach((key) => {\r\n      connections.push(toJS(connectionsStore.connections[key]));\r\n    });\r\n\r\n    const file: FileData = {\r\n      name: 'NewFile',\r\n      createdAt: Date.now(),\r\n      nodes: nodesStore.nodes,\r\n      connections,\r\n    };\r\n\r\n    filesStore.file = file;\r\n  };\r\n\r\n  const handleFileDownload = async () => {\r\n    handleSave();\r\n    const json = JSON.stringify(filesStore.file);\r\n    const blob = new Blob([json], { type: 'application/json' });\r\n    const href = await URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = href;\r\n    link.download = filesStore.file.name + '.json';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const handleMenuClick = () => {\r\n    setSidebarOpen(!sidebarOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar>\r\n        {sidebarOpen ? (\r\n          <CloseIcon fontSize=\"inherit\" onClick={handleMenuClick} />\r\n        ) : (\r\n          <MenuIcon fontSize=\"inherit\" onClick={handleMenuClick} />\r\n        )}\r\n        <Space width={32} height=\"100%\" />\r\n        <TitleContainer>Dialogue Editor</TitleContainer>\r\n      </Navbar>\r\n      {sidebarOpen ? (\r\n        <Container>\r\n          <ButtonsContainer>\r\n            <Button\r\n              onClick={() => {\r\n                nodesStore.reset();\r\n                nodesStore.setActiveNode('', null);\r\n              }}\r\n            >\r\n              Clear\r\n            </Button>\r\n            <Space width=\"100%\" height={20} />\r\n            <Button onClick={handleFileDownload}>Download</Button>\r\n            <Space width=\"100%\" height={20} />\r\n            <Button onClick={() => filesStore.setModal(true)}>Load File</Button>\r\n          </ButtonsContainer>\r\n        </Container>\r\n      ) : null}\r\n      {/* <Container>\r\n        <Space width=\"100%\" height={30} />\r\n        <ButtonsContainer>\r\n          <Button\r\n            onClick={() => {\r\n              nodesStore.reset();\r\n              nodesStore.setActiveNode('', null);\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n          <Space width=\"100%\" height={20} />\r\n          <Button onClick={handleSave}>Save</Button>\r\n          <Space width=\"100%\" height={20} />\r\n          <Button onClick={() => filesStore.setModal(true)}>Load File</Button>\r\n          {filesStore.file.name ? (\r\n            <>\r\n              <Space width=\"100%\" height={20} />\r\n              <Button onClick={() => handleFileDownload()}>\r\n                Download File\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </ButtonsContainer>\r\n      </Container> */}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Sidebar;\r\n","import { useField } from '@unform/core';\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\ninterface Props {\r\n  name: string;\r\n  label?: string;\r\n  width?: number | string;\r\n  height?: number | string;\r\n}\r\n\r\ntype TextareaProps = JSX.IntrinsicElements['textarea'] & Props;\r\n\r\nconst TextArea: React.FC<TextareaProps> = ({\r\n  name,\r\n  label,\r\n  width = 400,\r\n  height = 400,\r\n  ...rest\r\n}) => {\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const { fieldName, defaultValue, registerField, error } = useField(name);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n\r\n      path: 'value',\r\n\r\n      ref: textareaRef.current,\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <div>\r\n      {label ? <label htmlFor={fieldName}>{label}</label> : null}\r\n\r\n      <textarea\r\n        id={fieldName}\r\n        ref={textareaRef}\r\n        defaultValue={defaultValue}\r\n        style={{\r\n          width,\r\n          height,\r\n          fontSize: 18,\r\n          padding: 10,\r\n          resize: 'none',\r\n          outline: 'none',\r\n        }}\r\n        autoCorrect=\"off\"\r\n        autoComplete=\"off\"\r\n        {...rest}\r\n      />\r\n\r\n      {error ? <span>{error}</span> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import { Form as RawForm } from '@unform/web';\r\nimport styled from 'styled-components';\r\n\r\ninterface ModalContainerProps {\r\n  width?: number;\r\n  height?: number;\r\n}\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: ${(props) => props.theme.colors.backgroundSecondary};\r\n  width: ${(props: ModalContainerProps) => props.width || 400}px;\r\n  height: ${(props: ModalContainerProps) => props.height || 400}px;\r\n  border-radius: 16px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  color: ${(props) => props.theme.colors.textSecondary};\r\n`;\r\n\r\nexport const ModalTitle = styled.h2`\r\n  width: 100%;\r\n  height: 12.5%;\r\n\r\n  padding: 8px 24px;\r\n  text-align: center;\r\n\r\n  color: ${(props) => props.theme.colors.text};\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  width: 100%;\r\n  height: 87.5%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Center = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Form = styled(RawForm)`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  padding: 24px;\r\n`;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nimport Modal from '../../components/Modal';\r\nimport { RootStoreContext } from '../../stores';\r\nimport { ModalContainer, ModalContent, ModalTitle } from './styles';\r\n\r\nconst LoadModal: React.FC = observer(() => {\r\n  const { filesStore } = useContext(RootStoreContext);\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onabort = () => console.log('Read aborted');\r\n      reader.onerror = () => console.log('Read failed');\r\n      reader.onload = () => {\r\n        const content = reader.result?.toString();\r\n        const json = content !== undefined && JSON.parse(content);\r\n\r\n        filesStore.file = json;\r\n        filesStore.loadFileContent();\r\n        filesStore.setModal(false);\r\n      };\r\n\r\n      reader.readAsText(acceptedFiles[0]);\r\n    },\r\n    [filesStore],\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: 'application/json',\r\n    multiple: false,\r\n  });\r\n\r\n  return (\r\n    <Modal\r\n      show={filesStore.loadFileModal}\r\n      onBackdropClick={() => filesStore.setModal(false)}\r\n    >\r\n      <ModalContainer>\r\n        <ModalTitle>Load File</ModalTitle>\r\n        <ModalContent>\r\n          <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            {isDragActive ? (\r\n              <p>Drop the files here...</p>\r\n            ) : (\r\n              <p>Drag and drop files / Click here</p>\r\n            )}\r\n          </div>\r\n        </ModalContent>\r\n      </ModalContainer>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default LoadModal;\r\n","import { FormHandles, SubmitHandler } from '@unform/core';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useRef } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport backend from 'react-dnd-html5-backend';\r\n\r\nimport Button from '../../components/Button';\r\nimport { DragAroundCustomLayer } from '../../components/DragAndDrop';\r\nimport Modal from '../../components/Modal';\r\nimport Select from '../../components/Select';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { Space } from '../../components/Space';\r\nimport TextArea from '../../components/TextArea';\r\nimport { RootStoreContext } from '../../stores';\r\nimport LoadModal from './LoadModal';\r\nimport {\r\n  BoxContainer,\r\n  Center,\r\n  Form,\r\n  ModalContainer,\r\n  ModalContent,\r\n  ModalTitle,\r\n} from './styles';\r\n\r\n// Add three+ character dialogue option\r\n\r\ntype DialogueType = 'player' | 'ai-character';\r\n\r\ninterface NodeEditFormData {\r\n  text: string;\r\n  inConnections: { label: string; value: string }[];\r\n  outConnections: { label: string; value: string }[];\r\n  type: DialogueType;\r\n}\r\n\r\nconst Main: React.FC = observer(() => {\r\n  const { nodesStore, connectionsStore } = useContext(RootStoreContext);\r\n  const editNodeFormRef = useRef<FormHandles>(null);\r\n\r\n  const deleteNode = (id: string) => {\r\n    nodesStore.deleteNode(id);\r\n    connectionsStore.removeConnnection(id);\r\n  };\r\n\r\n  const handleEditFormSubmit: SubmitHandler<NodeEditFormData> = (data) => {\r\n    // console.log(data);\r\n    const { inConnections, outConnections, text, type } = data;\r\n\r\n    const node = nodesStore.activeNode;\r\n\r\n    node.text = text;\r\n    node.dialogueType = type;\r\n\r\n    outConnections.forEach((connection) => {\r\n      connectionsStore.addConnection(node.id, connection.value);\r\n    });\r\n\r\n    if (node.id !== 'id:rootNode') {\r\n      inConnections.forEach((connection) => {\r\n        connectionsStore.addConnection(connection.value, node.id);\r\n      });\r\n    }\r\n\r\n    nodesStore.setActiveNode('', null);\r\n  };\r\n\r\n  const handleGetInitialConnections = (id: string) => {\r\n    const tempIn: { label: string; value: string }[] = [];\r\n    const tempOut: { label: string; value: string }[] = [];\r\n\r\n    connectionsStore.connectionsKeys.forEach((key) => {\r\n      if (connectionsStore.connections[key].fromId === id) {\r\n        tempOut.push({\r\n          label: connectionsStore.connections[key].toId,\r\n          value: connectionsStore.connections[key].toId,\r\n        });\r\n      }\r\n\r\n      if (connectionsStore.connections[key].toId === id) {\r\n        tempIn.push({\r\n          label: connectionsStore.connections[key].fromId,\r\n          value: connectionsStore.connections[key].fromId,\r\n        });\r\n      }\r\n    });\r\n\r\n    return {\r\n      inConnections: tempIn,\r\n      outConnections: tempOut,\r\n    };\r\n  };\r\n\r\n  const renderModal = () => {\r\n    if (nodesStore.activeNodeModal.mode === 'delete') {\r\n      return (\r\n        <Modal\r\n          show={nodesStore.showModal}\r\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\r\n        >\r\n          <ModalContainer>\r\n            <ModalTitle>Are you sure you want to delete this node?</ModalTitle>\r\n            <ModalContent>\r\n              <Button\r\n                onClick={() => {\r\n                  deleteNode(nodesStore.activeNodeModal.id);\r\n                  nodesStore.setActiveNode('', null);\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n              <Space width=\"100%\" height={20} />\r\n              <Button onClick={() => nodesStore.setActiveNode('', null)}>\r\n                No\r\n              </Button>\r\n            </ModalContent>\r\n          </ModalContainer>\r\n        </Modal>\r\n      );\r\n    }\r\n    if (nodesStore.activeNodeModal.mode === 'edit') {\r\n      const node = nodesStore.activeNode;\r\n      const initialText = node.text;\r\n      const initialDialogueType = node.dialogueType;\r\n\r\n      const { inConnections, outConnections } = handleGetInitialConnections(\r\n        node.id,\r\n      );\r\n\r\n      return (\r\n        <Modal\r\n          show={nodesStore.showModal}\r\n          onBackdropClick={() => nodesStore.setActiveNode('', null)}\r\n        >\r\n          <ModalContainer width={1024} height={800}>\r\n            <ModalTitle>\r\n              {`Editing ${nodesStore.activeNodeModal.id}`}\r\n            </ModalTitle>\r\n            <ModalContent>\r\n              <Form\r\n                ref={editNodeFormRef}\r\n                onSubmit={handleEditFormSubmit}\r\n                initialData={{\r\n                  text: initialText,\r\n                  inConnections,\r\n                  outConnections,\r\n                  type: initialDialogueType,\r\n                }}\r\n              >\r\n                <BoxContainer>\r\n                  {node.id === 'id:rootNode' ? null : (\r\n                    <Select\r\n                      name=\"inConnections\"\r\n                      label=\"In Connections\"\r\n                      multiple\r\n                      options={nodesStore.activeNodeOptions}\r\n                    />\r\n                  )}\r\n                  <Select\r\n                    name=\"outConnections\"\r\n                    label=\"Out Connections\"\r\n                    multiple\r\n                    options={nodesStore.activeNodeOptions}\r\n                  />\r\n                  <Select\r\n                    name=\"type\"\r\n                    label=\"Dialogue Type\"\r\n                    options={[\r\n                      {\r\n                        label: 'Select Dialogue Type...',\r\n                        value: 'None',\r\n                      },\r\n                      {\r\n                        label: 'Player',\r\n                        value: 'Player',\r\n                      },\r\n                      {\r\n                        label: 'AICharacter',\r\n                        value: 'AICharacter',\r\n                      },\r\n                    ]}\r\n                  />\r\n                </BoxContainer>\r\n                <Space width=\"100%\" height={20} />\r\n                <Center>\r\n                  <TextArea\r\n                    name=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Dialogue text\"\r\n                    width={960}\r\n                  />\r\n                </Center>\r\n                <Space width=\"100%\" height={30} />\r\n                <Center>\r\n                  <Button onClick={() => editNodeFormRef.current?.submitForm()}>\r\n                    Save\r\n                  </Button>\r\n                </Center>\r\n              </Form>\r\n            </ModalContent>\r\n          </ModalContainer>\r\n        </Modal>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      {renderModal()}\r\n      <LoadModal />\r\n      <DndProvider backend={backend}>\r\n        <DragAroundCustomLayer />\r\n      </DndProvider>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    top: 0;\r\n    left: 0;\r\n    font-family: 'Fira Code', monospace;\r\n  }\r\n\r\n  html, body {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: ${(props) => props.theme.colors.background};\r\n  }\r\n\r\n  #root {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n","import 'mobx-react-lite/batchingForReactDom';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport Main from './pages/Main';\r\nimport { GlobalStyles } from './styles/global';\r\nimport { dark } from './styles/themes/dark';\r\n\r\n// import { light } from './styles/themes/light';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={dark}>\r\n      <GlobalStyles />\r\n      <Main />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}